##Package: StdCtrls
##Status: Completed,Checked (peter3)
----------------------------------------------------------------------------------------------------
@@JvFixedEditPopUp.pas
Summary
    Contains routines for assigning a default popup menu to any edit like control.
Author
  Peter Thörnqvist
----------------------------------------------------------------------------------------------------
@@FixedDefaultEditPopUseResourceString
<TITLE FixedDefaultEditPopUseResourceString procedure>
Summary
  Changes how popup menu text is retrieved.
Description
  Call FixedDefaultEditPopUseResourceString to change the way the texts on the popup menu items are
  retrieved.
  
  By default, texts for the popup menu is retrieved directly from Windows' and thus is in the same
  language as the installed Windows language. If you for some reason prefer using resourcestrings
  (can be translated using the ITE), call this function with Value set to true. To switch back to
  using
  Windows' own strings again, set Value to false.
Parameters
  Value - Pass false to use Windows' own menu strings, pass true to use the resourcestrings defined
  in          the unit.

----------------------------------------------------------------------------------------------------
@@FixedDefaultEditPopup
<TITLE FixedDefaultEditPopup function>
Summary
  \Returns a popup menu that implements the basic actions normally associated with an edit control.
Description
  Use FixedDefaultEditPopup to access a default implementation \of an edit control's popup menu. This
  function accomplishes two things: it enables a custom control to easily support a default edit
  popup menu with Cut, \Copy, Paste etc. commands and it fixes a bug in the default popup
  implementation in
  TCustomEdit and TCustomMemo.
  
  The edit control as implemented by Microsoft has one minor bug: the paste command is enabled even
  when the control is marked as read-only. No actual paste is possible, however. The popup menu
  returned by the function fixes this bug.
  
  To enable a custom control to react to the commands of the popup menu, it must handle several
  messages and set certain windows styles. The messages the control must handle are:
  
  <TABLE>
    Message      Action
    -----------  -----------------------------------------------
    WM_CUT       Cuts the selected text
    WM_COPY      Copies the selected text
    WM_PASTE     Paste text into the current selection
    WM_CLEAR     Deletes current selection
    EM_SETSEL    Select all text (if wParam = 0 and lParam = -1)
    EM_GETSEL    Return the current selection
    WM_UNDO      Undo last edit command
    EM_CANUNDO   Return whether undo is available </TABLE>
  
  In addition, the control should set the ES_READONLY style for the control if it has a read-only
  property or if it is read-only by default. Setting the ES_READONLY style, can be done with
  SetWindowLong using GWL_STYLE.
Parameters
  AEdit  - The control to associate the popup menu with.
  Update - Specifies whether to update the enabled state of the menu items.
See Also
  FixedDefaultEditPopUseResourceString

