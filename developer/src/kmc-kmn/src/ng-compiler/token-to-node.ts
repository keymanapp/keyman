/*
 * Keyman is copyright (C) SIL Global. MIT License.
 *
 * Created by Dr Mark C. Sinclair on 2025-07-04
 *
 * KMC KMN Next Generation Compiler
 *
 * TokenTypes to NodeTypes mapping for TokenRule
 */

import { NodeTypes } from "./node-types.js";
import { TokenTypes } from "./token-types.js";

export const TOKEN_TO_NODE = [
  {tokenType: TokenTypes.ALWAYS,              nodeType: NodeTypes.ALWAYS},
  {tokenType: TokenTypes.ANSI,                nodeType: NodeTypes.ANSI},
  {tokenType: TokenTypes.ANY,                 nodeType: NodeTypes.ANY},
  {tokenType: TokenTypes.BASELAYOUT,          nodeType: NodeTypes.BASELAYOUT},
  {tokenType: TokenTypes.BASELAYOUT_SHORTCUT, nodeType: NodeTypes.BASELAYOUT_SHORTCUT},
  {tokenType: TokenTypes.BEEP,                nodeType: NodeTypes.BEEP},
  {tokenType: TokenTypes.BEGIN,               nodeType: NodeTypes.BEGIN},
  {tokenType: TokenTypes.BITMAP,              nodeType: NodeTypes.BITMAP},
  {tokenType: TokenTypes.BITMAP_HEADER,       nodeType: NodeTypes.BITMAP_HEADER},
  {tokenType: TokenTypes.CALL,                nodeType: NodeTypes.CALL},
  {tokenType: TokenTypes.CAPS,                nodeType: NodeTypes.CAPS},
  {tokenType: TokenTypes.CAPSALWAYSOFF,       nodeType: NodeTypes.CAPSALWAYSOFF},
  {tokenType: TokenTypes.CAPSONONLY,          nodeType: NodeTypes.CAPSONONLY},
  {tokenType: TokenTypes.CASEDKEYS,           nodeType: NodeTypes.CASEDKEYS},
  {tokenType: TokenTypes.CLEARCONTEXT,        nodeType: NodeTypes.CLEARCONTEXT},
  {tokenType: TokenTypes.CONTEXT,             nodeType: NodeTypes.CONTEXT},
  {tokenType: TokenTypes.COPYRIGHT,           nodeType: NodeTypes.COPYRIGHT},
  {tokenType: TokenTypes.COPYRIGHT_HEADER,    nodeType: NodeTypes.COPYRIGHT_HEADER},
  {tokenType: TokenTypes.DEADKEY,             nodeType: NodeTypes.DEADKEY},
  {tokenType: TokenTypes.DECIMAL,             nodeType: NodeTypes.DECIMAL},
  {tokenType: TokenTypes.DISPLAYMAP,          nodeType: NodeTypes.DISPLAYMAP},
  {tokenType: TokenTypes.EQUAL,               nodeType: NodeTypes.EQUAL},
  {tokenType: TokenTypes.ETHNOLOGUECODE,      nodeType: NodeTypes.ETHNOLOGUECODE},
  {tokenType: TokenTypes.FIX,                 nodeType: NodeTypes.FIX},
  {tokenType: TokenTypes.FREES,               nodeType: NodeTypes.FREES},
  {tokenType: TokenTypes.GROUP,               nodeType: NodeTypes.GROUP},
  {tokenType: TokenTypes.HANGUL,              nodeType: NodeTypes.HANGUL},
  {tokenType: TokenTypes.HEXADECIMAL,         nodeType: NodeTypes.HEXADECIMAL},
  {tokenType: TokenTypes.HOTKEY,              nodeType: NodeTypes.HOTKEY},
  {tokenType: TokenTypes.HOTKEY_HEADER,       nodeType: NodeTypes.HOTKEY_HEADER},
  {tokenType: TokenTypes.IF,                  nodeType: NodeTypes.IF},
  {tokenType: TokenTypes.INCLUDECODES,        nodeType: NodeTypes.INCLUDECODES},
  {tokenType: TokenTypes.INDEX,               nodeType: NodeTypes.INDEX},
  {tokenType: TokenTypes.KEYBOARDVERSION,     nodeType: NodeTypes.KEYBOARDVERSION},
  {tokenType: TokenTypes.KEYMAN,              nodeType: NodeTypes.KEYMAN},
  {tokenType: TokenTypes.KEYMANONLY,          nodeType: NodeTypes.KEYMANONLY},
  {tokenType: TokenTypes.KEYMANWEB,           nodeType: NodeTypes.KEYMANWEB},
  {tokenType: TokenTypes.KEYS,                nodeType: NodeTypes.KEYS},
  {tokenType: TokenTypes.KEY_CODE,            nodeType: NodeTypes.KEY_CODE},
  {tokenType: TokenTypes.KMFL,                nodeType: NodeTypes.KMFL},
  {tokenType: TokenTypes.KMW_EMBEDCSS,        nodeType: NodeTypes.KMW_EMBEDCSS},
  {tokenType: TokenTypes.KMW_EMBEDJS,         nodeType: NodeTypes.KMW_EMBEDJS},
  {tokenType: TokenTypes.KMW_HELPFILE,        nodeType: NodeTypes.KMW_HELPFILE},
  {tokenType: TokenTypes.KMW_HELPTEXT,        nodeType: NodeTypes.KMW_HELPTEXT},
  {tokenType: TokenTypes.KMW_RTL,             nodeType: NodeTypes.KMW_RTL},
  {tokenType: TokenTypes.LANGUAGE,            nodeType: NodeTypes.LANGUAGE},
  {tokenType: TokenTypes.LANGUAGE_HEADER,     nodeType: NodeTypes.LANGUAGE_HEADER},
  {tokenType: TokenTypes.LAYER,               nodeType: NodeTypes.LAYER},
  {tokenType: TokenTypes.LAYER_SHORTCUT,      nodeType: NodeTypes.LAYER_SHORTCUT},
  {tokenType: TokenTypes.LAYOUTFILE,          nodeType: NodeTypes.LAYOUTFILE},
  {tokenType: TokenTypes.LAYOUT_HEADER,       nodeType: NodeTypes.LAYOUT_HEADER},
  {tokenType: TokenTypes.MATCH,               nodeType: NodeTypes.MATCH},
  {tokenType: TokenTypes.MESSAGE,             nodeType: NodeTypes.MESSAGE},
  {tokenType: TokenTypes.MESSAGE_HEADER,      nodeType: NodeTypes.MESSAGE_HEADER},
  {tokenType: TokenTypes.MNEMONICLAYOUT,      nodeType: NodeTypes.MNEMONICLAYOUT},
  {tokenType: TokenTypes.MODIFIER,            nodeType: NodeTypes.MODIFIER},
  {tokenType: TokenTypes.NAME,                nodeType: NodeTypes.NAME},
  {tokenType: TokenTypes.NAMED_CONSTANT,      nodeType: NodeTypes.NAMED_CONSTANT},
  {tokenType: TokenTypes.NAME_HEADER,         nodeType: NodeTypes.NAME_HEADER},
  {tokenType: TokenTypes.NEWCONTEXT,          nodeType: NodeTypes.NEWCONTEXT},
  {tokenType: TokenTypes.NEWLAYER,            nodeType: NodeTypes.NEWLAYER},
  {tokenType: TokenTypes.NEWLINE,             nodeType: NodeTypes.LINE},
  {tokenType: TokenTypes.NOMATCH,             nodeType: NodeTypes.NOMATCH},
  {tokenType: TokenTypes.NOTANY,              nodeType: NodeTypes.NOTANY},
  {tokenType: TokenTypes.NOT_EQUAL,           nodeType: NodeTypes.NOT_EQUAL},
  {tokenType: TokenTypes.NUL,                 nodeType: NodeTypes.NUL},
  {tokenType: TokenTypes.OCTAL,               nodeType: NodeTypes.OCTAL},
  {tokenType: TokenTypes.OFF,                 nodeType: NodeTypes.OFF},
  {tokenType: TokenTypes.OLDLAYER,            nodeType: NodeTypes.OLDLAYER},
  {tokenType: TokenTypes.ON,                  nodeType: NodeTypes.ON},
  {tokenType: TokenTypes.ONLY,                nodeType: NodeTypes.ONLY},
  {tokenType: TokenTypes.OUTS,                nodeType: NodeTypes.OUTS},
  {tokenType: TokenTypes.PARAMETER,           nodeType: NodeTypes.PARAMETER},
  {tokenType: TokenTypes.PLATFORM,            nodeType: NodeTypes.PLATFORM},
  {tokenType: TokenTypes.PLATFORM_SHORTCUT,   nodeType: NodeTypes.PLATFORM_SHORTCUT},
  {tokenType: TokenTypes.POSTKEYSTROKE,       nodeType: NodeTypes.POSTKEYSTROKE},
  {tokenType: TokenTypes.READONLY,            nodeType: NodeTypes.READONLY},
  {tokenType: TokenTypes.RESET,               nodeType: NodeTypes.RESET},
  {tokenType: TokenTypes.RETURN,              nodeType: NodeTypes.RETURN},
  {tokenType: TokenTypes.SAVE,                nodeType: NodeTypes.SAVE},
  {tokenType: TokenTypes.SET,                 nodeType: NodeTypes.SET},
  {tokenType: TokenTypes.SHIFT,               nodeType: NodeTypes.SHIFT},
  {tokenType: TokenTypes.SHIFTFREESCAPS,      nodeType: NodeTypes.SHIFTFREESCAPS},
  {tokenType: TokenTypes.STORE,               nodeType: NodeTypes.STORE},
  {tokenType: TokenTypes.STRING,              nodeType: NodeTypes.STRING},
  {tokenType: TokenTypes.TARGETS,             nodeType: NodeTypes.TARGETS},
  {tokenType: TokenTypes.UNICODE,             nodeType: NodeTypes.UNICODE},
  {tokenType: TokenTypes.USE,                 nodeType: NodeTypes.USE},
  {tokenType: TokenTypes.USING,               nodeType: NodeTypes.USING},
  {tokenType: TokenTypes.U_CHAR,              nodeType: NodeTypes.U_CHAR},
  {tokenType: TokenTypes.VERSION,             nodeType: NodeTypes.VERSION},
  {tokenType: TokenTypes.VERSION_HEADER,      nodeType: NodeTypes.VERSION_HEADER},
  {tokenType: TokenTypes.VISUALKEYBOARD,      nodeType: NodeTypes.VISUALKEYBOARD},
  {tokenType: TokenTypes.WEAVER,              nodeType: NodeTypes.WEAVER},
  {tokenType: TokenTypes.WINDOWSLANGUAGES,    nodeType: NodeTypes.WINDOWSLANGUAGES},
];
