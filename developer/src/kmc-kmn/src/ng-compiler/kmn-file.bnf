kmnTree: line*
line: contentLine|blankLine
contentLine: whitespace? content whitespace? comment? newline
blankLine: whitespace? comment? newline
padding: whitespace|continuationNewline
continuationNewline: whitespace? continuation whitespace? newline
content: stringSystemStoreAssign|casedkeysStoreAssign|hotkeyStoreAssign|
  variableStoreAssign|ruleBlock
stringSystemStoreAssign: stringSystemStore padding string
stringSystemStore: store leftBracket whitespace? amphasand stringSystemStoreName whitespace? rightBracket
stringSystemStoreName: bitmap|copyright|displaymap|ethnologuecode|includecodes|
  keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|
  language|layoutfile|message|mnemoniclayout|name|targets|version|
  visualkeyboard|windowslanguages
casedkeysStoreAssign: casedkeysStore paddedText+
casedkeysStore: store leftBracket whitespace? amphasand casedkeys whitespace? rightBracket
hotkeyStoreAssign: hotkeyStore padding virtualKey
hotkeyStore: store leftBracket whitespace? amphasand hotkey whitespace? rightBracket
variableStoreAssign: variableStore paddedText+
paddedText: padding text
text: textRange|simpleText|outsStatement
simpleText: string|virtualKey|uChar
textRange: simpleText rangeEnd+
rangeEnd: whitespace? range whitespace? simpleText
virtualKey: leftSquare whitespace? spacedShiftCode* keyCode whitespace? rightSquare
spacedShiftCode: shiftcode whitespace
variableStore: store bracketedStoreName
bracketedStoreName: leftBracket whitespace? variableStoreName whitespace? rightBracket
variableStoreName: parameter
outsStatement: outs bracketedStoreName
ruleBlock: beginBlock|groupBlock|productionBlock
beginBlock: beginStatement spacedChevron useStatement
beginStatement: begin spacedEntryPoint?
spacedEntryPoint: whitespace entryPoint
entryPoint: unicode|newcontext|postkeystroke|ansi
spacedChevron:whitespace chevron whitespace
useStatement: use bracketedGroupName
bracketedGroupName: leftBracket whitespace? groupNameOrKeyword whitespace? rightBracket
groupNameOrKeyword: groupName|permittedKeyword
permittedKeyword: newcontext|postkeystroke
groupName: parameter
groupBlock: groupStatement spacedGroupQualifier?
groupStatement: group bracketedGroupName
spacedGroupQualifier: whitespace groupQualifier
groupQualifier: usingKeys|readonly
usingKeys: using whitespace keys
productionBlock: lhsBlock spacedChevron rhsBlock
lhsBlock: lhsStatement paddedLhsStatement*
paddedLhsStatement: padding lhsStatement
lhsStatement: platformStatement
rhsBlock: rhsStatement
rhsStatement: useStatement

anyStatement: any bracketedStoreName

ifLikeStatement: ifStatement|layerStatement|platformStatement|baselayoutStatement
ifStatement: ifStoreStoreStatement|ifStoreStringStatement|ifSystemStoreStoreStatement
  ifSystemStoreStringStatement
ifStoreStoreStatement: if leftBracket whitespace? variableStoreName whitespace
  comparison whitespace variableStoreName whitespace? rightBracket
ifStoreStringStatement: if leftBracket whitespace? variableStoreName whitespace
  comparison whitespace string whitespace? rightBracket
ifSystemStoreStoreStatement: if leftBracket whitespace? amphasand systemStoreName
  whitespace comparison whitespace variableStoreName whitespace? rightBracket
ifSystemStoreStringStatement: if leftBracket whitespace? amphasand systemStoreName
  whitespace comparison whitespace string whitespace? rightBracket
ifSystemStoreName: platform|layer|baselayout|newLayer|oldLayer
comparison:equal|notEqual
systemStoreName: stringSystemStoreName|casedkeys|hotkey|layer|newLayer|oldLayer
layerStatement: layer bracketedString
platformStatement: platform bracketedString
baselayoutStatement: baselayout bracketedString
bracketedString: leftBracket whitespace? string whitespace? rightBracket
