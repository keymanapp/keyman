kmnTree: line*
line: content? NEWLINE
content: systemStoreAssign|capsAlwaysOff|capsOnOnly|shiftFreesCaps|
  normalStoreAssign|ruleBlock
text: plainText|outsStatement
plainText: textRange|simpleText
simpleText: STRING|virtualKey|U_CHAR
textRange: simpleText rangeEnd+
rangeEnd: RANGE simpleText
virtualKey: LEFT_SQ modifier* KEY_CODE RIGHT_SQ
modifier: SHIFT|CAPS|MODIFIER
outsStatement: OUTS bracketedStoreName
ruleBlock: beginStatement|groupStatement|usingKeysProductionBlock|readOnlyProductionBlock|
  contextProductionBlock
beginStatement: BEGIN entryPoint? CHEVRON useStatement
entryPoint: UNICODE|NEWCONTEXT|POSTKEYSTROKE|ANSI
useStatement: USE LEFT_BR groupName RIGHT_BR
groupName: PARAMETER|OCTAL|permittedKeyword
permittedKeyword: NEWCONTEXT|POSTKEYSTROKE
groupStatement: GROUP LEFT_BR groupName RIGHT_BR groupQualifier?
groupQualifier: usingKeys|READONLY
usingKeys: USING KEYS
usingKeysProductionBlock: usingKeysLhsBlock CHEVRON rhsBlock
readOnlyProductionBlock: readOnlyLhsBlock CHEVRON rhsBlock
contextProductionBlock: contextLhsBlock CHEVRON rhsBlock
usingKeysLhsBlock: usingKeysInputBlock
readOnlyLhsBlock: MATCH|NOMATCH|readOnlyInputBlock|ifLikeStatement+
contextLhsBlock: contextInputBlock|nulInputBlock
usingKeysInputBlock: NUL? ifLikeStatement* InputContext? PLUS keystroke
readOnlyInputBlock: NUL? ifLikeStatement* keystroke
contextInputBlock: NUL? ifLikeStatement* inputContext
nulInputBlock: NUL ifLikeStatement*
inputContext: inputElement+
inputElement: anyStatement|notAnyStatement|deadKeyStatement|contextStatement|text
keystroke: anyStatement|text
anyStatement: ANY bracketedStoreName
notAnyStatement: NOTANY bracketedStoreName
ifLikeStatement: ifStatement|platformStatement|baselayoutStatement
ifStatement: ifNormalStoreStatement|ifSystemStoreStatement
ifNormalStoreStatement: IF LEFT_BR normalStoreName
  comparison plainText+ RIGHT_BR
ifSystemStoreStatement: IF LEFT_BR systemStoreNameForIf
  comparison plainText+ RIGHT_BR
systemStoreNameForIf: systemStoreName|BASELAYOUT|LAYER|NEWLAYER|OLDLAYER|PLATFORM
comparison:EQUAL|NOT_EQUAL
layerStatement: LAYER_SHORTCUT LEFT_BR STRING RIGHT_BR
platformStatement: PLATFORM_SHORTCUT LEFT_BR STRING RIGHT_BR
baselayoutStatement: BASELAYOUT_SHORTCUT LEFT_BR STRING RIGHT_BR
rhsBlock: outputStatement+|contextOutputBlock|CONTEXT|RETURN|NUL
contextOutputBlock: CONTEXT? outputStatement+
outputStatement: useStatement|callStatement|setNormalStore|saveStatement|
  resetStore|deadKeyStatement|setSystemStore|layerStatement|indexStatement|
  contextStatement|text|BEEP
callStatement: CALL bracketedStoreName
saveStatement: SAVE bracketedStoreName
deadKeyStatement: DEADKEY bracketedStoreName
indexStatement: INDEX LEFT_BR normalStoreName COMMA offset RIGHT_BR
offset: OCTAL|PARAMETER
contextStatement: CONTEXT LEFT_BR offset RIGHT_BR

# System and Variable Store Rules
systemStoreAssign: systemStore text+
systemStore: STORE LEFT_BR systemStoreName RIGHT_BR
systemStoreName: BITMAP|CASEDKEYS|COPYRIGHT|DISPLAYMAP|ETHNOLOGUECODE|
  HOTKEY|INCLUDECODES|KEYBOARDVERSION|KMW_EMBEDCSS|KMW_EMBEDJS|KMW_HELPFILE|
  KMW_HELPTEXT|KMW_RTL|LANGUAGE|LAYOUTFILE|MESSAGE|MNEMONICLAYOUT|NAME|TARGETS|
  VERSION|VISUALKEYBOARD|WINDOWSLANGUAGES|CAPSALWAYSOFF|CAPSONONLY|SHIFTFREESCAPS
normalStoreAssign: normalStore text+
normalStore: STORE bracketedStoreName
bracketedStoreName: LEFT_BR normalStoreName RIGHT_BR
normalStoreName: PARAMETER|OCTAL
setNormalStore: SET LEFT_BR normalStoreName EQUAL text+ RIGHT_BR
setSystemStore: SET LEFT_BR systemStoreNameForSet EQUAL text+ RIGHT_BR
systemStoreNameForSet: systemStoreName|LAYER
resetStore: RESET bracketedStoreName
capsAlwaysOff: CAPS ALWAYS OFF
capsOnOnly: CAPS ON ONLY
shiftFreesCaps: SHIFT FREES CAPS
