<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
  <title>JVCL Guidelines</title>
  <meta http-equiv="Content-Type"
 content="text/html; charset=windows-1252">
  <link rel="STYLESHEET" href="styles/default.css" type="text/css">
</head>
<body>
<h1>JEDI VCL Guidelines</h1>
<hr>
<p> &nbsp;</p>
<p> Coordinated by <a href="mailto:obones@users.sourceforge.net">Olivier
Sannier</a><br>
Version 1.01 (Draft 7) Mar 08, 2005</p>
<p> &nbsp;</p>
<p> Coordinated by <a href="mailto:peter3@users.sourceforge.net">Peter
Thörnqvist</a><br>
Version 1.01 (Draft 7) Feb 23, 2004</p>
<p> &nbsp;</p>
<p> Coordinated by <a href="mailto:mbeck1@compuserve.com">Michael Beck</a><br>
Version 1.00 (Draft 6) May 15, 2002</p>
<p> &nbsp;</p>
<h2><a name="contents">Contents</a></h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<a href="#introduction">1 -</a> INTRODUCTION
<p><a href="#history">1.1</a> History<br>
<a href="#trademarks">1.2</a> Trademarks<br>
<a href="#borland3p">1.3</a> Relationship to CodeGear and third party<br>
<a href="#delphiversions">1.4</a> CodeGear Delphi versions supported<br>
<a href="#newusers">1.5</a> Queries from new users</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<a href="#distribution">2 -</a> DISTRIBUTION
<p><a href="#opensource">2.1</a> Open Source<br>
<a href="#grouping">2.2</a> Grouping Components into Packages<br>
<a href="#repository">2.3</a> Official repository<br>
&nbsp;&nbsp;&nbsp;<a href="#libcontents">2.3.1</a> Contents</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<a href="#policy">3 -</a> POLICY ON INCLUDING COMPONENTS
<p><a href="#rfp">3.1</a> Request for Proposal (RFP)<br>
<a href="#bestcomponent">3.2</a> "Best Component"<br>
<a href="#license">3.3</a> Legal License<br>
<a href="#sourcecode">3.4</a> Source code<br>
<a href="#submission">3.5</a> Proper submission<br>
<a href="#quality">3.6</a> Quality and perceived usefulness</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<a href="#maintenance">4 -</a> LIBRARY MAINTENANCE&nbsp;PROCEDURE
<p><a href="#selection">4.1</a> Selection procedure<br>
<a href="#update">4.2</a> Update interval<br>
<a href="#versioncontrol">4.3</a> Version control<br>
<a href="#announcing">4.4</a> Announcing updates<br>
<a href="#bugreports">4.5</a> Bug reports and fixes<br>
&nbsp;&nbsp;&nbsp;<a href="#patches">4.5.1</a> Patches<br>
<a href="#techsupport">4.6</a> Technical Support<br>
<a href="#cbuilder">4.7</a> C++ Builder Compatibility</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<a href="#standards">5 -</a> COMPONENT&nbsp;CODING STANDARDS
<p><a href="#sections">5.1</a> Required sections for each component<br>
&nbsp;&nbsp;&nbsp;<a href="#header">5.1.1</a> Header (author name/etc,
version control&nbsp;info)<br>
&nbsp;&nbsp;&nbsp;<a href="#prefixes">5.1.4</a> Usage of Prefixes in
Code<br>
&nbsp;&nbsp;&nbsp;<a href="#assertions">5.1.5</a> Assertions<br>
<a href="#names">5.2</a> Component names<br>
<a href="#authority">5.3</a> Librarian's authority to change component
names<br>
&nbsp;&nbsp;&nbsp;<a href="#changing">5.3.1</a> Changing a component
name after it has been released<br>
<a href="#formatting">5.4</a> Source code formatting<br>
<a href="#comments">5.5</a> Comments in Code<br>
<a href="#other">5.6</a> Other considerations</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<a href="#designing">6 -</a> COMPONENT DESIGN/ORGANIZATION
<p><a href="#design">6.1</a> Component Design<br>
&nbsp;&nbsp;&nbsp;<a href="#inheritcomp">6.1.1</a> Inheritance vs.
Composition<br>
&nbsp;&nbsp;&nbsp;<a href="#inheritance">6.1.2</a> Inheritance<br>
&nbsp;&nbsp;&nbsp;<a href="#scope">6.1.3</a> Method Scope<br>
&nbsp;&nbsp;&nbsp;<a href="#private">6.1.4</a> Private Fields/Variables<br>
&nbsp;&nbsp;&nbsp;<a href="#asm">6.1.5</a> ASM<br>
&nbsp;&nbsp;&nbsp;<a href="#reference">6.1.6</a> Reference to
Design-time Units<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in RunTime Code<br>
&nbsp;&nbsp;&nbsp;<a href="#ifdef">6.1.7</a> Usage of $IFDEF
Conditional Compiler<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Directives<br>
&nbsp;&nbsp;&nbsp;<a href="#calls">6.1.8</a> Calls to Component Events<br>
<a href="#packages">6.2</a> Packages<br>
&nbsp;&nbsp;&nbsp;<a href="#regist">6.2.1</a> Registration Units<br>
&nbsp;&nbsp;&nbsp;<a href="#unitorg">6.2.2</a> Organization into .PASs
and .DPKs<br>
&nbsp;&nbsp;&nbsp;<a href="#pkgversion">6.2.3</a> Package Versioning<br>
<a href="#compiling">6.3</a> Procedures for compiling components<br>
&nbsp;&nbsp;&nbsp;<a href="#borlanddelphi">6.3.1</a> CodeGear Delphi<br>
<a href="#otherlibs">6.4</a> Functions requiring other libraries<br>
<a href="#demo">6.5</a> Demo Project<br>
<a href="#helpfile">6.6</a> Help File<br>
<a href="#pkginstall">6.7</a> Package Installation<br>
<a href="#resources">6.8</a> Resouces/Graphics<br>
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<a href="#admin">7 -</a> ADMINISTRATIVE DETAILS
<p><a href="#librarian">7.1</a> Librarian<br>
<a href="#documentor">7.2</a> Documentor (Help Team)<br>
<a href="#referees">7.3</a> Referees<br>
<a href="#transitions">7.4</a> Transitions<br>
</p>
<a href="#glossary"></a><br>
<a href="#glossary">8 -</a> GLOSSARY<br>
<a href="#checklist"></a>
<p><a href="#checklist">9 -</a> CHECKLIST<br>
<a href="#history"></a> </p>
<p><a href="#checklist">10 -</a> VERSION HISTORY<br>
&nbsp;</p>
<p>&nbsp;</p>
<table cellpadding="0" cellspacing="0">
  <tbody>
    <tr>
      <td width="475">
      <h3><a name="introduction">1 - INTRODUCTION</a></h3>
      </td>
      <td align="center" width="100"><a href="#contents">Contents</a></td>
    </tr>
  </tbody>
</table>
&nbsp;
<p>This is a standard for establishing and maintaining JEDI-VCL, an
open source, user-supported library of components designed to interface
with CodeGear Delphi. You are encouraged to read it over and forward
comments to our newsgroups. You can subscribe at:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="news://news.delphi-jedi.org">news://news.delphi-jedi.org</a>
</p>
<p>&nbsp;</p>
<p>This document is "inherited" from similar work done by the members
of CompuServe Nantucket Forum (NANFORUM) for Clipper, and we would like
to acknowledge it gratefully here.</p>
<p>&nbsp;</p>
<h5> <a name="history">1.1 History</a></h5>
<p>When Project JEDI ("Joint Endeavor of Delphi Innovators) was formed
in 1997 to translate API headers into Delphi, it was envisaged that
component writing - especially wrappers for the API calls that are
surfaced to Delphi through the translations - would eventually become a
project activity.&nbsp; </p>
<p>&nbsp; </p>
<p> In our recent reassertion of the project's goals we confirmed that
intention and expanded it to encompass the general world of free
components. Project JEDI intends to work with CodeGear R &amp; D and
its
Code Central repository project, as well as other developers and
collectors of freeware components, to bring this work into easy reach
of all Delphi developers. </p>
<h5><a name="trademarks">1.2 Trademarks</a> </h5>
<p>Delphi is a registered trademark of Inprise Corporation. Inprise
Corporation will be referred to as CodeGear throughout this document. </p>
<h5><a name="borland3p">1.3 Relationship to CodeGear and third party</a>
</h5>
<p>JEDI-VCL is a project independent of any third party developer or
CodeGear. There is no official "sanction" or "seal of approval" from
CodeGear. Any decision to accept and include a component into the
JEDI-VCL components will be made without regard to the existence of
components performing similar functions in any commercial or
non-commercial third party or CodeGear product, provided no copyright
or
patent restrictions are violated. </p>
<p>&nbsp; </p>
<p>The intention is not that JEDI-VCL should compete with third party
products but, rather, that it fill in the holes in CodeGear Delphi's
standard VCL library. Since overlaps of functionality already occur
between other third-party libraries, it is considered impracticable to
try to avoid them in our own considerations. </p>
<p>&nbsp; </p>
<p>Developers submitting JEDI-VCL components may be corporate
developers, third party developers, independent consultant/programmers,
hobbyists or any other people developing in Delphi. Perhaps even
CodeGear employees will contribute. No individual is precluded from
contributing on the basis of a particular affiliation. </p>
<p>&nbsp; </p>
<p>If CodeGear employees submit components, they would do so as
individuals, with no implication made nor inference drawn that CodeGear
was either involved in the project or is committed to supporting the
public domain library. </p>
<p>CodeGear is permitted and encouraged to include free of charge any
of
the JEDI-VCL components in future releases of Delphi. </p>
<h5><a name="delphiversions">1.4 CodeGear Delphi versions supported</a>
</h5>
<p>JEDI-VCL components will be designed to work with the version of
CodeGear Delphi and C++ Builder which are current at the time of
release, as well as the previous one if that is technically possible.
For example, at the time of this writing (March 2005) Delphi 2005
(current), Delphi 7 (previous), C++ Builder 6 (current) and C++ Builder
5 (previous) would be supported. Many of the components will be
compatible with earlier versions of CodeGear Delphi, especially with
versions 5 and 6 as they share the same VCL with C++ Builder. However,
ensuring compatibility will be the responsibility of the user. A user
wanting a component to work with other versions of CodeGear Delphi will
have to make the necessary modifications to the source code.
Nevertheless, a component's developer may choose to include compiler
switches to provide compatibility with earlier versions, at his/her
discretion. If support for prior versions is claimed, it will be tested
and validated by Project JEDI. </p>
<p>&nbsp; </p>
<p>Components published in the JEDI-VCL should work in the current
retail release of Delphi. In cases where a component author does not
have access to the current product release, Project JEDI will try to
assist by arranging for testing by other members who have the current
product release. </p>
<p>&nbsp; </p>
<p>Project JEDI will provide on the Web an overview showing what
product versions a published component was explicitly tested with. When
a new Delphi version is released, this overview will be updated as the
components are tested and verified against the new release. </p>
<p>Code needs periodic maintenance to stay "current" - it may still
compile five versions later, but may not have kept up with evolving UI
or coding style. </p>
<h5><a name="newusers">1.5 Queries from new users</a> </h5>
<p>Queries from new users interested in finding out about the JEDI-VCL
should be handled in a uniform and courteous way. An information page
will be created on this web site to explain what the JEDI-VCL is and
how to contact the people currently maintaining it. A text message can
be sent in response to any query.</p>
<p>&nbsp;</p>
<table border="0" cellspacing="0">
  <tbody>
    <tr>
      <td width="475">
      <h3><a name="distribution">2 - DISTRIBUTION</a></h3>
      </td>
      <td align="center" width="100"><br>
      </td>
    </tr>
  </tbody>
</table>
<h5><a name="opensource">2.1 Open Source</a> </h5>
<p>JEDI-VCL, its source code, and documentation will be open source
software. It is not for sale and shall not be sold. Project JEDI shall
require no fee or contribution of any kind from anyone wanting to
download the software from the Project JEDI web site. A procedure will
be developed for submitting components through the web site. </p>
<h5><a name="grouping">2.2 Grouping Components into Packages</a> </h5>
<p>JEDI-VCL will be provided in separate functional packages. To ensure
future compatibility, users of these packages will be required to
distribute only the official JEDI released packages. This does not
preclude developers from building their own packages from the
individual components.<br>
</p>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>Currently we envisage following packages:</p>
<table>
  <tbody>
    <tr>
      <td width="96">JvGeneral</td>
      <td width="276">General Components</td>
    </tr>
    <tr>
      <td width="96">JvDB</td>
      <td width="276">Database Components</td>
    </tr>
    <tr>
      <td width="96">JvCOMM</td>
      <td width="276">Communication Components</td>
    </tr>
    <tr>
      <td width="96">JvBusiness</td>
      <td width="276">General Business Components</td>
    </tr>
    <tr>
      <td width="96">JVCL</td>
      <td width="276">Improved Delphi VCL Components</td>
    </tr>
    <tr>
      <td width="96">JvGraphic</td>
      <td width="276">Graphic Components</td>
    </tr>
    <tr>
      <td width="96">JvInstall</td>
      <td width="276">Install Components</td>
    </tr>
    <tr>
      <td width="96">JvInternet</td>
      <td width="276">Internet Components</td>
    </tr>
    <tr>
      <td width="96">JvMisc</td>
      <td width="276">Miscellaneous Components</td>
    </tr>
    <tr>
      <td width="96">JvNet</td>
      <td width="276">Network Components</td>
    </tr>
    <tr>
      <td width="96">JvWin</td>
      <td width="276">Windows related generic Components</td>
    </tr>
    <tr>
      <td width="96">JvWinNT</td>
      <td width="276">Win NT specific Components</td>
    </tr>
    <tr>
      <td width="96">JvWin95</td>
      <td width="276">Win 95 specific Components</td>
    </tr>
    <tr>
      <td width="96">JvWin98</td>
      <td width="276">Win 98 specific Components</td>
    </tr>
    <tr>
      <td width="96">JvReport</td>
      <td width="276">Report Components</td>
    </tr>
    <tr>
      <td width="96">JvExperts</td>
      <td width="276">Experts/Wizards for Delphi IDE</td>
    </tr>
    <tr>
      <td width="96">Other packages</td>
      <td width="276">to be added as needed</td>
    </tr>
  </tbody>
</table>
<h5><a name="repository">2.3 Official repository</a> </h5>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p><img src="images/vclmodel.gif" height="238" width="113"></p>
It is possible that copies of JEDI-VCL packages will be downloaded and
distributed elsewhere. While this is not discouraged, the only official
copy of JEDI-VCL, its packages and all associated documentation shall
be that which is maintained by volunteers in an appropriate library on
the Project JEDI Web site.
<h5><a name="libcontents">2.3.1 Contents</a> </h5>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>The deliverables that make up the official posting on Project JEDI
Web site shall be: </p>
<p>2.3.1.1&nbsp;&nbsp;&nbsp; JV-TMP.ZIP </p>
<p>Contains templates of the file and documentation header blocks,
including samples for prospective authors (JV-TMP.HLP, JV-TMP.PAS) </p>
<p>2.3.1.2&nbsp;&nbsp;&nbsp; JEDI-VCL100.ZIP<br>
</p>
<p>Main JEDI-VCL Library Release 1.0. It will contain all the packages,
all components, and all documentation/Help files. Also included will be
a short information file used as a response to new user queries (see
paragraph 1.5) </p>
<p>2.3.1.3&nbsp;&nbsp;&nbsp; JEDI XXX Library n for Delphi v.ZIP </p>
<p>This is the individual zipped package (see 2.2) Release &lt;n.&gt;
for Delphi Release &lt;v&gt;. As stated in 1.4 the supported Delphi
release will be the current and the previous one. </p>
<p>For example, a Zip file containing Release 1.0 of Internet
components for Delphi 5 would be called: </p>
<p>"JEDI Internet Library 1.00 for Delphi 5.zip" </p>
<p>and would support Delphi 4 and Delphi 5. </p>
<p>2.3.1.4&nbsp;&nbsp;&nbsp; JV_XXX.ZIP<br>
</p>
<p>Individual components, available for download separately from their
respective packages. (e.g. JvWinSock.ZIP, normally part of the Internet
package "JEDI Internet library 1.00 for Delphi 5.zip"). Developers may
use them individually in their private packages. </p>
<p>2.3.1.5&nbsp;&nbsp;&nbsp; Patch X for JEDI XXX Library n for Delphi
v.ZIP<br>
</p>
<p>Patch files (e.g. "Patch 2 for JEDI Internet library 1.00 for Delphi
5.zip"- see 4.5.1). </p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<table border="0" cellspacing="0">
  <tbody>
    <tr>
      <td width="475">
      <h3><a name="policy">3 - POLICY ON INCLUDING COMPONENTS</a></h3>
      </td>
      <td align="center" width="100"><br>
      </td>
    </tr>
  </tbody>
</table>
<h5><a name="rfp">3.1 Request for Proposal (RFP)</a> </h5>
<p>If a need for a new component has been identified, Project JEDI will
place a RFP on the Web site, and send email to JEDI members. In cases
where a member identifies a need and submits a ready component, its
files shall be included in the RFP as a "Proof of Concept". </p>
<h5><a name="bestcomponent">3.2 "Best Component"</a> </h5>
<p>In the event that more than one developer submits components or
packages that perform substantially the same services, referees will
evaluate the alternatives according to their power, functionality,
flexibility, and ease of use and choose the one to be included. Because
of the cooperative, non-commercial nature of the library, no
contributor should feel offended when duplicate components need to be
excluded. </p>
<p>When benefit is perceived from merging two substantially similar
components or packages to enhance functionality, the referees (see
paragraph 6.3) may exercise their prerogative to do so. The authors
would be closely involved in the process and the referees may choose to
a Request for Comments (RFC) to gain additional information from the
community and ensure a better design. </p>
<h5><a name="license">3.3 Legal License</a> </h5>
<p>Each author submitting source code must include as part of that code
a statement that the work is original and that he or she is placing the
code into the public domain, or releasing it under the MPL (see 5.1.1
and 5.1.2). The librarian (see paragraph 7.1) and referees should make
a reasonable effort to ensure that no copyright source code, such as
that supplied with some third party libraries, finds its way into the
JEDI-VCL. However, under no circumstances will the librarian, referees,
or any other party other than the submitter be responsible for
copyright code that appears in the library accidentally. </p>
<h5><a name="sourcecode">3.4 Source code</a></h5>
<p>The author must provide full source code for every routine to be
included in JEDI-VCL. No routine will be considered for inclusion in
the library if only compiled code (DCU/BPL) is submitted. </p>
<h5><a name="submission">3.5 Proper submission</a> </h5>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>Librarians and referees shall not be expected to repair
inconsistencies in documentation format, component naming, and other
requirements. Source code which does not arrive in proper format will
not be considered. </p>
<p>&nbsp; </p>
<p>The expected files are: </p>
<p>&nbsp; </p>
<ul>
  <li>XXX.PAS (Main source file(s)) </li>
  <li>XXX.DCR (Resource file(s)) </li>
  <li>XXX_reg.PAS (Registration Unit for each individual component) </li>
  <li>XXX_Mreg.PAS (Multi registration unit - for use by packages, if
they are included) </li>
  <li>XXX.HLP (Help file) </li>
  <li>XXX_Demo.ZIP (Demo project) </li>
  <li>XXX_D50.DPK (Design package) </li>
  <li>XXX_R50.DPK (RunTime Package) </li>
</ul>
<p>&nbsp; </p>
<p>Please note: we need separate registration units for individual
components, as well as for packages, to allow users the choice of using
the package provided by Project JEDI, or incorporating individual
components into their private packages. </p>
<h5><a name="quality">3.6 Quality and perceived usefulness</a> </h5>
<p>In a cooperative effort like this, it will be difficult to enforce
some standard of quality and/or usefulness. For example, a component to
handle the military's "Zulu time" may be very useful to some, and
unnecessary to others. </p>
<p>&nbsp; </p>
<p>By virtue of its origins, the JEDI-VCL will be a mixture of some
components of very high quality and others perhaps not as fine. It is
up to the users to improve it. It will be complete in some areas and
quite sparse in others. It is up to the users to fill in the holes. </p>
<p>&nbsp; </p>
<p>We shall err on the side of including "questionable" components,
provided they seem to work. Debates on the quality of the library's
source code will be encouraged and will take place in the proper
message section of the JEDI-VCL Mailing list.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<table border="0" cellspacing="0">
  <tbody>
    <tr>
      <td width="475">
      <h3><a name="maintenance">4 - LIBRARY MAINTENANCE PROCEDURE</a></h3>
      </td>
      <td align="center" width="100"><br>
      </td>
    </tr>
  </tbody>
</table>
<h5><a name="selection">4.1 Selection procedure</a> </h5>
<p>Source code will be submitted to the librarian, the documenter (see
paragraph 7.2), or one of the referees. Code will be added after it is
reviewed and approved by at least one, but preferably two, referees. </p>
<p>&nbsp; </p>
<p>Code not meeting the documentation or source code formatting
standards will usually be returned to the author with instructions. </p>
<p>&nbsp; </p>
<p>Referees will test the submitted code. When the referees have
finished evaluating a submission, they will report their approval or
disapproval to the librarian, with comments. </p>
<h5><a name="update">4.2 Update interval</a> </h5>
<p>As new components are submitted and added to the library, the
documentation will be updated. Because of the voluntary nature of this
project and the complexity involved in coordinating testing,
documentation, and delivery, there will be no fixed interval for
updates. Once the process is well under control we will aim to do
monthly updates. </p>
<h5><a name="versioncontrol">4.3 Version control</a> </h5>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>JEDI-VCL packages will use a numeric version number as follows:</p>
<p>The major version will be numeric, corresponding to current Delphi
release, starting from 4 (the previous (supported) Delphi release  see
1.4).&nbsp; This will change with each Delphi release. The minor
version will change with each update of the JEDI-VCL library package. </p>
<p>Typical version numbers might be 4.01, 4.11, 5.05, etc. </p>
<p>Each component that doesnt descent from JvComponent should
implement published property AboutJVCL as it is implemented in
JvComponent.pas. This will enable the component to display its
version at the design time. </p>
<h5><a name="announcing">4.4 Announcing updates</a> </h5>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>As the library and associated documentation are updated, simple
announcements will be posted on the Project JEDI home page, Delphi
newsgroups and the JEDI mailing list. These are the only places where
updates will be announced. An update announcement indicates that it is
immediately available for downloading from ftp://delphi-jedi.org and
through links on the JEDI Web site. </p>
<h5><a name="bugreports">4.5 Bug reports and fixes</a> </h5>
<p>The librarian will correlate and verify all bug reports, with the
help of the referees. If the referees believe a bug to be serious, they
will arrange to have it fixed and the librarian will release a
maintenance upgrade immediately it is ready. If they consider it a
minor bug, it will be fixed but not installed for release until the
next scheduled upgrade. Such bug fixes may be released as "patches." </p>
<h5><a name="patches">4.5.1 Patches</a> </h5>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>A "patch" is simply an ASCII text file containing instructions for
editing the source code to a misbehaving component or group of
components. </p>
<p>&nbsp; </p>
<p>Patches may appear on the JEDI Web site before a maintenance release
or quarterly upgrade. A patch file will be named according to this
scheme: <b> Patch X for JEDI XXX Library n for Delphi v.ZIP</b>, where
&lt;X&gt; is a number starting from 1. Patches will be numbered
sequentially. Patches will be deleted every time a new version of
JEDI-VCL package goes on-line. </p>
<h5><a name="techsupport">4.6 Technical Support</a> </h5>
<p>Technical support will work just as any technical subject on the
JEDI Web site works. Users will post questions and suggestions to a
particular mailing list or newsgroup, and anyone who knows the answer
should respond. No one is obliged to answer, but it is considered good
form to respond with something, even if one doesn't know the answer.</p>
<p>&nbsp; </p>
<p>Support will include help on recompiling the components or modifying
the source. </p>
<h5><a name="cbuilder">4.7 C++ Builder Compatibility</a> </h5>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>In order to assist users of CodeGear C++Builder, JEDI-VCL may need
to
be tested with the current release of C++Builder, and modified as
needed. This should be done by a dedicated team with C++Builder
knowledge before any release of JEDI-VCL.</p>
<p>&nbsp;</p>
<table border="0" cellspacing="0">
  <tbody>
    <tr>
      <td width="475">
      <h3><a name="standards">5 - COMPONENT CODING STANDARDS</a></h3>
      </td>
      <td align="center" width="100"><br>
      </td>
    </tr>
  </tbody>
</table>
&nbsp;
<p>The purpose of this standard is to create consistency among the
components so that they may more easily maintained and understood by
all CodeGear Delphi developers, whether novice and advanced. The
referees may exercise some latitude with respect to well-presented,
pre-existing components that do not exactly conform.</p>
<p>&nbsp;</p>
<p>However, it is extremely important that anyone submitting code
attach the proper headers and documentation and fill them out
correctly. This will make it much easier for code to be added to the
library.&nbsp;</p>
<p>&nbsp;</p>
<p>In general, we will follow the Delphi Style Guide, as published by
Charlie Calvert on the <a
 href="http://community.borland.com/soapbox/techvoyage/article/1,1795,10280,00.html">Borland
Techvoyage</a> site.</p>
<h5><a name="sections">5.1 Required sections for each component</a> </h5>
<h5><a name="header">5.1.1 Header (author name/etc, version control
info)</a> </h5>
<p>Figure 1 shows a header that must be included at the top of every
piece of source code submitted to the library. This header will work
with both CodeGear Delphi and C++Builder code.</p>
<p>&nbsp;</p>
<table>
  <tbody>
    <tr>
      <td bgcolor="#ececec" width="575">
      <pre>{-----------------------------------------------------------------------------<br>The contents of this file are subject to the Mozilla Public License <br>Version 1.1 (the "License"); you may not use this file except in compliance <br>with the License. You may obtain a copy of the License at <br>http://www.mozilla.org/MPL/<br><br>Software distributed under the License is distributed on an "AS IS" basis, <br>WITHOUT WARRANTY OF ANY KIND, either expressed or implied. See the License for <br>the specific language governing rights and limitations under the License. <br><br>The Original Code is: XXX.PAS, released YYYY-MM-DD.<br><br>The Initial Developer of the Original Code is Joe Doe &lt;joe.doe@email.com&gt;<br>Portions created by Joe Doe are Copyright (C) YYYY Joe Doe.  <br>Portions created by Microsoft are Copyright (C) YYYY Microsoft Corp.  <br>All Rights Reserved. <br><br>Contributor(s): ______________________________________. <br><br><br>Last Modified: 2000-mm-dd;<br>Current Version: X.XX<br><br>You may retrieve the latest version of this file at the Project JEDI's JVCL home page, <br>located at http://jvcl.sourceforge.net<br><br>Known Issues: <br>-----------------------------------------------------------------------------}<br>  </pre>
      </td>
    </tr>
  </tbody>
</table>
<a name="headersample">Figure 1 - Standard component unit header</a><br>
<p>The "XXX.PAS" in the Original Code above shall contain the source
file name. This often differs from the individual component name. For
example, a component named TJvScreen would be included in SCREEN.PAS.
As a rule, source files (.PAS) should not have the "TJv" or "Jv"
prefixes. </p>
<p>&nbsp; </p>
<p>The "Initial Developer" field should have the author's full name,
and email address. An email address is important, as this will make bug
fixing and other correspondence easier. </p>
<h5>5.1.2 Mozilla License disclaimer </h5>
<p>Authors shall use only the standard header as in 5.1.1. Files
without the disclaimer will not be accepted. The exception would be
where the original code was placed in the Public Domain. In this case
please replace the Mozilla License notice with the following statement:
</p>
<p>&nbsp;</p>
<table>
  <tbody>
    <tr>
      <td bgcolor="#ececec" width="575">
      <pre>{-----------------------------------------------------------------------------<br>This is an original work by Joe Doe and is hereby placed in the Public Domain.<br><br>The Original Code is: XXX.PAS, released 2000-06-15.<br><br>The Initial Developer of the Original Code is Joe Doe &lt;Joe.doe@email.com&gt;. <br><br>Contributor(s): ______________________________________. <br><br><br>Last Modified: 2000-06-15 <br>Current Version: X.XX<br><br>You may retrieve the latest version of this file at the Project JEDI's JVCL home page, <br>located at http://jvcl.sourceforge.net<br><br>Known Issues: <br>-----------------------------------------------------------------------------}<br>    </pre>
      </td>
    </tr>
  </tbody>
</table>
<h5>5.1.3 Procedure/Function block</h5>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>&nbsp;</p>
<p>Authors should also clearly document each procedures and function,
with appropriate indentation:</p>
<table>
  <tbody>
    <tr>
      <td bgcolor="#ececec" width="575">
      <pre>{------------------------------------------------------------------------------<br>    Procedure: TJvScreen.DemoEventHandler<br>  Description: <br>       Author: Joe Doe<br> Date created: 2000-03-01<br>Date modified: yyyy-mm-dd by Jim Foo<br>      Purpose:<br> Known Issues: <br> ------------------------------------------------------------------------------}<br><br>procedure TJvScreen.DemoEventHandler(<br>     Sender: TObject;       <br>     Col   : LongInt;       <br>     Row   : Longint;       <br>     Rect  : TRect;       <br>     State : TGridDrawState);  // Refer to notes<br><br>var<br>  i,<br>  j,<br>  ThisNum,<br>  ThatNum: integer;<br>  IsAlive,<br>  IsPurple: Boolean;<br><br>begin <br>()<br>end;<br>  </pre>
      </td>
    </tr>
    <tr>
      <td align="center" width="575"><a name="functionheader">Figure 2
- Standard Procedure/Function Block</a></td>
    </tr>
  </tbody>
</table>
&nbsp;
<h5><a name="prefixes">5.1.4 Usage of Prefixes in Code</a> </h5>
<p>We recommend following guidelines for dealing with Prefixes:</p>
<table bgcolor="#ffffcc" cellpadding="0" cellspacing="0">
  <tbody>
    <tr>
      <td bgcolor="#ffffcc" width="354">prefix for components (as in
TJvHtmlHelp)&nbsp;</td>
      <td width="66">YES</td>
    </tr>
    <tr>
      <td width="354">prefix for field members (as in
FDefaultWindow)&nbsp;</td>
      <td width="66">YES</td>
    </tr>
    <tr>
      <td width="354">prefix for classes (as in TJvHtmlHelpRouter)&nbsp;</td>
      <td width="66">YES</td>
    </tr>
    <tr>
      <td width="354">prefix for global variables (as in
GHtmlHelpRouter)&nbsp;</td>
      <td width="66">YES&nbsp;</td>
    </tr>
    <tr>
      <td width="354">prefix for Pointers (as in PMyPointer)&nbsp;</td>
      <td width="66">YES</td>
    </tr>
    <tr>
      <td width="354">suffix for pointer variables (as in
PopupDefsPtr)&nbsp;</td>
      <td width="66">YES</td>
    </tr>
    <tr>
      <td width="354">prefix for enumerated types (as in alBottom)&nbsp;</td>
      <td width="66">YES</td>
    </tr>
    <tr>
      <td width="354">prefix/suffix for anything else&nbsp;</td>
      <td width="66">NO&nbsp;</td>
    </tr>
  </tbody>
</table>
<p></p>
<h5> <a name="assertions">5.1.5 Assertions</a> </h5>
<p>It is a good coding technique to include Assertions within your
source code (short pre-condition and post-condition routines with your
component procedures/functions), which will be useful to end users to
understand the assumptions of the component's author. They will be
invoked only during an execution from within Delphi IDE, but not
compiled into the final version, so there is no penalty in using them. </p>
<h5><a name="names">5.2 Component names</a> </h5>
<p>All JEDI-VCL components will use the standard 'TJv' prefix to
distinguish them from other components (Please note: "J" is
capitalized). TJv has been registered to Project JEDI in the Delphi
Prefix Registry ('DPR') at <a href="http://delphiprefix.href.com/">http://delphiprefix.href.com/</a>&nbsp;
</p>
<h5><a name="authority">5.3 Librarian's authority to change component
names</a> </h5>
<p>Some components will be submitted bearing either (1) a similar name
to another component in the library or (2) an inappropriate name or
prefix. For example, a component called TJvPrint that writes a
character to the screen could be said to be named inappropriately, as
it implies some relationship to a printer. The librarian shall have the
responsibility to rename submitted components to improve clarity or
permit uniqueness. </p>
<h5><a name="changing">5.3.1 Changing a component name after it has
been released</a> </h5>
<p>Once a particular component is included in a library release, its
name should be frozen. To allow renaming would probably raise problems
for users who had used the previous name and were not tracking the
changes to the library. </p>
<h5><a name="formatting">5.4 Source code formatting</a> </h5>
<p>CodeGear Delphi code shall be formatted in accordance with standard
currently defined by CodeGear for the Delphi VCL. As stated above, at
present we will follow the <a
 href="http://community.borland.com/soapbox/techvoyage/article/1,1795,10280,00.html">Delphi
Style
Guide</a>, as published by Charlie Calvert. The general goal is
to provide a consistent format that is recognized by all CodeGear
Delphi
developers. Deviations should be avoided. </p>
<p>&nbsp; </p>
<p>You can use following tools to assist you with code formatting: </p>
<p><a
 href="http://users.iafrica.com/a/as/asteele/delphi/codeformat/index.html">http://jedicodeformat.sourceforge.net/<br>
</a><a href="http://www.dow.wau.nl/aew/DelForExp.html">http://www.dow.wau.nl/aew/DelForExp.html</a>
</p>
<h5><a name="comments">5.5 Comments in Code</a> </h5>
<ul>
  <li>Preferably maximum of ONE line to describe the purpose of a
method. </li>
  <li>Comments should describe the code, not how to use it. </li>
  <li>Within a method, include comments only for code that needs
explaining,<br>
NOT<br>
    <pre>    Form1.Show // Shows Form</pre>
  </li>
  <li>As a guide, keep to the ratio of 10 lines of code to 1 line of
comment. </li>
</ul>
<h5><a name="other">5.6 Other considerations</a> </h5>
<ul>
  <li>Space characters: place one space after a comma or colon symbol
and place one space each side of an operator symbol ( +, -, *, /, := ,
= , &lt;, &gt;, etc.) </li>
</ul>
<ul>
  <li>No more than one command or variable declaration on one source
line. </li>
</ul>
<ul>
  <li>If there is no method description then at least a separating line
(e.g. //------ to a width of 80 characters) should be placed between
methods. Often it is unnecessary to include an individual description
for each method, e.g. a method named CountErrors would not require a
description. </li>
</ul>
<ul>
  <li>Use parentheses to increase readability of complex Boolean or
mathematical expressions, even where the rules of precedence for
evaluation would permit them to be optionally omitted. </li>
</ul>
<ul>
  <li>Minimize the use of functions in Boolean expressions or other
situations where side effects might be difficult to trace. </li>
  <li>Explicit dereferencing (like in MyDynamicArray^[0]) is no longer
necessary and should be avoided wherever possible. </li>
</ul>
<ul>
  <li>Structure function implementations so that they end at only one
point (its end keyword) and are not terminated by Exit (if possible). </li>
</ul>
<ul>
  <li>Labels with absolute jumps are considered bad programming style
(exception: assembler). </li>
</ul>
<p>&nbsp;</p>
<table border="0" cellspacing="0">
  <tbody>
    <tr>
      <td width="475">
      <h3><a name="designing">6 - COMPONENT DESIGN/ORGANIZATION</a></h3>
      </td>
      <td align="center" width="100"><br>
      </td>
    </tr>
  </tbody>
</table>
<h5><a name="design">6.1 Component Design</a> </h5>
<h5><a name="inheritcomp">6.1.1 Inheritance vs. Composition</a><br>
</h5>
<p>We encourage use of Composition by utilizing Interfaces and
delegating tasks to other objects. Inheritance should be used mainly
for extending properties and methods in a "Is-a-Kind-of" relationships.
</p>
<h5><a name="inheritance">6.1.2 Inheritance</a> </h5>
<p>The final component (TJvMyComponent) should descend from at least
one custom component (TJvMyCustomComponent). </p>
<h5><a name="scope">6.1.3 Method Scope</a> </h5>
<p>Protected and Virtual methods are preferred for JEDI components.
Defining a method as Private is discouraged, unless consciously applied
for a reason. </p>
<h5><a name="private">6.1.4 Private Fields/Variables</a> </h5>
<p>All 'Private' Fields/Variables should have associated Get and (where
it makes sense) Set 'Protected' methods. This allows easy access to
them in descendants, if required. </p>
<h5><a name="asm">6.1.5 ASM</a> </h5>
<p>Assembler routines (ASM) are acceptable only for machine-level glue
logic that cannot be performed by high-level Pascal source code. We
will require source code comments to explain why machine-level glue
logic is required at all. Any author considering submitting ASM code
should seek advice on the mailing list/newsgroups for an Object Pascal
solution, before committing to writing ASM code. </p>
<p>ASM for the sole purpose of performance is prohibited except in
extreme cases, and even then should be accompanied by functionally
equivalent Pascal source in comments. See math.pas for examples. </p>
<h5><a name="reference">6.1.6 Reference to Design-time Units in RunTime
Code</a> </h5>
<p>Please DO NOT refer in your RunTime code to DsgnIntf, LibIntf, or
any other design-time code. Starting with Delphi 6 separation of design
time code from runtime code became mandatory.&nbsp; </p>
<h5><a name="ifdef">6.1.7 Usage of $IFDEF Conditional Compiler
Directives</a> </h5>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>Since we will be supporting only two consecutive releases of Delphi,
there should be no need to use $IFDEF directives. They make code
maintenance and readability difficult. Please DO NOT use them, unless
you can make a case to demonstrate that they are absolutely required.<br>
</p>
<p>Project JEDI will provide a standard file containing conditional
directives. </p>
<h5><a name="calls">6.1.8 Calls to Component Events</a> </h5>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>Events should be fired via overrideable methods, and the component's
implementation should call through such methods exclusively (don't fire
the event property directly). All calls to component events should be
directed via a virtual/dynamic method. If the method is not expected to
be overridden frequently by descendents, the method should be declared
dynamic to save on VMT space. The performance difference between
dynamic and virtual is negligible for user-initiated events.<br>
</p>
<p> </p>
<p>Instead of<br>
&nbsp;
<table bgcolor="#ffffcc" border="0" cellpadding="0" cellspacing="0"
 cols="1" width="250">
  <tbody>
    <tr>
      <td>procedure TMyComp.WMLButtonDown(...)<br>
begin<br>
&nbsp; :<br>
&nbsp; if Assigned(FOnMouseDown) then ...<br>
&nbsp; :<br>
end;</td>
    </tr>
  </tbody>
</table>
</p>
<p>&nbsp; </p>
<p>use:<br>
&nbsp;<br>
&nbsp;
<table bgcolor="#ffffcc" border="0" cellpadding="0" cellspacing="0"
 cols="1" width="400">
  <tbody>
    <tr>
      <td>procedure TMyComp.WMLButtonDown(...)<br>
begin<br>
&nbsp; :<br>
&nbsp; DoMouseDown(...) // DoMouseDown is a virtual method&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp; :<br>
end;</td>
    </tr>
  </tbody>
</table>
</p>
<p>&nbsp; </p>
<h5><a name="packages">6.2 Packages</a> </h5>
<h5><a name="regist">6.2.1 Registration Units</a> </h5>
<p>We require that each package should have a registration unit whose
sole purpose is to register the components in the package. THis unit
may not contain any additional code (like property editors). The name
of the unit shold be &lt;package&gt;Reg.pas, i.e a package named JvCore
would have a registration unit named JvCoreReg. </p>
<p>&nbsp; </p>
<h5><a name="unitorg">6.2.2 Organization into .PASs and .DPKs</a> </h5>
<p>Since many different people will be submitting components, it will
be generally desirable to house all components that belong together in
the same .PAS, or at least to group their units in the same .DPK file.
If there is some reason to split the .PAS, the referees and the
librarian will handle that as part of library organization. </p>
<p>&nbsp; </p>
<h5><a name="pkgversion">6.2.3 Package Versioning</a> </h5>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>A clear and consistent versioning system is required, to avoid any
conflicts between packages. The JEDI-VCL will follow the model
established by the TurboPower® scheme: </p>
<p>&nbsp; </p>
<pre>PNNNMKVV.*<br>||  |||<br>||  ||+------ VV  VCL version (30=Delphi 3, 35=C++Builder 3,40=Delphi 4)<br>||  |+------- K   Kind of package (R=runtime, D=designtime, T-trialrun)<br>||  +-------- M   Product specific modifier (Underscore=default)<br>|+----------- NNN Product version number (e.g., 201=version 2.01)<br>+------------ P   Package name<br><br></pre>
<p>For example, an Internet design package Version 1.0 for Delphi 5
would be:<br>
<br>
</p>
<pre>   JvInternet100_D50.BPL<br><br></pre>
<p>The same package, but a Runtime version, would be:<br>
<br>
</p>
<pre>   JvInternet100_R50.BPL  </pre>
<pre>&nbsp;</pre>
In order to allow usage of packages, as well as building "private"
packages from individual components, we will "multi-registering unit"
for all components, as well as "registration unit" for each component
(if justified).
<p>Below you can see a typical structure of JEDI-VCL packages: </p>
<p><img src="images/packages.jpeg" height="361" width="682"> </p>
<p>Please use this structure, so we can achieve a consistency across
JVCL components and simplify maintenance. We will just add your
Registration/Resource units, and your RunTime package to the JVCL
Design package, and we are in business :) </p>
<h5><a name="compiling">6.3 Procedures for compiling components</a> </h5>
<h5><a name="borlanddelphi">6.3.1 CodeGear Delphi</a> </h5>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>CodeGear Delphi components will be compiled under the current and
previous release of CodeGear Delphi, with the Delphi default compiler
options:<br>
</p>
<pre>  {$A+,B-,C+,D+,E-,F-,G+,H+,I+,J+,K-,L+,M-,N+,O+,P+,Q-,R-,S-,T-,U-,V+,W-,X+,Y+,Z1}<br>  </pre>
and for the packages exclusively:<br>
<pre>       {$MINSTACKSIZE $00004000}<br>       {$MAXSTACKSIZE $00100000}<br>       {$IMAGEBASE $00400000}<br>  </pre>
where $IMAGEBASE should be adjusted by the librarian.
<p>Any deviations must be explained in the code. </p>
<h5><a name="otherlibs">6.4 Functions requiring other libraries</a> </h5>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>&nbsp; </p>
<p>JEDI-VCL can make no assumptions about the end user's capability to
link in any library other than the Delphi Standard version of VCL.
Therefore, no component will be added to JEDI-VCL that requires any
other third party component library, unless it is freely available on
the Web (e.g. RxLib). There might be, however, subsections of JEDI-VCL
requiring Pro and C/S versions of Delphi VCL. </p>
<p>Our general preferences are: </p>
<p>1) Don't use any 3rd Party libs </p>
<p>2) Copy code from 3rd Party libs (with permission and by giving
Credit) - this prevents future "update" incompatibles </p>
<p>3) Make all 3rd Party libs used in a tested version available for
download on JEDI-VCL Site (they should not be included in JEDI-VCL libs)<br>
</p>
<p>The 3rd Party functions/components should be placed in a separate
package.<br>
</p>
<p>JEDI will attempt to record accurately and associate the
version/build data of 3rd party libs with specific builds of the TJv's
that use them. It is essential that authors include this information
when submitting their source code.<br>
</p>
<h5><a name="demo">6.5 Demo Project</a> </h5>
<p>While a Demo Project is an optional part of the submitted component,
the author is encouraged to include a short Demo with the code. Authors
should seriously consider adding it, as it may become a requirement in
a future version of the JEDI-VCL. </p>
<h5><a name="helpfile">6.6 Help File</a> </h5>
<p>We strongly encourage providing a detailed Help file with each
component in a text format. This will help to keep the comments in code
to a needed minimum. Specifically: &nbsp;</p>
<p> </p>
<ul>
  <li>
    <p>All details on how to use the component should be in a help file
    </p>
  </li>
  <li>
    <p>Each method should be documented together with a what it does
description. </p>
  </li>
</ul>
<p>&nbsp;</p>
<p>We are using Doc-O-Matic Help creation tool donated to JEDI by
ToolsFactory (<a href="http://www.toolsfactory.com/">http://www.toolsfactory.com/</a>).&nbsp;
In
order to make it easy to include your file in the overall Help
system, the file should have description for the all classes, and for
all major fields, properties, events, and methods, following the format
below (example for JvPanel). The elements to be filled are in bold.
Please also note the required @@ in the front of each of the
elements:&nbsp;&nbsp;</p>
<p>&nbsp;</p>
<table bgcolor="#ffffcc" border="0" cellpadding="0" cellspacing="0"
 cols="1" width="637">
  <tbody>
    <tr>
      <td width="635">@@JvPanel.pas<br>
      <br>
Note:<br>
&lt;B&gt;Delphi Versions:&lt;/B&gt; &lt;COLOR Brown&gt;5,
6&lt;/COLOR&gt; &lt;B&gt;&nbsp;<br>
      <br>
C++ Builder Versions:&lt;/B&gt; &lt;COLOR Brown&gt;none&lt;/COLOR&gt;<br>
      <br>
Conditions:<br>
The contents of this file are subject to the Mozilla Public License
Version 1.1 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at
http://www.mozilla.org/MPL/MPL-1.1.html&nbsp;<br>
      <br>
Author:<br>
Sebastien Buysse<br>
      <br>
Version:<br>
1.20 Beta<br>
      <br>
================================================================<br>
@@TJvPanel<br>
Description:<br>
This is an enhanced version of a TPanel with some new events like
OnMouseEnter and OnMouseLeave, ...<br>
      <br>
================================================================<br>
@@TJvPanel.FColor<br>
Description:<br>
This field stores the Color value of the JvPanel<br>
================================================================<br>
@@TJvPanel.FOnMouseEnter<br>
Description:<br>
An event that occurs when the mouse pointer enters the borders of an
editor.<br>
&nbsp; .<br>
&nbsp; .<br>
&nbsp; .</td>
    </tr>
  </tbody>
</table>
<h5><a name="pkginstall">6.7 Package Installation</a> </h5>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>&nbsp; </p>
<p>Packages will be provided with an installation program, which will
install them for the selected Delphi version. It will also back up all
old files being replaced. The installation program should create the
following subdirectory structure for each package (supporting Delphi 5
and Delphi 6): </p>
<p>&nbsp;
<table>
  <tbody>
  </tbody>
</table>
<table border="1" cellpadding="1" cellspacing="0">
  <tbody>
    <tr>
      <td>Subdirectory</td>
      <td>Purpose</td>
    </tr>
    <tr>
      <td>\bin</td>
      <td>for bpl files</td>
    </tr>
    <tr>
      <td>\demo</td>
      <td>for any demos/examples related to components</td>
    </tr>
    <tr>
      <td>\help</td>
      <td>help files, plus additional help documents for merging into
final help</td>
    </tr>
    <tr>
      <td>\lib5</td>
      <td>for dcu and dcp files for delphi 5</td>
    </tr>
    <tr>
      <td>\lib6</td>
      <td>for dcu and dcp files for delphi 6</td>
    </tr>
    <tr>
      <td>\packages</td>
      <td>Package files for Delphi 5 and Delphi 6</td>
    </tr>
    <tr>
      <td>\source</td>
      <td>all source files (incl. delphi units, packages, resource
files)</td>
    </tr>
    <tr>
      <td>\bitmaps</td>
      <td>bitmaps, rc files, batch files</td>
    </tr>
  </tbody>
</table>
</p>
<h5><a name="resources">6.8 Resources/Graphics</a> </h5>
<p>We need consistently looking bitmaps for Delphi IDE component
palette Icons. The current design contains little blue box with
"J":&nbsp; </p>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>&nbsp; </p>
<p> <img src="images/jicon.jpeg" height="41" width="42"> </p>
<p>&nbsp; </p>
<p>In the attachment, you will find following templates: </p>
<p>&nbsp; </p>
<ul>
  <li>Design Package </li>
  <li>RunTime Package </li>
  <li>Registration Unit </li>
  <li>Resource Unit </li>
  <li>JVCL Bitmap </li>
  <li>Delphi Component Unit </li>
  <li>&nbsp; </li>
</ul>
You can create the Bitmaps for IDE via ImageEditor, or you can directly
compile with the CodeGear Resource Compiler:
<p>Peter Mugaas recommended to use the Borland resource-compiler
(BRCC32) which is included in CodeGear Delphi. The .RC file is a
resource script containing information about the bitmaps (see example
below): </p>
<p>&nbsp; </p>
<p>/* JVCL components */<br>
TJVMYCOMPONENTA BITMAP " TJVMYCOMPONENTA.BMP"<br>
TJVMYCOMPONENTB BITMAP " TJVMYCOMPONENTB.BMP" </p>
<p>&nbsp; </p>
<p>Notice the links to the BMP files. These should be in the same
directory as the .RC file (i.e. \Source\Resource). Please use the
attached batch file to compile the script into a DCR file. Here is the
MakeDCR.Bat which you can use with JVCL, after you (it is in the same
directory as the .RC and .BMP files): </p>
<p>&nbsp; </p>
<p>brc32 JvMyComponentReg.rc -r -foJvMyComponentReg.dcr</p>
<p>&nbsp;</p>
<table border="0" cellspacing="0">
  <tbody>
    <tr>
      <td width="475">
      <h3><a name="admin">7 - ADMINISTRATIVE DETAILS</a></h3>
      </td>
      <td align="center" width="100"><br>
      </td>
    </tr>
  </tbody>
</table>
<h5><a name="librarian">7.1 Librarian</a> </h5>
<p>The librarian will be the person who rebuilds the library from the
sources and uploads the resulting deliverables to the proper JEDI
library on JEDI Web site. The librarian generally does <b>not</b> test
code or edit source code to repair formatting errors. </p>
<h5><a name="documentor">7.2 Documentor (Help Team)</a> </h5>
<p>The documentor is responsible for maintaining the Help files and
keeping them in sync with each new release. Documentation should be
written in the same style and flavor as the CodeGear material, if
possible. Refer to the CodeGear Delphi documentation for more detail
and
numerous examples. </p>
<h5><a name="referees">7.3 Referees</a> </h5>
<p>Referees are volunteers who read source code, clean it up, compile
it, look for problems like potentially problematic Object Pascal code,
decide on which component is best, consolidate common functions, etc.
They make sure the header and documentation blocks are present. There
is no election or term for refereeship. One simply volunteers for the
task, performs it as long as one can and bows out when necessary. </p>
<h5><a name="transitions">7.4 Transitions</a> </h5>
<p>Not everyone will be able to stay around forever to keep working on
this project. Therefore, it is the responsibility of each referee,
documenter, or librarian to announce as far in advance as possible his
or her intention to leave, in order to give everyone a chance to
nominate a suitable replacement. </p>
<p>&nbsp;</p>
<h4>Don't let it die!</h4>
<i><br>
<p>&nbsp;</p>
</i>
<p>&nbsp;</p>
<table border="0" cellspacing="0">
  <tbody>
    <tr>
      <td width="475">
      <h3><a name="glossary">8 - GLOSSARY</a></h3>
      </td>
      <td align="center" width="100"><br>
      </td>
    </tr>
  </tbody>
</table>
<b> GLOSSARY (work in progress)<br>
</b>
<table>
  <tbody>
    <tr>
      <td valign="top" width="139">RFP</td>
      <td width="557"><b>Request for Proposal</b>. For <a
 href="http://www.omg.org/techprocess/faq_process.html">more detailed
definition</a> refer to the OMG (Object Management Group) Web site.</td>
    </tr>
    <tr>
      <td valign="top" width="139">RFC</td>
      <td width="557"><b>Request for Comments</b>. For <a
 href="http://www.omg.org/techprocess/faq_process.html">more detailed
definition</a> refer to the OMG (Object Management Group) Web site.</td>
    </tr>
    <tr>
      <td valign="top" width="139"><br>
      </td>
      <td width="557"><br>
      </td>
    </tr>
    <tr>
      <td valign="top" width="139"><br>
      </td>
      <td width="557"><br>
      </td>
    </tr>
    <tr>
      <td valign="top" width="139"><br>
      </td>
      <td width="557"><br>
      </td>
    </tr>
    <tr>
      <td valign="TOP9" width="13"><br>
      </td>
      <td width="557"><br>
      </td>
    </tr>
  </tbody>
</table>
<p>&nbsp;</p>
<table border="0" cellspacing="0">
  <tbody>
    <tr>
      <td width="475">
      <h3><a name="checklist">9 - CHECKLIST</a></h3>
      </td>
      <td align="center" width="100"><br>
      </td>
    </tr>
  </tbody>
</table>
<p><b><font color="#800000">[TODO: change this to reflect current
status]</font></b> </p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<ul>
  <li>
    <p>Components created using TJv prefix, and inherited from
TJvComponent; </p>
  </li>
  <li>
    <p>If a component is not a descendent of JvComponent, it implements
a published property AboutJVCL<br>
as it is implemented in JvComponent.pas. </p>
  </li>
  <li>
    <p>MPL license notice added </p>
  </li>
  <li>
    <p>Compiler switches added </p>
  </li>
  <li>
    <p>JEDI.inc file added (if needed) </p>
  </li>
  <li>
    <p>Code is formatted using JVCL formatting standards </p>
  </li>
  <li>
    <p>Components saved in a file with Jv Prefix </p>
  </li>
  <li>
    <p>Components Register methods moved to Registration Unit </p>
  </li>
  <li>
    <p>Separate RunTime Package created </p>
  </li>
  <li>
    <p>Separate DesignTime Package created (containing the Registration
Unit, and requiring the RunTime Package </p>
  </li>
  <li>
    <p>Any Property/Component Editors added (if needed) </p>
  </li>
  <li>
    <p>Bitmap files for IDE icons created </p>
  </li>
  <li>
    <p>DRC file containing the bitmaps compiled </p>
  </li>
  <li>
    <p>Demo project(s) included (recommended, but optional) </p>
  </li>
  <li>
    <p>Help file included (recommended, but optional) </p>
  </li>
</ul>
&nbsp;
<p>&nbsp;</p>
<table border="0" cellspacing="0">
  <tbody>
    <tr>
      <td width="475">
      <h3><a name="history">10 - VERSION HISTORY</a></h3>
      </td>
      <td align="center" width="100"><br>
      </td>
    </tr>
  </tbody>
</table>
<b>Version History:<br>
</b>
<table border="1">
  <tbody>
    <tr>
      <td style="vertical-align: top;">2005-03-08<br>
      </td>
      <td style="vertical-align: top;">
      <ul>
        <li>Updated current version of Delphi and C++ Builder IDE</li>
      </ul>
      </td>
    </tr>
    <tr>
      <td width="61">1999-07-28</td>
      <td nowrap="nowrap" width="514">
      <ul>
        <li>Added page numbering </li>
        <li>Removed couple of Clipper artifacts, still left from the
original document </li>
        <li>Added 2.2.1.4: the user should have option to download only
the required components, and not the whole library </li>
        <li>Changed 5.4.2 section on ASM - there will be no ASM code in
the library. Go ObjectPascal </li>
        <li>Modified 1.4 and 5.6.1 - we will support the current and
the previous version of Delphi </li>
        <li>Changed 5.6.1 - added compiler options </li>
        <li>Added new sub-section in 3.0 on RFP (Request for Proposal) </li>
        <li>Changed 4.3 on version control - there will be no monthly
updates </li>
      </ul>
      </td>
    </tr>
    <tr>
      <td width="61"> 1999-08-16</td>
      <td nowrap="nowrap" width="514">
      <ul>
        <li>Changed 3.2 from "Request for Feedback" to "Request for
Comments". This makes it consistent with OMG process </li>
        <li>Started a Glossary of terms </li>
        <li>Changed the Procedure Block header (5.1.3) </li>
        <li>Included rules for Prefixes (5.1.4) </li>
        <li>Made changes to 5.7 about usage of 3<sup>rd</sup> Party
Libraries </li>
        <li>Started Component Design Guidelines (6.1) </li>
        <li>Included Version Constant in 4.3 to allow version checking
at runtime </li>
        <li>Changed "Tjv" to "TJv" capitalizing "j" to make the prefix
more legible </li>
      </ul>
      </td>
    </tr>
    <tr>
      <td width="61"> 1999-09-07</td>
      <td nowrap="nowrap" width="514">
      <ul>
        <li>Changed 1.4 to add support for a previous version of
Delphi. </li>
        <li>Created new section on Component Design/Organization </li>
        <li>Added front page </li>
        <li>Added Table of Content </li>
        <li>Changed 6.1.5 to allow ASM, but only in extreme situations </li>
        <li>Added 6.1.6 and 6.1.7 about reference to Design-time
packages, and Conditional Defines </li>
        <li>Changed 4.7 - the JEDI-VCL will be provided in functional
packages. </li>
        <li>Added section on Installation </li>
        <li>Added numbering scheme </li>
      </ul>
      </td>
    </tr>
    <tr>
      <td width="61"> 1999-09-15</td>
      <td nowrap="nowrap" width="514">
      <ul>
        <li>Added Purpose to Method Header </li>
        <li>Removed data stamps from 4.3 as a mechanism for versioning.
        </li>
        <li>Added new recommendations about code formatting and
component design </li>
        <li>Extended names of packages to full names (instead of
abbreviations) </li>
        <li>Changed the scheme for naming zip files containing JEDI
packages </li>
      </ul>
      </td>
    </tr>
    <tr>
      <td width="61"> 2000-09-23</td>
      <td nowrap="nowrap" width="514">
      <ul>
        <li>Added Package structure diagram </li>
        <li>Added Resource/Graphic section </li>
        <li>Added Checklist </li>
      </ul>
      </td>
    </tr>
    <tr>
      <td width="61"> 2002-05-14</td>
      <td nowrap="nowrap" width="514">
      <ul>
        <li>Changed Versioning for components (4.3) </li>
        <li>Changed directory structure (6.7) </li>
        <li>Added example on Help (6.6) </li>
      </ul>
      </td>
    </tr>
    <tr>
      <td width="61">2004-02-23</td>
      <td nowrap="nowrap" width="514">
      <ul>
        <li>Reformatted to match new layout</li>
      </ul>
      </td>
    </tr>
  </tbody>
</table>
<p>&nbsp;</p>
<hr>
<h3>Improvement suggestions submitted by:</h3>
<p>&nbsp; </p>
<ul>
  <li>Allan G. Lloyd </li>
  <li>Marcel van Brakel </li>
  <li>Pavel Císar </li>
  <li>Robert Love </li>
  <li>Helen Borrie </li>
  <li>Phil Shrimpton </li>
  <li>Francois Piette </li>
  <li>Danny Thorpe </li>
  <li>Rodney Delanty </li>
  <li>Shiv Kumar </li>
  <li>Mike Lischke </li>
  <li>Alec Bergamini </li>
</ul>
<p>&nbsp;</p>
&nbsp;
<h3>Open Issues:<br>
</h3>
<ul>
  <li>Glossary - please provide suggestions what should be included </li>
  <li>We need more Component Design rules </li>
  <li>We need to decide on Naming scheme for packages, zip files, etc. </li>
</ul>
&nbsp;
</body>
</html>
