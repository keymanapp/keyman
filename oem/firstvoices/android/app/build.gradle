plugins {
    id 'com.android.application'
    id 'io.sentry.android.gradle'
    id 'com.github.triplet.play' version '2.5.0' apply false
}

ext.rootPath = '../../../../android'
apply from: "$rootPath/version.gradle"

android {
    compileSdkVersion 29

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.firstvoices.keyboards"
        minSdkVersion 21
        targetSdkVersion 29

        // VERSION_CODE and VERSION_NAME from version.gradle
        versionCode VERSION_CODE as Integer
        versionName VERSION_NAME
        buildConfigField "String", "VERSION_ENVIRONMENT", "\""+VERSION_ENVIRONMENT+"\""
    }

    String env_release_store_file = System.getenv("oem_firstvoices_release_store_file")
    String env_release_store_password = System.getenv("oem_firstvoices_release_store_password")
    String env_release_key_alias = System.getenv("oem_firstvoices_release_key_alias")
    String env_release_key_password = System.getenv("oem_firstvoices_release_key_password")
    if (env_release_store_file != null) {
        signingConfigs {
            release {
                println "Using signing from environment"
                storeFile file(String.valueOf(env_release_store_file))
                storePassword env_release_store_password
                keyAlias env_release_key_alias
                keyPassword env_release_key_password
            }
        }
    }

    buildTypes {
        /*debug {
            applicationIdSuffix ".debug"
        }*/
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (env_release_store_file != null) {
                signingConfig signingConfigs.release
            }
        }
    }
    productFlavors {
    }

    lintOptions {
        disable 'MissingTranslation'
        lintConfig file("lint.xml")
    }
}

// how to configure the sentry android gradle plugin
sentry {
    // Disables or enables the automatic configuration of Native symbols
    uploadNativeSymbols true

    // Does or doesn't include the source code of native code for Sentry
    includeNativeSources true
}

String env_keys_json_file = System.getenv("oem_firstvoices_keys_json_file")
if (env_keys_json_file != null) {
    apply plugin: 'com.github.triplet.play'

    play {
        serviceAccountCredentials = file(String.valueOf(env_keys_json_file))

        // Deactivate lower conflicting version APKs
        resolutionStrategy = "ignore"
        switch (System.env.TIER) {
            case 'beta':
                track = 'beta'
                break

            case 'stable':
                track = 'production'
                break

            default:
                track = 'alpha'
        }
        println "TIER set to $track"
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    google()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.0-alpha02'
    implementation 'com.google.android.material:material:1.2.1'
    api(name: 'keyman-engine', ext: 'aar')
    implementation 'io.sentry:sentry-android:2.3.0'
    implementation 'androidx.preference:preference:1.1.1'
}

apply plugin: 'com.android.application'
