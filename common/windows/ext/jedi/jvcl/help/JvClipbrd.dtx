##Package: Core
##Status: Completed
----------------------------------------------------------------------------------------------------
@@JvClipbrd.pas
Summary
    Contains the TJvClipboard component.
Author
  Olivier Sannier
----------------------------------------------------------------------------------------------------
@@TJvClipboard.SetTextBuf@PChar@Boolean
Summary
  Overloaded version of the same procedure in TClipboard that now allows you to specify delayed
  rendering.
Description
  If delayed is set to False, the inherited method is called else, the format is added in the
  clipboard for delayed rendering and you MUST provide an OnRenderFormat event;
Parameters
  Buffer  - The text buffer. A final #0 is expected to stop the string
  Delayed - If True, delayed rendering will be used
See Also
  TJvClipboard.SetBuffer, TJvClipboard.SetComponent

----------------------------------------------------------------------------------------------------
@@TJvClipboard.SetComponent@TComponent@Boolean
Summary
  Overloaded version of the same procedure in TClipboard that now allows you to specify delayed
  rendering.
Description
  If delayed is set to False, the inherited method is called else, the format is added in the
  clipboard for delayed rendering and you MUST provide an OnRenderFormat event;
Parameters
  Component - The component to copy in the clipboard
  Delayed   - If True, delayed rendering will be used
See Also
  TJvClipboard.SetBuffer, TJvClipboard.SetTextBuf

----------------------------------------------------------------------------------------------------
@@TJvClipboard.RegisterFormat
Summary
  Registers a format of that name with the system and returns its identifier.
Description
  You could also call the Win32 API function RegisterClipboardFormat
Parameters
  Name - The name of the format
Return value
  The format identifier

----------------------------------------------------------------------------------------------------
@@TJvClipboard.SetBuffer@Word@Pointer@Integer
Summary
  Adds the given buffer to memory
Description
  This method has been overridden to allow setting Buffer to nil and thus asking to use delayed
  rendering. If you do so, you MUST provide an OnRenderFormat event handler If Buffer <> nil then the
  inherited method is called
Parameters
  Format - The format to add
  Buffer - The buffer containing the data
  Size   - The size of the data in the buffer
See Also
  TJvClipboard.SetComponent, TJvClipboard.SetTextBuf

----------------------------------------------------------------------------------------------------
@@TJvClipboard.Open
Summary
  Opens the clipboard
Description
  If the clipboard is already opened, this has no effect but to increment the internal reference
  counter. As a result, every call to Open must have an associated call to Close
See Also
  TJvClipboard.Close

----------------------------------------------------------------------------------------------------
@@TJvClipboard.Handle
Summary
  The handle to the underlying window handling the delayed rendering messages
Description
  You shouldn't have to use this property directly, unless you want to use raw Win32 API calls.

----------------------------------------------------------------------------------------------------
@@TJvClipboard.OnRenderFormat
Summary
  The event fired when a format has been added with delayed rendering and needs rendering because an
  application (or the DestroyHandle method) asked for it
Description
  This event MUST be assigned if you want to add delayed rendering formats in the clipboard. If not,
  you will get an exception when the format is rendered.
Parameters
  Sender   - The object triggering the event. Clearly, will always be the value returned by
              JvClipboard, unless you call the event yourself
  Format   - The format needing rendering
  Buffer   - The buffer where the rendered data has to be or has been put. You may change the value
  of             the buffer parameter to point on a memory that will survive the exit of your handler.
              Clearly, you can't give a pointer to a local variable or use a PChar() conversion.
              Alternatively, you can allocate some memory with GetMem(), copy your data in the buffer
              and set the MustFree parameter to true to ask the clipboard to free the memory for you
              (done using FreeMem). Setting buffer to nil will make the system remove this format from
              the clipboard, but this is not a documented behavior
  Size     - The size in bytes of the data available in the buffer. Setting size to 0 will make the  
            system remove this format from the clipboard, but this is not a documented behavior
  MustFree - set to False by default. If you set this to True, the clipboard will call
  FreeMem(buffer)             after having copied the data in the system clipboard. This is useful
  only if you
              allocated the buffer using GetMem()
See Also
  TJvClipboard.AddDelayed

----------------------------------------------------------------------------------------------------
@@TJvClipboard.GetBuffer
Summary
  Gets a buffer of the given format
Description
  The format must be present in the clipboard. If not the function returns false. The buffer and the
  size parameters must be set to the correct size for the specified format. If they are too small,
  the data will be truncated, resulting in corrupted values on your side (but you're the one who
  knows what to do with that). If they are too large, the application will crash as it will be asking
  the system for more data than available
Parameters
  Format - The format ID
  Buffer - An allocated buffer
  Size   - The size of the allocated buffer and of the data to retrieve
Return value
  True if data was successfully retrieved, else use Windows.GetLastError to get the error code
See Also
  TJvClipboard.OnRenderFormat

----------------------------------------------------------------------------------------------------
@@TJvClipboard.DestroyHandle
Summary
  Ensures the delayed rendering formats are rendered before destroying the clipboard object
Description
  To ensure that the formats using delayed rendering are saved when the application terminates, it is
  necessary that we get their values before actually destroying the underlying window (which handle
  is given by the Handle property) As a result, the OnRenderFormat event will be fired for every
  format with delayed rendering still in the clipboard. This could lead to memory problems if the
  format is quite big. You should then asks the user if he wants to keep the big objects available
  for other programs If you don't call this method and some formats are in the clipboard with delayed
  rendering, it will be called upon destruction of the clipboard, which is likely to happen after the
  destruction of the object where the event is set. I let you imagine the consequences... So you
  should call this function from the destructor (or the OnDestroy event) of the component where the
  OnRenderFormat event handler is set (eg, the main form) as this component is likely to be destroyed
  before the clipboard itself.
See Also
  TJvClipboard.Handle, TJvClipboard.OnRenderFormat

----------------------------------------------------------------------------------------------------
@@TJvClipboard.Close
Summary
  Closes the clipboard
Description
  The clipboard is effectively closed when the internal reference counter reaches 0. Hence, for every
  call to Open, there must be a call to Close
See Also
  TJvClipboard.Open

----------------------------------------------------------------------------------------------------
@@TJvClipboard.Clear
Summary
  Clears the clipboard
Description
  This is an overridden method, you don't have to describe these if it does the same as the inherited
  method

----------------------------------------------------------------------------------------------------
@@TJvClipboard.AsWideText
Summary
  Returns the text in the clipboard as a WideString
Description
  This property only returns a string if the CF_UNICODETEXT format is available in the clipboard.
  Copying a text in the clipboard will normally automatically provide this format too.

----------------------------------------------------------------------------------------------------
@@TJvClipboard.AddDelayed
Summary
  Add a format that uses delayed rendering
Description
  If you add a format using this function, you MUST provide an OnRenderFormat event handler
Parameters
  Format - The ID of the clipboard format to add. Must have been registered before
See Also
  TJvClipboard.OnRenderFormat, TJvClipboard.RegisterFormat

----------------------------------------------------------------------------------------------------
@@TJvClipboard
Summary
  The new clipboard object, with added power !
Description
  Clearly, TJvClipboard now allows you to use delayed rendering through the OnRenderFormat event. All
  methods have been overridden to allow specifying delayed rendering. See their documentation for
  details. However, SetAsHandle has not been overridden as it is enough to set its second parameter
  to 0 to get delayed rendering. Do not create a TJvClipboard yourself, use the JvClipboard function
  instead
See Also
  JvClipboard

----------------------------------------------------------------------------------------------------
@@JvClipboard
<TITLE JvClipboard function>
Summary
  Returns an instance of TJvClipboard to be used by the application.
Description
  Write here a description

----------------------------------------------------------------------------------------------------
@@TJvRenderFormatEvent
<TITLE TJvRenderFormatEvent type> <COMBINE TJvClipboard.OnRenderFormat>

