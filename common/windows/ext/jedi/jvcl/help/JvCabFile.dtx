##Package: Crypt
##Status: Completed,Checked
----------------------------------------------------------------------------------------------------
@@JvCabFile.pas
Summary
    Contains types and classes needed to implement a component for extracting files from the .CAB file
    format.
Author
  Sébastien Buysse
----------------------------------------------------------------------------------------------------
@@TJvCABFile.OnStartFileExtraction
Summary
  Occurs before extracting a file from the cabinet file.
Description
  OnStartFileExtraction is a TOnExtractFile property that represents the event handler signaled prior
  to extracting a specified file from the cabinet file. OnStartFileExtraction is signaled in the
  internal extract callback function when the SPFILENOTIFY_FILEINCABINET notification is received,
  and the output file name has been constructed using the destination path and file name in the
  cabinet file.
  
  OnStartFileExtraction can be used to perform updates prior to performing the file operation for the
  selected file in the cabinet file.
  
  Applications must assign a procedure to the event handler to allow responding to the event
  notification.
Parameters
  Sender   - Object context for the event notification. Generally contains the TJvCABFile instance to
              be signaled from the callback function.
  FileName - The full path and file name for the member to be extracted from the cabinet file.
  DestPath - Represents the full path and file name where extracted file information will be stored.
See Also
  TJvCABFile.ExtractFile, TJvCABFile.ExtractAll, TJvCABFile.OnFileExtracted

----------------------------------------------------------------------------------------------------
@@TJvCABFile.OnNeedNewCabinet
Summary
  Occurs when a specific file continues in another cabinet.
Description
  OnNeedNewCabinet is a TOnNeedNewCabinet property that represents the event handler signaled when a
  specific file continues in another cabinet file. OnNeedNewCabinet is signaled in the internal
  callback function for the Setup API when the SPFILENOTIFY_NEEDNEWCABINET notification is sent
  during iteration over file members in a .CAB file.
  
  OnNeedNewCabinet can be used to allow an application to respond to the disk or path changes need to
  access the new cabinet file prior to continuing the file operation. The file operation can be
  abandoned by setting the value in the Cont argument to false in the event handler.
  
  Cont is a Boolean parameter that indicates if the Setup API can or should continue to extract files
  from the new cabinet file. The default value for Cont is True, unless a Win32 error occurs in the
  Setup API or the event handler changes the value to False.
  
  Applications must assign a procedure to the event handler to allow responding to the event
  notification.
Parameters
  Sender  - Object context for the event notification. Generally contains the TJvCABFile instance to 
            be signaled from the callback function.
  Cont    - Indicates whether file extraction can be continued.
  CABInfo - Structure used to store cabinet file information from the Setup API.
  NewPath - Path to use for files extracted from the new .CAB file.
See Also
  TJvCABFile.ExtractFile, TJvCABFile.ExtractAll

----------------------------------------------------------------------------------------------------
@@TJvCABFile.OnFilesListed
Summary
  Occurs after completion of a file listing for the cabinet file.
Description
  OnFilesListed is a TNotifyEvent property that represents the event handler signaled when the file
  listing in Files has been completed using the Setup API. OnFilesListed can be used to perform
  updates needed when the Files property has been populated after changing the value in FileName.
  
  Applications must assign a procedure to the event handler to allow responding to the event
  notification.
See Also
  TJvCABFile.FileName, TJvCABFile.Files

----------------------------------------------------------------------------------------------------
@@TJvCABFile.OnCABInfo
Summary
  Event handler signaled for cabinet file information.
Description
  OnCABInfo is a TOnCABInfo property that represents the event handler signaled when cabinet file
  information is returned to the internal callback function for the Setup API.
  
  OnCABInfo is signaled in the listing callback function when the SPFILENOTIFY_CABINETINFO
  notification is received, and provides access to the updated values in the TCABInfo argument to the
  event handler.
  
  Applications must assign a procedure to the event handler to allow responding to the event
  notification.
Parameters
  Sender  - Object context for the event notification. Generally contains the TJvCABFile instance to 
            be signaled from the callback function.
  CABInfo - Structure used to store cabinet file information from the Setup API.
See Also
  TJvCABFile.ExtractAll, TJvCABFile.ExtractFile

----------------------------------------------------------------------------------------------------
@@TJvCABFile.OnFileExtracted
Summary
  Occurs after a file has been extracted from the cabinet file.
Description
  OnFileExtracted is a TOnExtracted property that represents the event handler signaled when a file
  has been extracted from the cabinet file using the Setup API. OnFileExtracted is signaled when the
  SPFILENOTIFY_FILEEXTRACTED notification is received in the internal extraction callback function
  after a call to ExtractFile or ExtractAll.
  
  OnFileExtracted can be used to detect when the extraction is complete, or when a Win32 error has
  occurred during the Setup API function calls. The OnFileExtracted event handler can also be used to
  halt extraction of additional files, during execution of the ExtractAll method, by setting the Cont
  argument to False.
  
  Successed is Boolean value that indicates if a Win32 error occurred while trying to build a file
  listing or extract the file specified in Source. Successed contains True if a Win32 error has not
  been detected.
  
  Cont is a Boolean parameter that indicates if the Setup API can or should continue to extract files
  from the cabinet file. The default value for Cont is True, unless a Win32 error occurs in the Setup
  API or the event handler changes the value to False.
  
  Applications must assign a procedure to the event handler to allow responding to the event
  notification.
Parameters
  Sender    - Object context for the event notification. Generally contains the TJvCABFile instance
  to              be signaled from the callback function.
  Successed - Indicates whether the file was successfully extracted.
  Cont      - Indicates whether file extraction can be continued.
  Source    - Source file name extracted from the Cabinet file.
  Dest      - Destination file name created for the extracted file.
See Also
  TJvCABFile.ExtractFile, TJvCABFile.ExtractAll

----------------------------------------------------------------------------------------------------
@@TJvCABFile.FileName
Summary
  Identifies the cabinet file to use for file operations.
Description
  FileName is a TFileName property that identifies the fully-qualified file name for the cabinet file to us
   for file operations. Changing the value in FileName forces the Files property to be cleared and
  re-populated using the SetupIterateCabinet API function and the internal callback function.
  
  After successful completion of the file listing using the callback function, the OnFilesListed
  event is signaled. Event notification is not performed if a procedure has not been assigned to the
  OnFilesListed event handler.
  
  FileName is used in ExtractFile and ExtractAll when calling the SetupIterateCabinet API function
  for the file operation.
See Also
  TJvCABFile.Files, TJvCABFile.OnFilesListed, <DELPHILINK TNotifyEvent>, TJvCABFile.ExtractFile,
  TJvCABFile.ExtractAll

----------------------------------------------------------------------------------------------------
@@TJvCABFile.Files
Summary
  Contains file names found in the cabinet file listing.
Description
  Files is a TStringList property that contains file names found in the cabinet file identified by
  FileName. Files is cleared and automatically populated when the value in FileName is changed, and
  relies on the SetupIterateCabinet API function and the internal callback function.
  
  After successful completion of the file listing using the callback function, the OnFilesListed
  event is signaled. Event notification is not performed if a procedure has not been assigned to the
  OnFilesListed event handler.
See Also
  TJvCABFile.FileName, TJvCABFile.OnFilesListed

----------------------------------------------------------------------------------------------------
@@TJvCABFile.ExtractFile
Summary
  Extracts a specific file to a destination path.
Description
  ExtractFile is a Boolean function that extracts the specified file in the cabinet file to a
  destination path. \FileName is a file name, as represented in Files, to extract from the cabinet
  file. DestPath indicates the disk path to use for storing the extracted file contents.
  
  ExtractFile insures that DestPath has a trailing path delimiter, and appends the \FileName argument
  to form a full path and file name for the extracted file. ExtractFile stores the complete path and
  file name value in the internal member variable reserved for that purpose.
  
  ExtractFile calls the SetupIterateCabinet function from the Setup API using the cabinet file
  identified in the FileName property and the internal callback function for file extraction.
  
  Use Files to access the file names stored in the cabinet file identified by the FileName property.
  
  Use ExtractAll to extract all files from the cabinet file identified in the FileName property to a
  specific destination path.
Parameters
  FileName - \File name to extract from the cabinet file.
  DestPath - Path to use for storing the extracted file.
Return value
  The return value for ExtractFile is True when SetupIterateCabinet completes successfully, or False
  if \FileName does not exist or another Win32 error is encountered in the callback function.
See Also
  TJvCABFile.Files, TJvCABFile.FileName, TJvCABFile.ExtractAll

----------------------------------------------------------------------------------------------------
@@TJvCABFile.ExtractAll
Summary
  Extracts files in a cabinet file to a specified path.
Description
  ExtractAll is a Boolean function that iterates over all files stored in a cabinet file, and
  extracts the files to the path specified in DestPath. ExtractAll insures that DestPath has a
  trailing path delimiter, and stores the value in the internal member variable reserved for that
  purpose.
  
  ExtractAll calls the SetupIterateCabinet function from the Setup API using the cabinet file
  identified in FileName and the internal callback function for file extraction.
  
  Use Files to access the file names stored in the cabinet file identified by FileName.
  
  Use ExtractFile to extract a specific file from the cabinet file identified in FileName to a
  specific destination path.
Parameters
  DestPath - The path where extracted files will be stored.
Return value
  The return value for ExtractAll is True when SetupIterateCabinet completes successfully, or False if
  FileName does not exist or another Win32 error is encountered in the callback function.
See Also
  TJvCABFile.Files, TJvCABFile.FileName, TJvCABFile.ExtractFile

----------------------------------------------------------------------------------------------------
@@TJvCABFile.Destroy
Summary
  Destructor for the object instance.
Description
  Destroy is the overridden destructor for the object instance. Destroy frees resources allocated in
  the Create constructor, including the Files property, and unloads the setupapi.dll.
See Also
  TJvCABFile.Create, TJvCABFile.Files

----------------------------------------------------------------------------------------------------
@@TJvCABFile.Create
Summary
  Constructor for the object instance.
Description
  Create is the overridden constructor for the object instance.
  
  Create allocates resources needed for the Files property, and sets to the FileName for the cabinet
  file to an empty string ('').
  
  Create will attempt to load the setupapi.dll needed for the Setup and Device Installer API. If
  setupapi.dll is not successfully loaded, Create will raise an EJVCLException exception.
  
  Set the FileName property value to begin working with files stored in the specified cabinet file.
  
  Resources allocated to the object instance, including the setupapi.dll, are released when the
  object is freed.
Parameters
  AOwner - Owner of the object instance.
See Also
  TJvCABFile.Destroy, TJvCABFile.FileName

----------------------------------------------------------------------------------------------------
@@TCABInfo.Id
Represents the current set identifier for one or more cabinet files. Id is generated by the software that builds the cabinet file.

----------------------------------------------------------------------------------------------------
@@TCABInfo.CabinetNumber
Represents the cabinet number for the cabinet file. CabinetNumber is generally a 0- or 1-based index indicating the ordinal position of the cabinet file within a set.

CabinetNumber is generated by the software that builds the cabinet file or set.

----------------------------------------------------------------------------------------------------
@@TJvCABFile
<TITLEIMG TJvCABFile>
#JVCLInfo
<GROUP JVCL.System.FilesAndFolders>
<FLAG Component>
Summary
  Encapsulates access to .CAB (cabinet) files using the Setup API.
Description
  TJvCABFile is a TJvComponent descendant that encapsulates access to .CAB (Cabinet) file using the
  Setup and Device Installer API. TJvCABFile has a dependency on the Setup and Device Installer API
  interface unit (SetupApi.pas) and the setupapi.dll file in Microsoft Windows.
  
  Cabinet files provide a file format that offers an efficient way to package and compress multiple
  files into a single file. TJvCABFile properties, methods, and events can be used when listing files
  stored in the .CAB, or when extracting files for subsequent use or installation. TJvCABFile does
  NOT provide methods for creating or populating .CAB files. Use the CABARC.EXE utility to \create or
  populate cabinet files.
  
  An application can assign procedures for the event handlers that correspond to notifications from
  the
  Setup API, including:
  
  <TABLE 30c%,40c%,30c%>
  Event Handler          Notification                 \ --------------------- 
  ---------------------------  ==================
  OnCABInfo              SPFILENOTIFY_CABINETINFO
  OnFilesListed          SPFILENOTIFY_FILEINCABINET   (general callback)
  OnFileExtracted        SPFILENOTIFY_FILEEXTRACTED
  OnStartFileExtraction  SPFILENOTIFY_FILEINCABINET   (extract callback)
  OnNeedNewCabinet       SPFILENOTIFY_NEEDNEWCABINET </TABLE>
  
  After assigning any relevant event handler procedures, set a value for the FileName property to
  gain access to the Files stored in the cabinet file.
  
  Call <LINK TJvCABFile.ExtractFile, ExtractFile> or <LINK TJvCABFile.ExtractAll, ExtractAll> to
  perform the desired file operation(s).

----------------------------------------------------------------------------------------------------
@@TCABInfo.CabinetPath
Represents the path to the cabinet file.

----------------------------------------------------------------------------------------------------
@@TCABInfo.CabinetFile
Represents the file name for the cabinet file.

----------------------------------------------------------------------------------------------------
@@TCABInfo.DiskName
Represents the name of the source media that contains the cabinet file.

----------------------------------------------------------------------------------------------------
@@TCABInfo
<TITLE TCABInfo type>
Summary
  Cabinet file information from the Setup and Device Installer API.
Description
  TCABInfo is a record structure used to store information about a .CAB cabinet file. TCABInfo
  contains values returned in callback functions for the Setup and Device Installer API during file
  listing or extraction operations.
  
  TCABInfo is used as an argument in TJvCABFile event handlers, like <LINK TJvCABFile.OnCABInfo,
  OnCABInfo> and <LINK TJvCABFile.OnNeedNewCabinet, OnNeedNewCabinet>.
See Also
  TOnCABInfo, TOnNeedNewCabinet, TJvCABFile.OnCABInfo, TJvCABFile.OnNeedNewCabinet

----------------------------------------------------------------------------------------------------
@@TOnCABInfo
<TITLE TOnCABInfo type> <COMBINE TJvCABFile.OnCABInfo>

----------------------------------------------------------------------------------------------------
@@TOnExtracted
<TITLE TOnExtracted type> <COMBINE TJvCABFile.OnFileExtracted>

----------------------------------------------------------------------------------------------------
@@TOnExtractFile
<TITLE TOnExtractFile type> <COMBINE TJvCABFile.OnStartFileExtraction>

----------------------------------------------------------------------------------------------------
@@TOnNeedNewCabinet
<TITLE TOnNeedNewCabinet type> <COMBINE TJvCABFile.OnNeedNewCabinet>

