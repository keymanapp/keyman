##Package: Dlgs
##Status: Completed, Incomplete (peter3)
----------------------------------------------------------------------------------------------------
@@JvProgressDialog.pas
Summary
    Contains the TJvProgressDialog component.
Author
  Peter Thörnqvist
----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.Text
Summary
  Specifies the text to display on the label located above the progress bar.
Description
  Use Text to display a text label above the progress bar. A text can be used to update the user on
  what part of the process is currently executing. To remove the label, set Text to an empty string.
  
  The Text property can be changed while the dialog is shown, either directly (if the dialog was
  shown using Show) or in the OnProgress event (if the dialog was shown using ShowModal).
See Also
  TJvProgressDialog.Caption

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.Smooth
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.ShowModal
Summary
  Displays the dialog modally.
Description
  Call ShowModal when you want to display the dialog modally. When a dialog is displayed modally, you
  cannot interact with it directly. To update the properties of the dialog, create an event handler
  for the OnProgress event and perform any necessary updates within it. For example, you can change
  Min,
  Max or Position to update the progress bar, Text and Caption to update the visual cues or Image to
  create a simulation of an animation.
  
  Use ShowModal when the process is performed in its own thread or when the process is suitable to be
  performed in short intervals (like attempting to connect to a service). If the process is
  time-intensive and executed within the main thread, consider using Show instead.
Return value
  Returns false if the user canceled the dialog, true otherwise. Users can only cancel the dialog if
  the ShowCancel property is true.
See Also
  TJvProgressDialog.Caption, TJvProgressDialog.Image, TJvProgressDialog.Max, TJvProgressDialog.Min,
  TJvProgressDialog.Position, TJvProgressDialog.Show, TJvProgressDialog.Text

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.ShowCancel
Summary
  Specifies if the user can abort the process.
Description
  Use ShowCancel to specify whether the dialog has a Cancel button or not. If ShowCancel is true, the
  user can abort the process either by clicking the Cancel button or by hitting Escape. If the dialog
  has a caption area, the system menu and the close button will also be activated if ShowCancel is
  true.
  
  If the user cancels the process, the OnCancel event is triggered and Cancelled is set to true.
See Also
  TJvProgressDialog.Cancelled, TJvProgressDialog.OnCancel, TJvProgressDialog.Show,
  TJvProgressDialog.ShowModal

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.ScreenPosition
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.Show
Summary
  Displays the dialog non-modally.
Description
  Call Show when you want to display the dialog non-modally. Depending on your needs, you might want
  to show the dialog either modally or non-modally. To display the dialog modally, call ShowModal
  instead.
See Also
  TJvProgressDialog.OnClose, TJvProgressDialog.OnShow, TJvProgressDialog.ShowModal

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.OnShow
Summary
  Occurs just before the dialog is displayed.
Description
  Write a handler for the OnShow event to take specific action when the dialog is shown.
See Also
  TJvProgressDialog.OnCancel, TJvProgressDialog.OnClose

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.Position
Summary
  Specifies the current position of the progress bar.
Description
  Read Position to determine how far the process tracked by the progress bar has advanced from Min
  toward Max. Set Position to cause the progress bar to display a position between Min and Max. For
  example, when the process tracked by the progress bar completes, set Position to Max so that it
  appears completely filled.
  
  When a progress bar is created, Min and Max represent percentages, where Min is 0 (0% complete) and
  Max is 100 (100% complete). If these values are not changed, Position is the percentage of the
  process that has already been completed.
  
  The Position property can be changed while the dialog is shown, either directly (if the dialog was
  shown using Show) or in the OnProgress event (if the dialog was shown using ShowModal).
See Also
  TJvProgressDialog.Max, TJvProgressDialog.Min, TJvProgressDialog.OnProgress, TJvProgressDialog.Show,
  TJvProgressDialog.ShowModal

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.OnProgress
Summary
  Occurs periodically while the dialog is shown modally.
Description
  Write a handler for the OnProgress event to update the dialog when it was displayed using the
  ShowModal method. To update the components on the dialog, you can assign new values to the Min, Max,
  Position, Caption, Image and Text properties within the event handler.
  
  The time between calls to the OnProgress event is controlled by the Interval property. OnProgress
  is not triggered if the dialog was displayed using the Show method.
Parameters
  Sender    - The object that triggered the event.
  AContinue - Set to false to close the dialog, set to true to keep it open.
See Also
  TJvProgressDialog.Caption, TJvProgressDialog.Image, TJvProgressDialog.Interval,
  TJvProgressDialog.Max, TJvProgressDialog.Min, TJvProgressDialog.Position,
  TJvProgressDialog.ShowModal, TJvProgressDialog.Text

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.OnClose
Summary
  Occurs when the dialog closes.
Description
  Write a handler for the OnClose event to take specific actions when the dialog is closed. OnClose
  is called even if the user canceled the dialog (which triggers the OnCancel event).
See Also
  TJvProgressDialog.OnCancel, TJvProgressDialog.OnShow

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.OnCancel
Summary
  Occurs when the user canceled the dialog.
Description
  Write a handler for the OnCancel event to take specific actions when the user cancels the progress
  dialog. The user can only cancel the dialog if the ShowCancel property is true.
See Also
  TJvProgressDialog.OnClose, TJvProgressDialog.ShowCancel

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.Min
Summary
  Specifies the lower limit of the range of possible positions for the progress bar.
Description
  Use Max along with the \Min property to establish the range of possible positions for the progress
  bar. Optimally, when the process tracked by the progress bar is complete, the value of Position
  should equal Max.
  
  The \Min property can be changed while the dialog is shown, either directly (if the dialog was
  shown using Show) or in the OnProgress event (if the dialog was shown using ShowModal).
See Also
  TJvProgressDialog.Max, TJvProgressDialog.OnProgress, TJvProgressDialog.Position,
  TJvProgressDialog.Show, TJvProgressDialog.ShowModal

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.Max
Summary
  Specifies the upper limit of the range of possible positions for the progress bar.
Description
  Use \Max along with the Min property to establish the range of possible positions for the progress
  bar. Optimally, when the process tracked by the progress bar is complete, the value of Position
  should equal \Max.
  
  The \Max property can be changed while the dialog is shown, either directly (if the dialog was
  shown using Show) or in the OnProgress event (if the dialog was shown using ShowModal).
See Also
  TJvProgressDialog.Min, TJvProgressDialog.OnProgress, TJvProgressDialog.Position,
  TJvProgressDialog.Show, TJvProgressDialog.ShowModal

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.InitValues
Summary
  Specifies max, min, interval, position, caption and text on one line.
Description
  Write here a description
Parameters
  AMin      - Description for this parameter
  AMax      - Description for this parameter
  AInterval - Description for this parameter
  APosition - Description for this parameter
  ACaption  - Description for this parameter
  AText     - Description for this parameter
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.Interval
Summary
  Specifies how often OnProgress is called.
Description
  Use Interval to set the number of milliseconds between calls to OnProgress when the dialog is shown
  using ShowModal. When the dialog is displayed using Show, this property has no effect.
  
  If Interval is less than or equal to 0, OnProgress is called once. If Interval is still less than
  or equal to 0, the dialog will be closed. Interval can be changed inside the OnProgress event and
  will be updated immediately.
See Also
  TJvProgressDialog.OnProgress, TJvProgressDialog.ShowModal

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.Hide
Summary
  Hides the dialog if it is was visible.
Description
  Call Hide to hide a visible dialog. Hide can only be called if the dialog was displayed using Show.
See Also
  TJvProgressDialog.Show

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.Image
Summary
  Specifies an image on the dialog.
Description
  Assign an image to this property to have it displayed in the dialog. The form will automatically
  adjust its size to the image if it is larger than the default size of the dialog.
  
  The Image property can be changed while the dialog is shown, either directly (if the dialog was
  shown using Show) or in the OnProgress event (if the dialog was shown using ShowModal).
See Also
  TJvProgressDialog.Caption, TJvProgressDialog.Show, TJvProgressDialog.ShowModal

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.Cancelled
Summary
  Determines if the user canceled the dialog before the process completed.
Description
  After the dialog is closed, Cancelled is set to true if the user closed the dialog before the
  process completed. A user can only close the dialog if the ShowCancel property is true. When
  showing the dialog modally, you can use the return value of ShowModal to determine if the user
  canceled the
  dialog but when you use Show, Cancelled is the only way to determine what the user did.
See Also
  TJvProgressDialog.Show, TJvProgressDialog.ShowCancel, TJvProgressDialog.ShowModal

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.Caption
Summary
  Specifies the text of the dialog caption.
Description
  Use Caption to set the caption of the dialog. If Caption is empty, the entire caption area of the
  form is removed. To display the caption area without any text in it, set Caption to a single space.
  
  The Caption property can be changed while the dialog is shown, either directly (if the dialog was
  shown using Show) or in the OnProgress event (if the dialog was shown using ShowModal).
See Also
  TJvProgressDialog.Text

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.Execute
Summary
  Displays the dialog.
Description
  Execute is used by the design time editor to show a preview of the dialog. Execute calls ShowModal.
  Don't call this method: Use Show or ShowModal instead to display the dialog.
Return value
  Always returns true.
See Also
  TJvProgressDialog.Show, TJvProgressDialog.ShowModal

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog
<TITLEIMG TJvProgressDialog>
#JVCLInfo
<GROUP JVCL.Bars.SlideAndProgress.Progress,JVCL.Dialogs.Custom>
<FLAG Component>
Summary
  A component that can display a progress dialog either modally or non-modally.
Description
  Use a TJvProgressDialog when you need to display a progress dialog in your application. Progress
  dialogs are mostly used to provide feedback to the user when the application is performing a
  lengthy process and the program needs to be disabled until finished.
  
  Depending on your needs, the dialog can be shown either modally or non-modally. When shown modally,
  the message loop of the program is actually taken over by the dialog and thus your program might
  not be able to perform its intended work (unless it is done in a separate thread). For example, the
  following code would not work when displaying the dialog modally.
  
  <CODE>
  JvProgressDialog1.ShowModal;
  DoLengthyProcess; </CODE>
  Because of the message loop being taken over by the dialog, the DoLengthyProcess method won't be
  called until the dialog is closed. When displaying the dialog modally, you must perform the
  processing in the OnProgress event instead.
  
  When displaying the dialog non-modally, you don't need to have an OnProgress event handler
  (actually, it isn't even called in this case). Instead you can update the components properties
  directly while performing the process.
  
  <CODE>
  // set up the dialog:
  JvProgressDialog1.Min := 0;
  JvProgressDialog1.Max := Count - 1;
  JvProgressDialog1.Position := 0;
  JvProgressDialog1.Text := 'Processing items, please wait...';
  JvProgressDialog1.Show;
  for i := 0 to Count - 1 do
  begin
    DoProcess(Items[i]);
    if i mod 10 = 0 then // only update display every 10'th item
      JvProgressDialog1.Position := i;
  end;
  JvProgressDialog1.Hide; </CODE>
  Note
  During execution of the dialog, the component properties reflects the <I>current</I> values in the
  dialog (as changed in OnProgress or by direct assignment). After execution, the properties are
  reset to their original values.

----------------------------------------------------------------------------------------------------
@@TJvProgressDialog.Transparent
Summary
  Specifies if the dialog image is transparent.
Description
  Use Transparent to set the background transparency of the image in Image on the dialog. If no image
  has been assigned, this property does nothing.
  
  This property cannot be changed while the dialog is shown.
See Also
  TJvProgressDialog.Image

----------------------------------------------------------------------------------------------------
@@TJvProgressDialogEvent
<TITLE TJvProgressDialogEvent type> <COMBINE TJvProgressDialog.OnProgress>

