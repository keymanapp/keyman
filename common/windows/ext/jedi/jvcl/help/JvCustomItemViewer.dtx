##Package: Custom
##Status: Completed, Incomplete (peter3)
----------------------------------------------------------------------------------------------------
@@JvCustomItemViewer.pas
Summary
    Contains base components and code for viewers that represent information in a grid like format.
Author
  Peter Thörnqvist
----------------------------------------------------------------------------------------------------
@@TJvViewerItemDrawEvent
<TITLE TJvViewerItemDrawEvent type> <COMBINE TJvCustomItemViewer.OnDrawItem>

----------------------------------------------------------------------------------------------------
@@TJvViewerItemList.Items
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvViewerItemHintEvent
<TITLE TJvViewerItemHintEvent type> <COMBINE TJvCustomItemViewer.OnItemHint>

----------------------------------------------------------------------------------------------------
@@TJvViewerItemList
Summary
  Write here a summary (1 line)
Description
  Write here a description

----------------------------------------------------------------------------------------------------
@@TJvViewerItemChangingEvent
<TITLE TJvViewerItemChangingEvent type> <COMBINE TJvCustomItemViewer.OnItemChanging>

----------------------------------------------------------------------------------------------------
@@TJvViewerItemClass
<TITLE TJvViewerItemClass type>
Summary
  Defines the metaclass for TJvViewerItem.
Description
  TJvViewerItemClass is the metaclass for TJvViewerItem. Its value is the class reference for
  TJvViewerItem or for one of its descendants.

----------------------------------------------------------------------------------------------------
@@TJvViewerItem.State
Summary
  Specifies the current state of the item.
Description
  Use the State property to read and change the current state of an item. State indicates state
  information that can affect how an item is drawn.
  Note
  All possible states might not apply to all item types.

----------------------------------------------------------------------------------------------------
@@TJvViewerItemChangedEvent
<TITLE TJvViewerItemChangedEvent type> <COMBINE TJvCustomItemViewer.OnItemChanged>

----------------------------------------------------------------------------------------------------
@@TJvViewerItem.Deleting
Summary
  Indicates whether an item is in the process of being deleted.
Description
  Deleting returns True if the item is in the process of being deleted. Use Deleting to prevent
  infinite recursion in event handlers.

----------------------------------------------------------------------------------------------------
@@TJvViewerItem.Hint
Summary
  Specifies the hint to display for an item
Description
  Use Hint to specify a hint for the item.

----------------------------------------------------------------------------------------------------
@@TJvViewerItem.ReduceMemoryUsage
Summary
  Tries to minimize memory usage.
Description
  ReduceMemoryUsage is called automatically by the TJvCustomItemViewer owning the item when
  appropriate. You should never need to call this method yourself. If you derive a new item class from
  TJvViewerItem, make sure to override this method if your class has some means of reducing memory
  consumption.
  
  For example, TJvImageItem overrides this method to free the image when the method is called.

----------------------------------------------------------------------------------------------------
@@TJvItemViewerScrollBar
<TITLE TJvItemViewerScrollBar type>
Summary
  Specifies the scrollbars allowed in a TJvCustomItemViewer.
Description
  TJvItemViewerScrollBar defines which scrollbar is visible in a TJvCustomItemViewer when not all
  items can be displayed within the client area of the control.

----------------------------------------------------------------------------------------------------
@@TJvItemViewerScrollBar.tvHorizontal
The control displays a horizontal scrollbar when needed. Items are arranged so that the height of the number of rows displayed never exceeds the client height of the control.

----------------------------------------------------------------------------------------------------
@@TJvItemViewerScrollBar.tvVertical
The control displays a vertical scrollbar when needed. Items are arranged so that the width of the number of columns displayed never exceeds the client width of the control.

----------------------------------------------------------------------------------------------------
@@TJvViewerAdvancedDrawEvent
<TITLE TJvViewerAdvancedDrawEvent type>
Summary
  Event type for advanced drawing.
Description
  Not used at the moment.
Parameters
  Sender      - The control that triggered the event.
  Stage       - The current draw stage.
  Canvas      - The canvas to draw on. You can modify the properties of canvas (like Color and Font) 
                to affect the default drawing.
  R           - The rect area to draw in.
  DefaultDraw - Set this to true to have the control perform default drawing.
See Also
  TJvViewerAdvancedItemDrawEvent

----------------------------------------------------------------------------------------------------
@@TJvViewerAdvancedItemDrawEvent
<TITLE TJvViewerAdvancedItemDrawEvent type>
Summary
  Event type for advanced item drawing.
Description
  Not used at the moment.
Parameters
  Sender      - The control that triggered the event.
  Stage       - The current draw stage.
  Index       - Index of the item to draw.
  State       - The items state.
  Canvas      - The canvas to draw on. You can modify the properties of canvas (like Color and Font) 
                to affect the default drawing.
  ItemRect    - The rect area of the item excluding the text area.
  TextRect    - The text area of the control.
  DefaultDraw - Set this to true to have the control perform default drawing.
See Also
  TJvViewerAdvancedDrawEvent

----------------------------------------------------------------------------------------------------
@@TJvViewerItem
Summary
  Base class for items in a TJvCustomItemViewer or descendant.
Description
  Use TJvViewerItem as the base class for items in the Items array of a TJvCustomItemViewer or
  descendant. You can control the actual class instantiated by overriding the GetItemClass method of
  TJvCustomItemViewer.

----------------------------------------------------------------------------------------------------
@@TJvViewerItem.Data
Summary
  Specifies any application-specific data associated with the item.
Description
  Use Data to associate arbitrary application data with the item.

----------------------------------------------------------------------------------------------------
@@TJvViewerItem.Delete
Summary
  Deletes the item.
Description
  Call Delete to delete the item from the list and free its memory.
See Also
  TJvViewerItem.Deleting

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.ShowCaptions
Summary
  Specifies whether items display text or not.
Description
  Use the ShowCaptions property to specify whether items show their captions or not. This property
  affects the calculation of the ItemRect and TextRect parameters passed to
  TJvCustomItemViewer.DrawItem.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.Smooth
Summary
  Specifies whether the amount the associated control scrolls is dynamically computed.
Description
  Set Smooth to True to specify that the scroll bar should dynamically adjust its scrolling increment
  based on the size of the associated control’s client area.
  
  When Smooth is True, clicking the end arrows of the scrollbar scrolls the associated control by
  approximately one tenth of its client area, and clicking the scrollbar beside the thumb tab scrolls
  the control by the length of the client area minus the amount scrolled by the end arrows. When
  Smooth is False, the Increment property controls the amount of scrolling when the user clicks the
  end arrows, and clicking beside the thumb tab scrolls the control by the entire length of the client
  area.
See Also
  TJvCustomItemViewerOptions.Tracking

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.Tracking
Summary
  Determines whether the scroll box moves before the thumb tab is released.
Description
  Use Tracking to control whether the scrollbar and associated control repaint while the thumb tab is
  dragged with the mouse. If Tracking is True, the image moves as the user drags the thumb tab. If
  Tracking is False, the image remains static until the thumb tab is released.
  
  Repainting while the thumb tab is dragged can provide useful feedback to the user about how far the
  control has scrolled, but slows performance.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.ScrollBar
Summary
  Specifies which scrollbar is displayed when items cannot fit within the client rect of the control.
Description
  Set ScrollBar to tvHorizontal to display a horizontal scrollbar when the items cannot fit inside
  the client area of the control. Set ScrollBar to tvVertical to display a vertical scrollbar when
  the items cannot fit.
  Note
  Although the control publishes the HorzScrollBar and VertScrollBar properties, do not use these to
  set the Visible property of the scrollbars since it will be changed immediately by the control.
  HorzScrollBar and VertScrollBar are published by the ancestor TScrollingWinControl and thus cannot
  be unpublished again.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.Width
Summary
  Specifies the horizontal size of an item the control in pixels.
Description
  Use the Width property to read or change the width of an item in the control.
See Also
  TJvCustomItemViewerOptions.Height

----------------------------------------------------------------------------------------------------
@@TJvItemViewerOptionsClass
<TITLE TJvItemViewerOptionsClass type>
Summary
  Defines the metaclass for TJvCustomItemViewerOptions.
Description
  TJvItemViewerOptionsClass is the metaclass for TJvCustomItemViewerOptions. Its value is the class
  reference for TJvCustomItemViewerOptions or for one of its descendants.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.VertSpacing
Summary
  Specifies the vertical spacing between items.
Description
  Use the VertSpacing property to read or change the vertical distance between two items in the
  control. The distance is expressed in pixels.
See Also
  TJvCustomItemViewerOptions.HorzSpacing

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.LazyRead
Summary
  Specifies how and when items are created.
Description
  Use the LazyRead property to specify how and when items are created by the control. If LazyRead is
  true, items are created and initialized when needed. If LazyRead is false, items are created as
  soon as they are added to the Items array.
See Also
  TJvCustomItemViewer.Add, TJvCustomItemViewer.Count, TJvCustomItemViewer.Insert,
  TJvCustomItemViewer.Items

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.MultiSelect
Summary
  Specifies whether the user can select more than one item at a time.
Description
  Use the MultiSelect property to specify whether the users can select more than one item at a time
  in the control.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.ReduceMemoryUsage
Summary
  Specifies whether memory usage should be kept to a minimum.
Description
  Set ReduceMemoryUsage to minimize the memory usage of the items in the control. Note that reducing
  memory usage might affect the update speed of the control.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.RightClickSelect
Summary
  Determines whether items that are clicked using the right mouse button are also selected.
Description
  Use RightClickSelect to allow the user to select items using the right mouse button. If
  RightClickSelect is True, the value of Selected is the value of the node last clicked with either
  the
  right or left mouse button. If RightClickSelect is False, the value of Selected is the node last
  clicked using the left mouse button.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.Change
Summary
  Called when an option has changed.
Description
  Change is called automatically when an option property has changed. Change notifies the
  TJvCustomItemViewer owning the class that an option has changed. If you derive a new class from
  TJvCustomItemViewerOptions, do not forget to call Change in the property setters for new properties.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.DragAutoScroll
Summary
  Specifies whether the control scrolls automatically when needed in a drag drop event.
Description
  Set DragAutoScroll to true to make the TJvCustomItemViewer scroll automatically when the mouse is
  near an edge in a drag and drop process. SetAutoDragScroll to false, to disable or handle the
  scrolling manually.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.Height
Summary
  Specifies the vertical size of an item in the control in pixels.
Description
  Use the Height property to read or change the height of an item in the control.
See Also
  TJvCustomItemViewerOptions.Width

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.HorzSpacing
Summary
  Specifies the horizontal spacing between items.
Description
  Use the HorzSpacing property to read or change the horizontal distance between two items in the
  control. The distance is expressed in pixels.
See Also
  TJvCustomItemViewerOptions.VertSpacing

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.HotTrack
Summary
  Specifies whether items are highlighted when the mouse passes over them.
Description
  Set HotTrack to True to provide visual feedback about which item is under the mouse. When HotTrack
  is
  False, there is no visual feedback when the mouse passes over the item.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.Layout
Summary
  Specifies the vertical placement of the text within an item.
Description
  Set Layout to specify how the text of an item is placed within the bounds of the item. Layout is
  the vertical analog to the Alignment property.
See Also
  TJvCustomItemViewerOptions.Alignment

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.UpdateOffset
Summary
  Recalculates the internal offset values.
Description
  Call UpdateOffset to recalculate the internal offset values. UpdateOffset is called as needed and
  developers seldom need to call it directly.
See Also
  TJvCustomItemViewer.UpdateAll

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions
Summary
  Base class for the Options property.
Description
  TJvCustomItemViewerOptions is the base class for Options property of TJvCustomItemViewer
  descendants.
  When developing a new item viewer that needs options not available in this class, derive a new
  class from TJvCustomItemViewerOptions, add the properties and methods needed. Finally, override the
  GetOptionsClass method of your TJvCustomItemViewer descendant to return the new class.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.Alignment
Summary
  Specifies how text is aligned within an item.
Description
  Use Alignment to specify whether values should be left-justified, right-justified, or centered in
  an item.
See Also
  TJvCustomItemViewerOptions.Layout

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.AutoCenter
Summary
  Specifies whether items are centered within the control.
Description
  Set AutoCenter to true to center the visible items in the control. Centering is done differently
  depending on the value of ScrollBar. If ScrollBar is tvHorizontal, the visible items are center
  vertically in the control, otherwise they are centered horizontally.
See Also
  TJvCustomItemViewerOptions.ScrollBar

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewerOptions.BrushPattern
Summary
  Specifies the background brush pattern to use for a selected item.
Description
  BrushPattern provides access to properties that control the appearance of the background pattern
  used for selected items in a TJvCustomItemViewer.
See Also
  TJvBrushPattern

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.UpdateCount
Summary
  Counts the number of times BeginUpdate was called without a corresponding call to EndUpdate.
Description
  UpdateCount keeps track of calls to BeginUpdate and EndUpdate so that they can be nested. Every
  call to BeginUpdate increments UpdateCount. Every call to EndUpdate decrements it. When UpdateCount
  returns to 0, the control updates itself to reflect all changes that occurred since the first call
  to
  BeginUpdate.
See Also
  TJvCustomItemViewer.BeginUpdate, TJvCustomItemViewer.EndUpdate

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.UnselectItems
Summary
  Unselects a range of items.
Description
  Call UnselectItems to unselect a range of items in one go. UnselectItems calls
  BeginUpdate/EndUpdate to speed the unselection process.
Parameters
  StartIndex - Index of the first item in the range.
  EndIndex   - Index of the last item in the range.
See Also
  TJvCustomItemViewer.SelectAll, TJvCustomItemViewer.SelectItems

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.UpdateAll
Summary
  Recalculates and updates all internal variables to reflect the current state.
Description
  Call UpdateAll to recalculate all internal variables and offsets as well as scrollbar information.
  UpdateAll is called as needed and developers seldom need to call it directly.
See Also
  TJvCustomItemViewer.UpdateOffset

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.SelectAll
Summary
  Selects all items in the control.
Description
  Call SelectAll to select all the items in the Items array. SelectAll is functionally equivalent to
  calling SelectItems with 0 and Count - 1 as parameters.
See Also
  TJvCustomItemViewer.SelectItems, TJvCustomItemViewer.UnselectItems

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.Selected
Summary
  Provides access to the selected state of the items in the Items array.
Description
  Read Selected to determine whether an item is selected. Change Selected to specify whether an item
  is selected or not.
Parameters
  Item - The item to read/write.
See Also
  TJvCustomItemViewer.SelectedIndex

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.SelectedIndex
Summary
  Specifies the index of the currently or last selected item.
Description
  Read SelectedIndex to determine the index of the currently selected item. If SelectedIndex is -1,
  no item is selected. If Options.MultiSelect is true, SelectedIndex returns the index of the item
  that was selected most recently.
See Also
  TJvCustomItemViewer.Selected

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.SelectItems
Summary
  Selects a range of items.
Description
  Call SelectItems to select a range of items in one go. SelectItems calls BeginUpdate/EndUpdate to
  speed the selection process.
Parameters
  StartIndex      - Index of the first item in the range.
  EndIndex        - Index of the last item in the range.
  AppendSelection - If true, already selected items are left selected. If false, the current
  selection                    is first removed.
See Also
  TJvCustomItemViewer.SelectAll, TJvCustomItemViewer.UnselectItems

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.ToggleSelection
Summary
  Toggles the selection state of an item.
Description
  Call ToggleSelection to toggle the selection state of an item.
Parameters
  Index        - Index of the item to toggle.
  SetSelection - Set to true to change the SelectedIndex if the item's selection state is toggled on.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.TopLeftIndex
Summary
  Specifies the index of the first visible item.
Description
  Read TopLeftIndex to determine the first visible item at the top left corner.
See Also
  TJvCustomItemViewer.BottomRightIndex

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.ItemChanged
Summary
  Called whenever an item property has \changed.
Description
  ItemChanged is called whenever an item (or one of its properties) in the Items array has changed.
  ItemChanged calls the OnItemChanged event.
Parameters
  Item - The item that has changed. This parameter can be nil.
See Also
  TJvCustomItemViewer.OnItemChanged

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.ItemChanging
Summary
  Called when an item is about to change.
Description
  ItemChanging is called before an item is changed. This method calls the OnItemChanging event. When
  AllowChange is set to false, the change is canceled.
Parameters
  Item        - The item that is about to change.
  AllowChange - Determines if the item is allowed to change.
See Also
  TJvCustomItemViewer.OnItemChanging

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.ScrollIntoView
Summary
  Scrolls a specific item into view.
Description
  Use ScrollIntoView to make a specific item visible in the item viewer.
  Note
  Do not confuse this method with ScrollInView. ScrollInView performs another tasks altogether.
Parameters
  Index - The index of the item to make visible.
See Also
  TJvCustomItemViewer.ScrollBy

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.Items
Summary
  Provides indexed access to the items in the control.
Description
  Use Items to read or modify an item at a particular position. Index gives the position of the item,
  where 0 is the position of the first item, 1 is the position of the second item, and so on. To
  locate a particular item in the list, call the IndexOf method.
See Also
  TJvCustomItemViewer.IndexOf

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.ItemSize
Summary
  Stores the height and width of an item in a single variable.
Description
  Read ItemSize to determine the height and width of an item in the list. The size of an item is
  determined by Options.Width and Options.Height as well Options.VertSpacing and Options HorzSpacing.
  
  ItemSize.cx stores the width of an item and ItemSize.cy stores the height.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.OnDeletion
Summary
  Occurs when an item is deleted in the list.
Description
  \Write a handler for this event to take specific action when an item is deleted from the list.
See Also
  TJvCustomItemViewer.OnInsertion

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.OnDrawItem
Summary
  Called whenever an item needs to be drawn.
Description
  Assign an event handler to the OnDrawItem to control the way an item is drawn in the control.
  DrawItem calls OnDrawItem for each item in the Items array as needed.
Parameters
  Sender   - The object that triggered the event.
  Index    - The index of the item to draw.
  State    - The state of the item to draw.
  Canvas   - The control's canvas to draw on.
  ItemRect - The bounding rect of the item to draw, excluding the text area.
  TextRect - The bounding rect of the text area for the item.
See Also
  TJvCustomItemViewer.DrawItem

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.OnInsertion
Summary
  Occurs when a new item is added to the list.
Description
  \Write a handler for this event to take specific action when an item is added to the list.
See Also
  TJvCustomItemViewer.OnDeletion

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.OnItemChanged
Summary
  Called when an item has \changed.
Description
  Write an event handler for the OnItemChanged event to take specific action when an item in the
  Items array has changed. For example, you might want to update a status display whenever a property
  of an item has been modified.
Parameters
  Sender - The object that triggered the event.
  Item   - The item that has changed.
See Also
  TJvCustomItemViewer.OnItemChanging

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.OnItemChanging
Summary
  Called when an item is about to change.
Description
  Write an event handler for the OnItemChanging event to take specific action when an item in the
  Items array is about to change. For example, you might want to prohibit changes to items under
  certain circumstances.
  
  To disallow an item to change, set the Allow parameter to false. By default, Allow is true.
Parameters
  Sender - The object that triggered the event.
  Item   - The item that is about to change.
  Allow  - Set to false to disallow the change. Default value is true.
See Also
  TJvCustomItemViewer.OnItemChanged

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.OptionsChanged
Summary
  Triggers the OnOptionsChanged event.
Description
  OptionsChanged is called when a property in the Options class is changed. OptionsChanged triggers
  the
  OnOptionsChanged event.
See Also
  TJvCustomItemViewer.OnOptionsChanged

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.ScrollBy
Summary
  Scroll control contents.
Description
  Call ScrollBy to scroll the contents within the control.
  
  Applications seldom need to call the ScrollBy method unless they implement their own scrolling
  interface rather than relying on a scroll bar.
  
  The DeltaX parameter is the change in pixels along the X axis. A positive DeltaX value scrolls the
  contents to the right; a negative value scrolls the contents to the left. The DeltaY parameter is
  the change in pixels along the Y axis. A positive DeltaY value scrolls the contents down; a
  negative value scrolls the contents up.
Parameters
  DeltaX - The number of pixels to scroll the control horizontally. This value can be negative.
  DeltaY - The number of pixels to scroll the control vertically. This value can be negative.
See Also
  TJvCustomItemViewer.ScrollIntoView

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.OnOptionsChanged
Summary
  Called when an option has changed.
Description
  Write an event handler for the OnOptionsChanged event to take specific action whenever an option
  has changed.
See Also
  TJvCustomItemViewer.OptionsChanged

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.OnScroll
Summary
  Called when the control is scrolled.
Description
  Write an event handler for the OnScroll event to take specific action when the control is scrolled
  using the scroll bar.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.Options
Summary
  Provides access to the control's options.
Description
  Use Options to read and modify the options for the control. The class type of the Options property
  is determined by the value returned by the GetOptionsClass protected method. Descendant classes
  might override this method to return an options class better tailored to the specific control.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.OnItemHint
Summary
  Occurs when the hint for an item is about to be displayed.
Description
  \Write a handler for this event to take specific action when the hint for an item is about to be
  displayed.
Parameters
  Sender   - The item viewer that triggered the event.
  Index    - The index of the item for which a hint is to be displayed
  HintInfo - Provides access to the hint info.
  Handled  - Set this to true if your code handles the hint itself.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.ItemRect
Summary
  Calculates the bounding rect of an item.
Description
  ItemRect calculates the bounding rect of an item and return the result. If IncludeSpacing is true,
  the values of Options.VertSpacing and Options.HorzSpacing is included in the result.
Parameters
  Index          - Index of the item to calculate.
  IncludeSpacing - If true, spacing is included in the returned rect.
Return value
  The TRect that bounds the item.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.IndexOf
Summary
  Returns the index of the first occurrence in the list of a specified item.
Description
  Call IndexOf to get the index for an item in the Items array. The first item in the array has index
  0, the second item has index 1, and so on.
  
  If an item is not in the list, IndexOf returns -1. If an item appears more than once in the list,
  IndexOf returns the index of the first appearance.
Parameters
  Item - The item to find.
Return value
  The index of the item if found or -1 if Item is not in the Items array.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.ItemAtPos
Summary
  Returns the index of the item indicated by the coordinates of a point on the control.
Description
  Use ItemAtPos to detect if an item exists at a particular point in the control.
  
  The X and Y parameters is the point in the control in window coordinates. If C and Y is beyond the
  last item in the control, the value of the Existing variable determines the returned value. If
  Existing is set to True, ItemAtPos returns -1, indicating that no item exists at that point. If
  Existing is set to False, ItemAtPos returns the index of the last item in the control plus one.
Parameters
  X        - The horizontal position of the item.
  Y        - The vertical position of the item.
  Existing - Determines if the method should return -1 or the last item plus one if there is no item 
             at X, Y.
Return value
  The index of the control at X/Y or -1 if not found or the last item + 1 if Existing is false.
See Also
  TJvCustomItemViewer.IndexOf

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.Clear
Summary
  Clears the Items array.
Description
  Clear empties the Items array and frees the items.
See Also
  TJvCustomItemViewer.Add, TJvCustomItemViewer.Delete, TJvCustomItemViewer.Items

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.ColRowToIndex
Summary
  Converts a column row index to an Items array index.
Description
  ColRowToIndex converts a column and row index to the corresponding Items index. This function does
  not check ACol and ARow, so if the column and row index are invalid, so is the result.
Parameters
  ACol - The column index to convert. This is 0-based.
  ARow - The row index to convert. This is 0-based.
Return value
  The corresponding Items index. This is 0-based.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.Count
Summary
  Specifies the number of items in the control.
Description
  Use Count to read and change the number of items in the control. Changing Count will change the
  upper bound of the Items array. Calling Add, Delete and Clear automatically changes Count.
See Also
  TJvCustomItemViewer.Add, TJvCustomItemViewer.Clear, TJvCustomItemViewer.Delete,
  TJvCustomItemViewer.Items

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.Delete
Summary
  Deletes an item.
Description
  Call delete to remove an item from the Items array. The item is freed when it is removed.
Parameters
  Index - The 0-based index of the item to remove.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.DoReduceMemory
Summary
  Reduces memory usage.
Description
  You don't have to call DoReduceMemory since TJvCustomItemViewer calls this method as needed.
  DoReduceMemory calls each item's ReduceMemoryUsage procedure if Options.ReduceMemoryUsage is true.
  The base item class does nothing in its ReduceMemoryUsage procedure but descendant classes might
  implement this differently.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.DrawItem
Summary
  Called when an item needs to be visually updated.
Description
  DrawItem is called for each item when it needs to be redrawn. Override this method in a descendant
  class to change the way items are drawn. Depending on the value of Options.LazyRead, DrawItem is
  called differently. If LazyRead is true, DrawItem is called for each visible item. If LazyRead is
  false, DrawItem is called for all items.
Parameters
  Index    - The index of the item in the Items array.
  State    - The current state of the item to draw.
  Canvas   - The canvas to draw on.
  ItemRect - The rect of the item to draw excluding TextRect.
  TextRect - The rect of the text (if any) to draw. This rect is adjusted according to Options.Layout
              and Options.Alignment.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.FindLastSelected
Summary
  Finds and returns the index of the last selected item.
Description
  Call FindLastSelected to find and return the last selected item in the control. If
  Options.MultiSelect is false, this is the same as SelectedIndex.
See Also
  TJvCustomItemViewer.FindFirstSelected, TJvCustomItemViewer.SelectedIndex

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.GetDragImages
Summary
  Returns the image list to be displayed during drag operations.
Description
  GetDragImages is called automatically during drag-and-drop operations to allow the control to
  supply an image that is displayed while the one of the items is dragged. If an item is being
  dragged,
  GetDragImages returns the image for the item that was selected when the DoStartDrag method was
  called.
  Note
  GetDragImages only returns the item under the cursor even if multiple items are selected.
Return value
  An imagelist containing one image representing the currently selected item.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.GetItemClass
Summary
  Returns the class type of the items in the Items list.
Description
  Override GetItemClass in descendant classes to return the class type of the items in the Items
  array.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.GetItemState
Summary
  Returns the current state of the specified item.
Description
  Call GetItemState to return the current state of an item in the Items array. Calling GetItemState
  is safer than accessing the State property of an item in the Items array directly since
  GetItemState first checks that Index is valid. If Index is out of bounds, this method returns an
  empty set.
Parameters
  Index - The index of the item in the Items array to return the state for.
Return value
  The state of the specified item or an empty set if Index is out of bounds.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.GetOptionsClass
Summary
  Returns the class type of the class used for the Options property.
Description
  Override GetOptionsClass in descendant classes to return the class type for the control's Options
  property.
Return value
  The class type of the Options property.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.EndUpdate
Summary
  Re-enables screen repainting.
Description
  Use EndUpdate to re-enable screen repainting that was turned off with the BeginUpdate method.
See Also
  TJvCustomItemViewer.BeginUpdate, TJvCustomItemViewer.UpdateCount

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.FindFirstSelected
Summary
  Finds and returns the index of the first selected item.
Description
  Call FindFirstSelected to find and return the first selected item in the control. If
  Options.MultiSelect is false, this is the same as SelectedIndex.
See Also
  TJvCustomItemViewer.FindLastSelected, TJvCustomItemViewer.SelectedIndex

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.Insert
Summary
  Inserts an existing item into the list.
Description
  Call Insert to insert an existing item in the list at a specified position.
Parameters
  Index - The position where the item should be inserted.
  AItem - The item to insert.
See Also
  TJvCustomItemViewer.Add, TJvCustomItemViewer.Clear, TJvCustomItemViewer.Count

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.GetTextHeight
Summary
  Returns the height of text in the control.
Description
  Override GetTextHeight to return the text height of an item in the control. The base implementation
  calculates the height of the text as a single line string.
Return value
  The single line height of a text string using the current Font.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.IndexToColRow
Summary
  Converts an index in the list to a Column/Row value.
Description
  Call IndexToColRow to convert an Items index into its corresponding column and row index.
Parameters
  Index - The index of the item to convert.
  ACol  - The column index is returned in this parameter.
  ARow  - The row index is returned in this parameter.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.BeginUpdate
Summary
  Suspends screen repainting.
Description
  The BeginUpdate method suspends screen repainting until the EndUpdate method is called. Use
  BeginUpdate to speed processing and avoid flicker while items are added to, modified or deleted
  from the control.
See Also
  TJvCustomItemViewer.EndUpdate, TJvCustomItemViewer.UpdateCount

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.BorderStyle
Summary
  Determines whether the control has a single line border around the client area.
Description
  Use BorderStyle to affect the sharpness with which the client area of the control stands out.
  BorderStyle can have a value of either bsSingle or bsNone. If BorderStyle is bsSingle, the control
  has a single-line border around the client area. If BorderStyle is bsNone, there will be no border.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.BottomRightIndex
Summary
  Specifies the index of the last visible item.
Description
  Read BottomRightIndex to determine the last visible item at the bottom right corner.
See Also
  TJvCustomItemViewer.TopLeftIndex

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.CalcIndices
Summary
  Calculates the range of visible items in the control.
Description
  Call CalcIndices to recalculate the TopLeftIndex and BottomRightIndex. Normally, you do not need to
  call this procedure since it is called automatically when the control is resized, scrolled or when
  the Count property changes.
See Also
  TJvCustomItemViewer.BottomRightIndex, TJvCustomItemViewer.TopLeftIndex

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.Canvas
Summary
  Provides access to the drawing surface for the control.
Description
  Use Canvas as the drawing surface for the control.
See Also
  TJvCustomItemViewer.OnDrawItem

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.Changed
Summary
  Responds when Count or Items changes.
Description
  Changed is called automatically when Items change or when the EndUpdate method signals that an
  update is complete. It checks the value of UpdateCount, and if it is 0, calls the UpdateAll method,
  which performs any necessary updates.
  
  When writing a viewer descendant, there is no need to call Changed. Instead, bracket any changes by
  calls to BeginUpdate and EndUpdate.
See Also
  TJvCustomItemViewer.BeginUpdate, TJvCustomItemViewer.EndUpdate, TJvCustomItemViewer.UpdateCount

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.CheckHotTrack
Summary
  Determines the item that should be hot tracked.
Description
  CheckHotTrack is called automatically by the base control when it needs to determine what item
  should be drawn in the hot-track state. An item is only hot-tracked when the mouse is hovering over
  it and the Options.HotTrack property is true.
See Also
  TJvCustomItemViewer.Options

----------------------------------------------------------------------------------------------------
@@TJvBrushPattern.Active
Summary
  Determines if the brush pattern is in use.
Description
  Set the Active property to false when you don't want to use the TBitmap pattern returned by calling
  GetBitmap.
  
  By convention, when Active is false, OddColor is used to draw the background.
See Also
  TJvBrushPattern.EvenColor, TJvBrushPattern.GetBitmap, TJvBrushPattern.OddColor

----------------------------------------------------------------------------------------------------
@@TJvBrushPattern.EvenColor
Summary
  Defines the color to use for the even pixels in a pattern brush.
Description
  Set the value of EvenColor to define what color is used for even pixels in the brush pattern
  returned by calling GetBitmap.
  
  Note "OddColor" and "EvenColor" aren't exactly correct terminology in this context since the bitmap
  is built by alternating EvenColor and OddColor in such a manner that it creates a checker board
  pattern.
See Also
  TJvBrushPattern.GetBitmap, TJvBrushPattern.OddColor

----------------------------------------------------------------------------------------------------
@@TJvBrushPattern.GetBitmap
Summary
  Returns a bitmap that can be used as a brush.
Description
  Call GetBitmap to get a reference to a 8x8 pixel TBitmap object that is assignable to the
  TBrush.Bitmap property.
  
  Do not free the returned TBitmap as it is internally managed and might be shared with other
  controls.
Return value
  If Active is false, nil is returned. If Active is true, a 8x8 TBitmap object is returned.
See Also
  TJvBrushPattern.Active, TJvBrushPattern.EvenColor, TJvBrushPattern.OddColor

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.Add
Summary
  Adds an existing item to the Items list.
Description
  Call Add to add an existing item to the Items list. The item is added as the last item to the list.
  If you want to create a new item and add it to the list, change the Count property instead.
Parameters
  AItem - The item to add.
Return value
  The index of the newly added item.
See Also
  TJvCustomItemViewer.Clear, TJvCustomItemViewer.Delete, TJvCustomItemViewer.Insert

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer
Summary
  Base class for visual components that can display its content in a grid like fashion.
Description
  Use TJvCustomItemViewer as a base class when defining components that represent information in a
  grid like format. TJvCustomItemViewer introduces properties and methods to control the appearance
  and behavior of the viewer, including responses to mouse, keyboard and wheel actions, handling of
  multiselect, dragging, edge scrolling and memory conservation.
  
  Do not create instances of TJvCustomItemViewer. Instead, put a viewer control in a form by
  instantiating a descendant of TJvCustomItemViewer. Use TJvImagesViewer to display images from
  graphic files in a folder. Use a TJvImageListViewer to display items from a TCustomImageList. Use
  TJvOwnerDrawViewer to display arbitrary data where you are responsible for drawing each item.

----------------------------------------------------------------------------------------------------
@@TJvBrushPattern.OddColor
Summary
  Defines the color to use for the odd pixels in a pattern brush.
Description
  Set the value of OddColor to define what color is used for odd pixels in the brush pattern returned
  by calling GetBitmap. Note "OddColor" and "EvenColor" aren't exactly correct terminology in this
  context since the bitmap is built by alternating EvenColor and OddColor in such a manner that it
  creates a checker board pattern.
See Also
  TJvBrushPattern.EvenColor, TJvBrushPattern.GetBitmap

----------------------------------------------------------------------------------------------------
@@CenterRect
<TITLE CenterRect function>
Summary
  Centers one TRect inside another.
Description
  CenterRect adjusts the bounds of the inner rect so it is centered in relation to the outer rect.
Parameters
  InnerRect - The rect to center.
  OuterRect - The rect to center against.

----------------------------------------------------------------------------------------------------
@@ClearBrushPatterns
<TITLE ClearBrushPatterns procedure>
Summary
  Clears the internal list of brush patterns.
Description
  ClearBrushPatterns removes all brush patterns created by CreateBrushPattern from the internal list.
  Normally, you should not need to call this function.
See Also
  CreateBrushPattern, ReleasePattern

----------------------------------------------------------------------------------------------------
@@CreateBrushPattern
<TITLE CreateBrushPattern function>
Summary
  Creates a bitmap from a two-color pattern.
Description
  Call CreateBrushPattern to create and return a TBitmap object that can be assigned to the Bitmap
  property of a TBrush and used to paint a background pattern on a control.
  
  If the specified pattern already exist, the internal reference count is incremented and the existing
  TBitmap is returned.
  Note
  Do not destroy the returned TBitmap object. This is done automatically when the application closes
  down.
Parameters
  EvenColor - The color to use on even pixels in the bitmap.
  OddColor  - The color to use on odd pixels in the bitmap.
See Also
  ClearBrushPatterns, ReleasePattern

----------------------------------------------------------------------------------------------------
@@ReleasePattern
<TITLE ReleasePattern procedure>
Summary
  Frees a specific pattern if it is not in use anymore.
Description
  ReleasePattern decrements the internal reference count for the specified pattern and releases the
  associated TBitmap object if the reference count is 0.
  
  The pattern to release must have been created by a call to CreateBrushPattern for ReleasePattern to
  find it.
Parameters
  EvenColor - The color used on even pixels in the bitmap.
  OddColor  - The color used on odd pixels in the bitmap.
See Also
  ClearBrushPatterns, CreateBrushPattern

----------------------------------------------------------------------------------------------------
@@TJvBrushPattern
Summary
  Class that manages a brush pattern.
Description
  TJvBrushPattern handles a brush pattern bitmap that can be used for the Bitmap property of a TBrush.
  TJvBrushPattern creates the TBitmap as necessary and also makes sure that patterns not in use are
  disposed of correctly.

----------------------------------------------------------------------------------------------------
@@TJvCustomItemViewer.GetTextRect
Summary
  Adjusts a rect so it encloses the passed in string.
Description
  Call GetTextRect with a string and a rect to have the rect adjusted to enclose the string S. The
  rect is adjusted according to the value of Options.Layout. ItemRect must contain the correct values
  for
  Left and Right before calling this method.
Parameters
  S        - The string to calculate the rect for.
  ItemRect - The rect to adjust.
Return value
  A TRect adjusted according to the value of Options.Layout.

