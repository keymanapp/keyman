##Package: TimeFramework
##Status: Completed, Incomplete (peter3)
----------------------------------------------------------------------------------------------------
@@JvTFManager.pas
Summary
    Contains the TJvTFManager component.
Author
  Mike Kolter
  Unlimited Intelligence Limited
----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManagerCache
Summary
  Manages the object cache.
Description
  Used internally to manage the object cache. The cache is sued to automatically create and free
  objects as necessary, relieving the programmer from having to think about it.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.StateImageMap
Summary
  Specifies the images to use for appointment states.
Description
  Allows you to display specific images for specific appointment states. See TJvTFStateImageMap for
  more details.
See Also
  TJvTFScheduleManager.StateImages

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.StateImages
Summary
  The imagelist containing images for appointment state.
Description
  Set the property to point to a TImageList the contains the images would want the appointments to
  show for the various states.
See Also
  TJvTFScheduleManager.StateImageMap

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.Schedules
Summary
  Provides indexed access to the schedules.
Description
  Allows you to access each of the schedule objects that are connected to the component.
See Also
  TJvTFScheduleManager.ScheduleCount

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.ScheduleCount
Summary
  Returns the number of schedules in the component's Schedules list.
Description
  Use ScheduleCount to determine number of schedules in the list
See Also
  TJvTFScheduleManager.Schedules

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.RequestSchedule@TJvTFControl@string@TDate@Boolean
<COMBINE TJvTFScheduleManager.RequestSchedule@TJvTFComponent@string@TDate>

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.SchedLoadMode
Summary
  Specifies the manner in which schedules are loaded into TJvTFScheduleManager.
Description
  slmOnDemand will fire the OnNeedAppts event for each schedule to be loaded. slmBatch will caused
  the schedules to be batched and loaded at a later time when the OnLoadBatch and/or
  OnBatchesProcessed events fire.
  Note
  If SchedLoadMode is set to slmOnDemand, the OnLoadBatch and OnBatchesProcessed events will NOT fire
  unless a direct call is made to ProcessBatches. If SchedLoadMode is set to slmBatch, the
  OnNeedAppts event will NOT fire.
  
  Please see <LINK __JVCL.Info.TimeFramework.BatchLoading, "Batch Loading"> for more information.
See Also
  <LINK __JVCL.Info.TimeFramework.BatchLoading, Batch Loading>

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.RequestSchedule@TJvTFComponent@string@TDate@Boolean
<COMBINE TJvTFScheduleManager.RequestSchedule@TJvTFComponent@string@TDate>

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.RequestSchedule@TJvTFControl@string@TDate
<COMBINE TJvTFScheduleManager.RequestSchedule@TJvTFComponent@string@TDate>

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.RequestSchedule@TJvTFComponent@string@TDate
Summary
  Finds a schedule object.
Description
  The RequestSchedule method is used to retrieve a schedule object from the server. In the first two
  variations, ApptCtrl is the control that is requesting the schedule. In the last two variations,
  Comp is the JvTFComponent that is requesting the schedule. SchedName and SchedDate specify the name
  (resource name) and date of the requested schedule.
  
  If the schedule object is not already loaded into the server, the server will create the object and
  fire the OnNeedAppts event so that you may retrieve the appointment data from physical storage and
  add the appointments to the schedule.
  
  If the schedule object is already present in memory, RequestSchedule will simply return a pointer
  to it.
  
  Two variations include the LoadedNow variable which will be set to True if the schedule had to be
  loaded, False if it was already present in memory.
  
  Use the ReleaseSchedule method to release a schedule object from a JvTFComponent or Control.
Parameters
  ApptCtrl  - The control requesting the schedule.
  Comp      - The component requesting the schedule.
  SchedName - Name of the schedule.
  SchedDate - Date of the schedule.
  LoadedNow - False if the schedule was already in memory.
Return value
  The requested schedule object.
See Also
  TJvTFScheduleManager.ReleaseSchedule

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.RequestAppt
Summary
  Finds or creates a new appointment.
Description
  When an appointment object is needed from the server RequestAppt will normally be used. RequestAppt
  will search the server's appointments for an appointment that has an ID that matches the given ID.
  If no match is found (or no ID is given) the server will create a new appointment object and set
  the New parameter to True.
  
  In either case, RequestAppt will return an appointment object for use via the Appt parameter.
Parameters
  ID   - The ID of the appointment.
  Appt - The new or found appointment.
  New  - Is Set to true if Appt contains a newly created object.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.ReleaseSchedule@TJvTFControl@string@TDate
<COMBINE TJvTFScheduleManager.ReleaseSchedule@TJvTFComponent@string@TDate>

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.ReleaseSchedule@TJvTFComponent@string@TDate
Summary
  Signals that a component or control no longer needs a schedule.
Description
  The ReleaseSchedule method signals the server that the control specified by ApptCtrl (or component
  specified by Comp) no longer needs access to the schedule with name=SchedName and date=SchedDate.
  
  If the schedule is not used by any other JvTFComponents or JvTFControls, the server will cache the
  schedule object.
  
  You normally will not use this method. A JvTFComponent or Control will automatically call this
  method when a schedule is no longer needed.
  
  Use the RequestSchedule method to request a schedule object for use by a JvTFComponent or Control.
Parameters
  Comp      - The component in question.
  ApptCtrl  - The control in question.
  SchedName - Name of the schedule.
  SchedDate - Date of the schedule.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.Refreshing
Summary
  Determines whether the server is currently refreshing its appointments.
Description
  This property will be True if the server is currently in the process of refreshing its appointment
  and schedule objects, False otherwise.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.RefreshConnections
Summary
  Redraws one or more controls.
Description
  Use RefreshConnections to cause one or more of the controls (and/or components) connected to the
  server to refresh (redraw) themselves. The specific controls (components) that actually get
  refreshed are based on the value of Trigger and follow these rules:
  
  If Trigger is:
  
  * Nil: All controls connected to the server are refreshed
  * A TJvTFComponent: Only that component is refreshed
  * A TJvTFControl: Only that control is refreshed
  * A TJvTFSched: Only the controls that reference the given schedule are refreshed
  * A TJvTFAppt: Only the controls that reference a schedule that contains the given appointment are 
   refreshed
  
  Any other value for Trigger raises an EJvTFScheduleManagerError exception.
  Note
  This method was renamed from RefreshControls as of version 1.1 of the server.
Parameters
  Trigger - an object to refresh (or nil).

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.RefreshAutoReconcile
Summary
  Determines if automatic reconciliation is activated.
Description
  If True, TJvTFScheduleManager will automatically reconcile deleted/refreshed appointments after a
  Refresh has taken place. You must set the Refreshed property to True for each appointment refreshed
  in one of the Refresh events. Please see <LINK __JVCL.Info.TimeFramework.RefreshReconciliation,
  "Refresh Reconciliation"> for more information.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.RefreshAppts
Summary
  Reloads all appointments.
Description
  [This method is obsolete as of version 1.1 of the server.]
  
  Please use dbRefreshAll, dbRefreshSched, dbRefreshAppt or dbRefreshOrphans instead.
See Also
  TJvTFScheduleManager.dbRefreshAll, TJvTFScheduleManager.dbRefreshAppt,
  TJvTFScheduleManager.dbRefreshOrphans, TJvTFScheduleManager.dbRefreshSched

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.ReconcileRefresh
Summary
  Adds appointments to the internal cache.
Description
  This procedure will cache all affected appointments whose Refreshed property is set to False. Which
  appointments that are affected is controlled by Scope.
  
  If Scope is a TJvTFAppt then only the appt specified by Scope is reconciled. If Scope is a
  TJvTFSched then all appointments that belong to that schedule are reconciled. If Scope is a
  TJvTFScheduleManager
  then all appointments that reside in the server are reconciled.
  
  Under normal circumstances you will not have to call this method. Please see <LINK
  __JVCL.Info.TimeFramework.RefreshReconciliation, "Refresh Reconciliation"> for more information.
Parameters
  Scope - Specifies the scope for the reconcile. Warning This method ignores the value of the
           RefreshAutoReconcile property. Use extreme caution in calling this method, especially if
           RefreshAutoReconcile is set to False!
See Also
  TJvTFScheduleManager.RefreshAutoReconcile

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.PostAppts
Summary
  Saves all appointments to storage.
Description
  Use this method to post all of the appointment objects in the server at once.
  
  This method is equivalent to:
  <CODE>
   for I := 0 to ApptCount - 1 do
     dbPostAppt(Appts[I]); </CODE>
See Also
  TJvTFScheduleManager.dbPostAppt

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.ProcessBatches
Summary
  Processes several schedules at once.
Description
  Call this event to trigger the loading of all of the schedules that have been batched since the last
  call to ProcessBatches. Under normal circumstances you will not have to call this method. Please
  see <LINK __JVCL.Info.TimeFramework.BatchLoading, "Batch Loading"> for more information.
  Note
  This method will ALWAYS trigger the batch loading process regarding of the setting of
  SchedLoadMode, as long as there are schedules that have been previously batched to be loaded.
  (Schedules will not be batched for loading unless SchedLoadMode is set to slmBatch.)
See Also
  TJvTFScheduleManager.SchedLoadMode

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnRefreshSched
Summary
  Occurs when a schedule needs to be reloaded.
Description
  This event fires when the server needs to refresh the data for each appointment that is linked to a
  specific schedule object, given by the Sched parameter. It is your responsibility to provide code
  in the event that will actually update the appointment data.
  
  The Modified property for each appointment linked to the schedule will be set to False before the
  event is fired. If, for some reason, the Modified property for a particular appointment needs to be
  set to True, simply call the TJvTFAppt.SetModified method.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnSetApptDescription
Summary
  Occurs when an appointment's description is changed.
Description
  This event is fired when an appointment's Description property is being written. Appt references
  the appointment whose description is being modified. Description specifies the appt's description,
  which is modifiable by you. This event may come in handy for things such as encrypting/decrypting
  the appt's description.
See Also
  TJvTFScheduleManager.OnGetApptDescription

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnRefreshAppt
Summary
  Occurs when an appointment needs to be reloaded.
Description
  This event will be fired when the appointment object in memory needs to have its data updated to
  reflect the data on disk. You need to provide the code that will retrieve the data from physical
  storage and set the appointment object's properties appropriately.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnRefreshAll
Summary
  Occurs when data needs to be refreshed.
Description
  This event will be fired when the server needs to refresh all of its schedule and appointment data.
  You will need to provide code in this event that will actually update the schedule and appointment
  data.
  
  The Modified property for each of the appointment objects in the server will set to False before
  the event is fired. If, for some reason, the Modified property needs to be set to true simply call
  TJvTFAppt.SetModified for the specific appointment.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnPostAppt
Summary
  Occurs when an appointment needs to be saved.
Description
  The event is fired when an appointment's data needs to be saved to your physical storage
  implementation. You need to provide code behind this event that will accomplish this task. You can
  prevent this event from being fired by handling the OnPostApptQuery event.
See Also
  TJvTFScheduleManager.OnPostApptQuery

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnPostApptQuery
Summary
  Occurs before an appointment is saved.
Description
  This event is fired before an appointment object is posted. By default, CanPost is True which allows
  TJvTFScheduleManager to fire the OnPostAppt event. You can set CanPost to false to prevent
  TJvTFScheduleManager from firing the OnPostAppt.
Parameters
  Sender  - The object that is firing the event.
  Appt    - The appointment object.
  CanPost - Specifies whether to fire an OnPostAppt event.
See Also
  TJvTFScheduleManager.OnPostAppt

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnNeedAppts
Summary
  Occurs when appointments needs to be loaded.
Description
  This event is fired when a schedule needs to be loaded into the server. You need to provide code
  behind this event that will read the appropriate appointment data from your physical storage
  implementation, request an appointment object from the server, set its properties, and then add it
  to the given schedule.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnLoadBatch
Summary
  Occurs when a batch needs to be loaded.
Description
  This event will fire once for each batch that must be loaded.
  
  \Note that BatchStartDate and BatchEndDate define a contiguous set of dates that must be loaded.
  Therefore, if BatchName is Mike, BatchStartDate is 1/1/2000, and BatchEndDate is 1/3/2000 you
  should load the following schedules: <PRE>
    Mike - 1/1/2000
    Mike - 1/2/2000
    Mike - 1/3/2000 </PRE>
  Please see <LINK __JVCL.Info.TimeFramework.BatchLoading, "Batch Loading"> for more information.
  Note
  This event will not fire unless SchedLoadMode is set to slmBatch.
Parameters
  Sender         - The object that is firing the event.
  BatchName      - The schedule(resource) name.
  BatchStartDate - The starting date of the schedule(s) to be loaded.
  BatchEndDate   - The ending date of the schedule(s) to be loaded.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnGetApptDisplayText
Summary
  Occurs when an appointment's text needs to be displayed.
Description
  This event is fired whenever a JvTFComponent or Control needs to display text for an appointment.
  DisplayText specifies the text that will be displayed, and is modifiable by you.
Parameters
  Sender      - The object that is firing the event.
  Source      - The component that is requesting the display text.
  Appt        - The appointment object in question.
  DisplayText - The text that will be displayed.
See Also
  TJvTFScheduleManager.OnGetApptDescription, TJvTFScheduleManager.OnSetApptDescription

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnGetApptDescription
Summary
  Occurs when an appointments description is accessed.
Description
  This event is fired anytime an appointment's Description property is read. You can modify the
  description as it is read without modifying the actual description that is stored in memory. This
  may come in handy for such things as encrypting/decrypting the description.
  
  Caution: This event is every time an appt's description is read, internally or externally. Be wary
  of the performance of the code you call in this event.
  
  Since this event is fired every time an appt's description is read (regardless of the purpose of
  the read), it is recommended that you use the OnGetApptDisplayText event if you only want to change
  how
  JTF displays the appt text, such as adding a Location and/or phone number that is not stored in the
  Description property of the appt. OnGetApptDisplayText is only called when JTF needs to display
  text for the appointment.
See Also
  TJvTFScheduleManager.OnGetApptDisplayText, TJvTFScheduleManager.OnSetApptDescription

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnFlush
Summary
  Occurs when the cache is flushed.
Description
  The OnFlush event is fired when the caching system is about to remove an object from memory. You
  could use this event to "filter" which objects are actually removed from memory.
  
  The TJvTFFlushEvent type is used for the OnFlush event. If you set FlushIt to False, the FlushObj
  will not be removed from memory.
Parameters
  Sender   - The object that has fired the event and most likely will be a TJvTFScheduleManager.
  FlushObj - The object that is about to be removed from memory (either a TJvTFSched or a TJvTFAppt).
  FlushIt  - Specify whether to remove the FlushObj object from memory.
See Also
  TJvTFFlushEvent, TJvTFScheduleManager.Flush, TJvTFScheduleManager.Flushing

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnDestroySchedule
Summary
  Occurs when a schedule is freed.
Description
  This event is fired when the server destroys a schedule object. This is especially handy if you
  will be attaching custom data to the schedule via a custom object. It provides a place for you to
  destroy your custom object.
See Also
  TJvTFScheduleManager.OnCreateSchedule

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnCreateSchedule
Summary
  Occurs when a new schedule is created.
Description
  This event is fired when the server creates a schedule object. This is especially handy if you will
  be attaching custom data to the schedule via a custom object. It provides a place for you to create
  your custom object.
See Also
  TJvTFScheduleManager.OnDestroySchedule

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnDeleteAppt
Summary
  Occurs when an appointment is deleted.
Description
  This event is fired when an appointment is being removed from the system. You need to provide code
  behind this event that will remove the appointment data from your physical storage implementation.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnDestroyAppt
Summary
  Occurs when an appointment is freed.
Description
  This event is fired when the server destroys an appointment object. This is especially handy if you
  will be attaching custom data to the appointment via a custom object. It provides a place for you
  to destroy your custom object.
See Also
  TJvTFScheduleManager.OnCreateAppt

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnCreateAppt
Summary
  Occurs when a new appointment object is created.
Description
  This event is fired when the server creates an appointment object. This is especially handy if you
  will be attaching custom data to the appointment via a custom object. It provides a place for you
  to create your custom object.
See Also
  TJvTFScheduleManager.OnDestroyAppt

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.OnBatchesProcessed
Summary
  Occurs after batches have been processed.
Description
  This event will fire after OnLoadBatch has been called for each batch that must be loaded. Please
  see <LINK __JVCL.Info.TimeFramework.BatchLoading, "Batch Loading"> for more information.
  Note
  This event will not fire unless SchedLoadMode is set to slmBatch.
See Also
  TJvTFScheduleManager.SchedLoadMode

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.LoadingAppts
Summary
  Returns whether data loading is in progress.
Description
  LoadingAppts will be True when appointments are being loaded for a schedule. It is set to True
  immediately before firing the OnNeedAppts event and set to False immediately after the OnNeedAppts
  event has been fired.
See Also
  TJvTFScheduleManager.OnNeedAppts

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.GetSchedClass
Summary
  Returns the actual schedule class in use.
Description
  Returns a specific TJvTFSched class. You can override this method if you would like JTF to use a
  custom subclass of TJvTFSched.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.GetScheduleID
Summary
  Returns an ID based on the input parameters.
Description
  Call GetScheduleID to construct an ID from the \SchedName and \SchedDate parameters. Currently,
  this method is implemented as:
  <CODE>
    Result := \SchedName + IntToStr(trunc(\SchedDate)); </CODE>
Parameters
  \SchedName - Name of the schedule.
  \SchedDate - Date of the schedule.
Return value
  A string ID built from the input.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.GetApptClass
Summary
  Returns the actual appointment class in use.
Description
  Returns a specific TJvTFAppt class. You can override this method if you would like JTF to use a
  custom subclass of TJvTFAppt.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.GetApptDisplayText
Summary
  Sets the default display text and then calls OnGetApptDisplayText.
Description
  This method is for internal use.
See Also
  TJvTFScheduleManager.OnGetApptDisplayText

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.GenerateApptID
Summary
  Generates a unique identifier for appointment objects.
Description
  The implementation uses a concatenation of the system date/time and five random alpha chars and is
  as follows:
  <CODE>
        class function TJvTFScheduleManager.GenerateApptID: String;
        Var
         I : Integer;
        begin
         Result := FloatToStr(Now);
         For I := 1 to 5 do
         Result := Result + Chr(Random(25) + 65);
        end; </CODE>
  You may override this method in a descendant class if you need to change this algorithm, otherwise
  you can just supply an ID to the RequestAppt or dbNewAppt methods.
Return value
  A unique appointment ID.
See Also
  TJvTFScheduleManager.dbNewAppt, TJvTFScheduleManager.RequestAppt

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.Flush
Summary
  Removes cached objects.
Description
  Use this method to manually flush cached objects from memory. If All is True, all cached objects
  will be flushed from memory. If All is False, cached objects are flushed according to the rules of
  the
  Cache.CacheType property.
Parameters
  All - Indicates whether to flush all cached objects.
See Also
  TJvTFScheduleManager.Cache

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.Flushing
Summary
  Determines if a flush is in progress.
Description
  This property will be True when the caching system is in the process of flushing cached objects
  from memory.
See Also
  TJvTFScheduleManager.Flush

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.FindAppt
Summary
  Searches for an appointment.
Description
  FindAppt searches the Appts array and return the appointment object that has the given ID. If no
  appointment is found for the given ID, FindAppt will return nil.
Parameters
  ID - The ID to search for.
Return value
  The found appointment or nil if not found.
See Also
  TJvTFScheduleManager.Appts

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.FindSchedule
Summary
  Searches for a schedule.
Description
  FindSchedule searches the Schedules list and return a schedule object that has the given SchedName
  and SchedDate. If a match is not found, FindSchedule will return nil.
Parameters
  SchedName - Name of schedule to find.
  SchedDate - Date of schedule to find.
Return value
  The found schedule or nil if not found.
See Also
  TJvTFScheduleManager.Schedules

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.dbRefreshSched
Summary
  Reloads data from storage.
Description
  Use this method to refresh all of the appointments linked to the schedule specified by the Sched
  parameter. Calling this method will first clear the Modified property for each of the appointment
  objects linked to the schedule. It will then fire the OnRefreshSched event.
  
  After the OnRefreshSched event finishes dbRefreshSched will call RefreshConnections to update all
  of the JvTFComponents and JvTFControls that are connected to the schedule.
  Note
  It is your responsibility to provide a handler for the OnRefreshSched event that will actually
  update the appointment data.
Parameters
  Sched - The schedule to update.
See Also
  TJvTFScheduleManager.OnRefreshSched, TJvTFScheduleManager.RefreshConnections

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.dbRefreshOrphans
Summary
  Reloads data from storage.
Description
  Use this method to refresh all appointments that are not linked to any schedules. This method call
  the dbRefreshAppt method for each appointment that is not connected to at least one schedule object.
See Also
  TJvTFScheduleManager.dbRefreshAppt

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.dbRefreshAppt
Summary
  Reloads data from storage.
Description
  Use this method to refresh a single appointment object. Calling this method will first clear the
  Modified property of the given appointment. It will then fire the OnRefreshAppt event.
  
  After the OnRefreshAppt event finishes dbRefreshAppt will call RefreshConnections to update all of
  the JvTFComponents and JvTFControls that are accessing the appointment.
  Note
  It is your responsibility to provide a handler for the OnRefreshAppt event that will actually
  update the appointment data.
Parameters
  Appt - The appointment to refresh.
See Also
  TJvTFScheduleManager.OnRefreshAppt, TJvTFScheduleManager.RefreshConnections

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.dbRefreshAll
Summary
  Reloads all data from storage.
Description
  Use this method to refresh all of the server's appointment and schedule data. Calling this method
  will first clear the Modified property for each of the appointment objects in the server. It will
  then fire the OnRefreshAll event.
  
  After the OnRefreshAll event finishes dbRefreshAll will call RefreshConnections to update all of the
  JvTFComponents and JvTFControls that are connected to the server.
  Note
  It is your responsibility to provide a handler for the OnRefreshAll event that will actually update
  the schedule and appointment data.
See Also
  TJvTFScheduleManager.OnRefreshAll, TJvTFScheduleManager.RefreshConnections

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.dbPostAppt
Summary
  Saves changes to storage.
Description
  Calling this method will cause the OnPostAppt event to fired. You will have code behind the
  OnPostAppt event that will save the appointment's data to physical storage.
  
  Note that if AlwaysPost is False and Appt.Modified is False then OnPostAppt will not be fired.
Parameters
  Appt - The appointment to save.
See Also
  TJvTFScheduleManager.AlwaysPost, TJvTFScheduleManager.OnPostAppt

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.dbNewAppt
Summary
  Adds a new appointment to the server.
Description
  Use the method to create a new appointment in the system. If you do not specify an ID, the server
  will create one for you. If you do specify an ID, you are responsible to ensure that the ID will be
  unique among all appointments.
  
  The server uses the GenerateApptID method to generate a unique ID.
Parameters
  ID - The new ID. Leave empty to have an ID created for you.
Return value
  The new appointment object.
See Also
  TJvTFScheduleManager.GenerateApptID

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.dbDeleteAppt
Summary
  Deletes an appointment from the server.
Description
  Use the dbDeleteAppt to remove an appointment from the system. dbDeleteAppt will fire the
  OnDeleteAppt event where you will have code that will delete the appointment from physical storage.
  As a convenience, you may also call TJvTFAppt.Delete since that method simply calls the
  dbDeleteAppt method.
Parameters
  Appt - The appointment to delete.
See Also
  TJvTFScheduleManager.OnDeleteAppt

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.dbDeleteAllAppt
Summary
  Deletes all appointments from the Server
Description
  Write here a description

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.ConControls
Summary
  Provides indexed access to each of the JTF controls that is connected to the server.
Description
  Use this property to access any of the TJvTFControls that are connected to the server. To access the
  TJvTFComponents, use the ConComponents property instead.
  Note
  This property supersedes the Connections property as of version 1.1 of the server.
See Also
  TJvTFScheduleManager.ConComponentCount, TJvTFScheduleManager.ConComponents,
  TJvTFScheduleManager.ConControlCount

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.CustomImages
Summary
  Points to an imagelist with appointment images.
Description
  Use this property to specify a TImageList that contains the images you want to embed into specific
  appointments.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.ConControlCount
Summary
  Returns the number of JTF controls connected to the server.
Description
  Use the ConControlCount to get the number of TJvTFControls that are connected to the server. To get
  the number of TJvTFComponents instead, use the ConComponentCount.
  Note
  This method supersedes ConnectionCount as of version 1.1 of the server.
See Also
  TJvTFScheduleManager.ConComponentCount, TJvTFScheduleManager.ConComponents,
  TJvTFScheduleManager.ConControls

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.ConComponents
Summary
  Provides indexed access to the JTF components connected to the server.
Description
  Use this property to access any of the TJvTFComponents that are connected to the server. To access
  the TJvTFControls, use the ConControls property instead.
  Note
  This property supersedes the Connections property as of version 1.1 of the server.
See Also
  TJvTFScheduleManager.ConComponentCount, TJvTFScheduleManager.ConControlCount,
  TJvTFScheduleManager.ConControls

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.Appts
Summary
  Provides indexed access to appointments.
Description
  The Appts property contains the "master" list of appointments that reside in server. All
  appointments
  that are present in the server, regardless of what schedule(s) the belong to and regardless of
  whether they are cached or not, can be retrieved through this property.
See Also
  TJvTFScheduleManager.ApptCount

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.Cache
Summary
  Provides access to the caching mechanism.
Description
  See TJvTFScheduleManagerCache for more information.
See Also
  TJvTFScheduleManagerCache

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.ConComponentCount
Summary
  Returns the number of TJvTFComponents that are connected to the server.
Description
  Use the ConComponentCount method to find the number of TJvTFComponents that are connected to the
  server. To find the number of TJvTFControls, use ConControlCount instead.
  Note
  This method supersedes the ComponentCount method as of version 1.1 of the server.
See Also
  TJvTFScheduleManager.ConComponents, TJvTFScheduleManager.ConControlCount,
  TJvTFScheduleManager.ConControls

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.ApptCount
Summary
  Returns the number of appointment objects contained in the server.
Description
  \Read ApptCount to determine the number of appointments managed by the server. Use ApptCount-1 as
  the upper bound when accessing the Appts array.
See Also
  TJvTFScheduleManager.Appts

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager.AlwaysPost
Summary
  Determines how posts are handled.
Description
  If this property is True, the Modified property will be ignored and the OnPostAppt event will be
  fired even if Modified is False. If AlwaysPost is False the OnPostAppt event will be fired only if
  Modified is True.
  
  Setting AlwaysPost to False increases performance since only modified appointments will be written
  to disk.
  
  You should be warned though that if AlwaysPost is false, a call to dbPostAppt, PostAppts,
  TJvTFSched.PostAppts, or TJvTFAppt.Post only actually fires the OnPostAppt event if
  TJvTFAppt.Modified = True.
  Note
  You must implement a handler for the OnPostAppt event which will write the appointment to some
  physical storage backend.
See Also
  TJvTFScheduleManager.dbPostAppt, TJvTFScheduleManager.OnPostAppt, TJvTFScheduleManager.PostAppts

----------------------------------------------------------------------------------------------------
@@TJvTFSchedLoadMode.slmOnDemand
Requests data when necessary by calling the OnNeedAppts event.

----------------------------------------------------------------------------------------------------
@@TJvTFSchedLoadMode.slmBatch
Load data in batches. A call to ProcessBatches is required to load the data.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManager
<TITLEIMG TJvTFScheduleManager>
#JVCLInfo
<GROUP JVCL.DateTime.Other>
<FLAG Component>
Summary
  Manages multiple schedules, appointments and associated controls and components.
Description
  The TJvTFScheduleManager component is the heart of the JTF suite. It provides a centralized source of data for multiple JTF Controls. It stores schedule and appointment objects and manages all relationships between them. The server provides many methods and events to its connected controls, embedded schedule and appointment objects, and you that allow objec
  s, relationships, and communication to take place without the caller needing to worry about the
  low-level details and implications of the action.
  
  You use the server to implement several things. These include reading/writing data to/from disk,
  adding new appointments, setting caching options, and so on.
  
  All JTF Controls will communicate with the server. The controls tell the server when to load,
  unload, and change schedule and appointment data and the server executes those commands.

----------------------------------------------------------------------------------------------------
@@TJvTFSchedLoadMode
<TITLE TJvTFSchedLoadMode type>
Summary
  Type describing load modes.
Description
  Specifies the different methods that TJvTFScheduleManager can use to load schedules. Please see
  TJvTFScheduleManager.SchedLoadMode and <LINK __JVCL.Info.TimeFramework.BatchLoading, "Batch
  Loading"> for more information.

----------------------------------------------------------------------------------------------------
@@TJvTFSchedEvent
<TITLE TJvTFSchedEvent type>
Summary
  Event type for schedule events.
Description
  The TJvTFSchedEvent type is used for schedule related events, like <LINK
  TJvTFScheduleManager.OnCreateSchedule, OnCreateSchedule>, <LINK
  TJvTFScheduleManager.OnDestroySchedule, OnDestroySchedule>, <LINK TJvTFScheduleManager.OnNeedAppts,
  OnNeedAppts> and <LINK TJvTFScheduleManager.OnRefreshSched, OnRefreshSched>.
Parameters
  Sender   - The object that fired the event, which is most likely to be a TJvTFScheduleManager.
  Schedule - Contains the schedule object that is being affected.

----------------------------------------------------------------------------------------------------
@@TJvTFSched.TimeIsFree@TTime@TTime
<COMBINE TJvTFSched.TimeIsFree@TJvTFTimeRange>

----------------------------------------------------------------------------------------------------
@@TJvTFSchedClass
<TITLE TJvTFSchedClass type>
Summary
  Defines the metaclass for TJvTFSched.
Description
  TJvTFSchedClass is the metaclass for TJvTFSched. Its value is the class reference for TJvTFSched or
  for one of its descendants.

----------------------------------------------------------------------------------------------------
@@TJvTFSched.TimeIsFree@TJvTFTimeRange
Summary
  Determines if a time range is unused.
Description
  TimeIsFree will return True if there are not any appointments that fall in the given time range,
  False otherwise.
  
  This method only checks the time in the schedule from which it is invoked.
  Note
  This method is NOT available in the Delphi 3 version of JTF.
Parameters
  TimeRange  - The start and end time of the range to check.
  RangeStart - The start of the time range to check.
  RangeEnd   - The end of the time range to check.
Return value
  True if the time is free, false otherwise.

----------------------------------------------------------------------------------------------------
@@TJvTFSched.ScheduleManager
Summary
  References the manager responsible for this schedule.
Description
  Use ScheduleManager to access the manager responsible for this schedule. The manager handles most
  background chores associated with a schedule, like caching.
See Also
  TJvTFScheduleManager

----------------------------------------------------------------------------------------------------
@@TJvTFSched.SchedName
Summary
  Returns the name of the schedule. (Also known as the resource name.)
Description
  If you wish to use the SchedName property to hold a unique identifier you should use the
  SchedDisplayName property to specify a user-friendly display name.
See Also
  TJvTFSched.SchedDisplayName

----------------------------------------------------------------------------------------------------
@@TJvTFSched.RemoveAppt
Summary
  Removes an appointment.
Description
  Use this method to remove the given appointment from the schedule.
Parameters
  Appt - The appointment to remove.
See Also
  TJvTFSched.AddAppt

----------------------------------------------------------------------------------------------------
@@TJvTFSched.SchedDate
Summary
  Returns the date of the schedule.
Description
  \Read SchedDate to determine the date of the schedule.

----------------------------------------------------------------------------------------------------
@@TJvTFSched.SchedDisplayName
Summary
  Specifies the schedule name to show to users.
Description
  Use this property to specify a friendly name for the schedule. If this property is null, JTF will use the value of the SchedName property as the display name for the schedule. (This property com
  s in handy if you wish to use the SchedName property for a unique identifier and yet display a
  user-friendly name.)
See Also
  TJvTFSched.SchedName

----------------------------------------------------------------------------------------------------
@@TJvTFSched.Refresh
Summary
  Rereads appointment data from storage.
Description
  Call this method to refresh all of the appointments linked to the schedule. This method simply calls
  TJvTFScheduleManager.dbRefreshSched and is provided in this form as a convenience when working with
  schedule objects.
See Also
  TJvTFSched.PostAppts

----------------------------------------------------------------------------------------------------
@@TJvTFSched.GetLastAppt
Summary
  Returns the appointment with the latest end date and time.
Description
  This method will return the latest appointment in the schedule. (Start times are ignored.)
Return value
  The last appointment or nil if there are no appointments in the schedule.
See Also
  TJvTFSched.GetFirstAppt

----------------------------------------------------------------------------------------------------
@@TJvTFSched.GetUsedTime
Summary
  Returns used time.
Description
  This method will return a dynamic array that contains zero or more TJvTFTimeRange's that represent
  the time that is used in the schedule.
Return value
  A dynamic array of TJvTFTimeRange objects.
See Also
  TJvTFSched.GetFreeTime

----------------------------------------------------------------------------------------------------
@@TJvTFSched.Persistent
Summary
  Determines if the cache system handles this object.
Description
  If Persistent is set to True, the caching system will not flush the object from memory.
See Also
  TJvTFSched.Cached

----------------------------------------------------------------------------------------------------
@@TJvTFSched.PostAppts
Summary
  Saves all changes.
Description
  Call this method to post all of the appointments contained in the schedule.
See Also
  TJvTFSched.Refresh

----------------------------------------------------------------------------------------------------
@@TJvTFSched.EnumConflicts@TJvTFTimeRange
<COMBINE TJvTFSched.EnumConflicts@TJvTFAppt>

----------------------------------------------------------------------------------------------------
@@TJvTFSched.EnumConflicts@TTime@TTime
<COMBINE TJvTFSched.EnumConflicts@TJvTFAppt>

----------------------------------------------------------------------------------------------------
@@TJvTFSched.GetFirstAppt
Summary
  Returns the appointment with the earliest start date and time.
Description
  This method will return the earliest appointment in the schedule. (End times are ignored.)
Return value
  The first appointment or nil if there are no appointments in the schedule.
See Also
  TJvTFSched.GetLastAppt

----------------------------------------------------------------------------------------------------
@@TJvTFSched.GetFreeTime
Summary
  Returns available free time.
Description
  This method will return a dynamic array that contains zero or more TJvTFTimeRange's that represent
  the free time available in the schedule.
  
  This method only checks the time in the schedule from which it is invoked.
  Note
  This method is NOT available in the Delphi 3 version of JTF.
Return value
  A dynamic array of TJvTFTimeRange objects.
See Also
  TJvTFSched.GetUsedTime

----------------------------------------------------------------------------------------------------
@@TJvTFSched.EnumConflicts@TJvTFAppt
Summary
  Enumerates appointment conflicts.
Description
  EnumConflicts will return a dynamic array populated with all the TJvTFAppt's that conflict with the
  time range given or the appointment given. It is not advised to retain the array for use at a later
  time due to the fact that the caching system may destroy one or more of the appt objects contained
  in the result (thus leaving one or more dangling pointers).
  
  These methods only check for conflicts in the schedule from which they are invoked.
  Note
  These methods are NOT available in the Delphi 3 version of JTF.
Parameters
  anAppt     - The appointment to check conflicts against.
  TimeRange  - The range within which conflicts should be checked.
  RangeStart - Start of the range to check.
  RangeEnd   - End of the range to check.
Return value
  A dynamic array of conflicting appointments.

----------------------------------------------------------------------------------------------------
@@TJvTFSched.Destroying
Summary
  Determines if the object is being destroyed.
Description
  This property will return True if the schedule object is in the process of being destroyed.

----------------------------------------------------------------------------------------------------
@@TJvTFSched.Data
Summary
  Provides storage space for custom data.
Description
  Use the Data property to attach custom data to the schedule object.
  
  You will most likely create a TObject to store extra information, in which case you would need to
  typecast this property into a TObject. It has been implemented as an integer for additional
  flexibility. If you do use a TObject to store custom data, you probably will want to use the
  TJvTFScheduleManager.OnCreateSchedule and TJvTFScheduleManager.OnDestroySchedule events to create
  and destroy your custom object.

----------------------------------------------------------------------------------------------------
@@TJvTFSched.ConControls
Summary
  Provides indexed access to connected JvTFControls.
Description
  Provides access to each of the JvTFControls that are connected to the schedule object.
  
  The ConComponents property holds a reference to each of the JvTFComponents that are connected to
  the schedule object.
  Note
  This property supersedes the Controls property as of version 1.1 of the server.
See Also
  TJvTFSched.ConComponentCount, TJvTFSched.ConComponents, TJvTFSched.ConControlCount

----------------------------------------------------------------------------------------------------
@@TJvTFSched.ConControlCount
Summary
  Returns the number of JvTFControls that are connected to the object.
Description
  Use the ConComponentCount method to get the number of JvTFComponents that are connected to the
  schedule object.
  Note
  This method supersedes the ControlCount method as of version 1.1 of the server.
See Also
  TJvTFSched.ConComponentCount, TJvTFSched.ConComponents, TJvTFSched.ConControls

----------------------------------------------------------------------------------------------------
@@TJvTFSched.ConComponents
Summary
  Provides indexed access to connected JvTFComponents.
Description
  This property provides access to each of the JvTFComponents that are connected to the schedule
  object.
  
  Use the ConControls property to access the JvTFControls that are connected to the schedule object.
  Note
  This property supersedes the Controls property as of version 1.1 of the server.
See Also
  TJvTFSched.ConComponentCount, TJvTFSched.ConControlCount, TJvTFSched.ConControls

----------------------------------------------------------------------------------------------------
@@TJvTFSched.ConComponentCount
Summary
  Returns the number of JvTFComponents that are connected to the schedule object.
Description
  Use the ConControlCount method to get the number of JvTFControls that are connected to the schedule
  object.
  Note
  This method supersedes the ControlCount method as of version 1.1 of the server.
See Also
  TJvTFSched.ConComponents, TJvTFSched.ConControlCount, TJvTFSched.ConControls

----------------------------------------------------------------------------------------------------
@@TJvTFSched.CachedTime
Summary
  Determines when the schedule was cached.
Description
  This property returns the Windows tick count when the object was initially queued to be flushed
  from memory. (The value of this property should be ignored if Cached = False.)
  
  Use this property along with the Windows API function GetTickCount to determine how long the
  schedule has been cached, i.e the following code:
  <CODE>
    Interval := GetTickCount - CachedTime; </CODE> would set Interval to the number of milliseconds
  since the schedule was put in the cache.
See Also
  <DELPHILINK GetTickCount>

----------------------------------------------------------------------------------------------------
@@TJvTFSched.Appts
Summary
  Provides indexed access to the appointments that fall in the schedule.
Description
  Use the Appts property to retrieve each appointment object that is a member of the schedule.
See Also
  TJvTFSched.ApptCount

----------------------------------------------------------------------------------------------------
@@TJvTFSched.Cached
Summary
  Determines if the schedule is in use.
Description
  Cached will be true if the schedule object is no longer used by any of the controls that are
  connected to the server, false otherwise. A cached schedule object is queued to be flushed from
  memory by the caching system.
See Also
  TJvTFSched.CachedTime

----------------------------------------------------------------------------------------------------
@@TJvTFSched.ApptHasConflicts
Summary
  Searches for appointment conflicts.
Description
  This method will return True if any other appointments conflict with an Appt, False otherwise. This
  method only checks for conflicts in the schedule from which it is invoked.
Parameters
  anAppt - The appointment to check for conflicts.
Return value
  True if conflicts were found, false otherwise.

----------------------------------------------------------------------------------------------------
@@TJvTFSched.ApptCount
Summary
  Returns the number of appointments that fall in the schedule.
Description
  Call ApptCount to learn the number of appointments that fall in the schedule. Use ApptCount-1 as
  the upper bound when accessing appointments using the Appts property.
See Also
  TJvTFSched.Appts

----------------------------------------------------------------------------------------------------
@@TJvTFSched.AddAppt
Summary
  Adds an existing appointment.
Description
  This method will add the given appointment to the schedule.
Parameters
  Appt - The appointment to add.
See Also
  TJvTFSched.RemoveAppt

----------------------------------------------------------------------------------------------------
@@TJvTFSched.ApptByID
Summary
  Searches for an appointment.
Description
  This will return an appointment object with the given ID. If an appointment with the given ID is
  not found in the schedule, it will return nil.
Parameters
  ID - Identifier of the appointment to find.
Return value
  Returns an appointment object or nil if an appointment could not be found.

----------------------------------------------------------------------------------------------------
@@TJvTFSched
Summary
  Class that represents a schedule.
Description
  A TJvTFSched object represents a schedule (a schedule name and date). The server completely
  maintains its schedule objects so you shouldn't have to worry about their creation, destruction, or
  the relationships with other objects.
  
  Although a schedule object does not physically contain appointments (that's the server's job), it
  does logically group the appointments. That is its main function. Because of this, you can use a
  schedule object to retrieve a list of the appointments that are logically "contained" by the
  schedule, operate on the appointments, and add or remove appointments at the schedule level. You
  can also retrieve basic information about the schedule, such as its name and date.

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterState.spsFinished
A complete document exists and is now ready to be sent to a printer or saved to a file.

----------------------------------------------------------------------------------------------------
@@TJvTFProgressEvent
<TITLE TJvTFProgressEvent type>
Summary
  Event type used to report the progress of lengthy operations.
Description
  This event type is used for events that fire to inform you that a process has incrementally
  progressed. This type is used by <LINK TJvTFPrinter.OnAssembleProgress, OnAssembleProgress> and
  <LINK
  TJvTFPrinter.OnPrintProgress, OnPrintProgress>.
Parameters
  Sender  - The object that fired the event.
  Current - The current iteration of the process
  Total   - The total numbers of iterations the process is expected to complete.

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterPageLayout.Printer
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterState
<TITLE TJvTFPrinterState type>
Summary
  Defines the possible states of a printing component.
Description
  The TJvTFPrinterState enumeration is used by the TJvTFPrinter component to describe the current
  state of the component.

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterState.spsNoDoc
No document exists.

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterState.spsCreating
A document is being created. This is the state of the printer when NewPage can be called and page bodies can be drawn.

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterState.spsAssembling
The component is firing the OnDrawHeader and OnDrawFooter events for each body and placing the header, body, and footer onto a finished page. The assembling process is started by a call to
FinishDoc.

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterPageLayout.MarginTop
Summary
  Specifies the height of the top margin.
Description
  This value is in units specified by the TJvTFPrinter.Measure property.
See Also
  TJvTFPrinterPageLayout.FooterHeight, TJvTFPrinterPageLayout.HeaderHeight,
  TJvTFPrinterPageLayout.MarginBottom, TJvTFPrinterPageLayout.MarginLeft,
  TJvTFPrinterPageLayout.MarginRight

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterPageLayout.MarginRight
Summary
  Specifies the width of the right margin.
Description
  This value is in units specified by the TJvTFPrinter.Measure property.
See Also
  TJvTFPrinterPageLayout.FooterHeight, TJvTFPrinterPageLayout.HeaderHeight,
  TJvTFPrinterPageLayout.MarginBottom, TJvTFPrinterPageLayout.MarginLeft,
  TJvTFPrinterPageLayout.MarginTop

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterPageLayout.MarginLeft
Summary
  Specifies the width of the left margin.
Description
  This value is in units specified by the TJvTFPrinter.Measure property.
See Also
  TJvTFPrinterPageLayout.FooterHeight, TJvTFPrinterPageLayout.HeaderHeight,
  TJvTFPrinterPageLayout.MarginBottom, TJvTFPrinterPageLayout.MarginRight,
  TJvTFPrinterPageLayout.MarginTop

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterPageLayout.MarginBottom
Summary
  Specifies the height of the bottom margin.
Description
  This value is in units specified by the TJvTFPrinter.Measure property.
See Also
  TJvTFPrinterPageLayout.FooterHeight, TJvTFPrinterPageLayout.HeaderHeight,
  TJvTFPrinterPageLayout.MarginLeft, TJvTFPrinterPageLayout.MarginRight,
  TJvTFPrinterPageLayout.MarginTop

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterPageLayout.FooterHeight
Summary
  Specifies the height of the page footer.
Description
  This value is in units specified by the TJvTFPrinter.Measure property.
See Also
  TJvTFPrinterPageLayout.HeaderHeight, TJvTFPrinterPageLayout.MarginBottom,
  TJvTFPrinterPageLayout.MarginLeft, TJvTFPrinterPageLayout.MarginRight,
  TJvTFPrinterPageLayout.MarginTop

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterPageLayout.HeaderHeight
Summary
  Specifies the height of the page header.
Description
  This value is in units specified by the TJvTFPrinter.Measure property.
See Also
  TJvTFPrinterPageLayout.FooterHeight, TJvTFPrinterPageLayout.MarginBottom,
  TJvTFPrinterPageLayout.MarginLeft, TJvTFPrinterPageLayout.MarginRight,
  TJvTFPrinterPageLayout.MarginTop

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterMeasure.pmInches
Measurements are in inches.

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterMeasure.pmMM
Measurements are in millimeters.

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterPageLayout
Summary
  Maintains page layout settings.
Description
  You use the TJvTFPrinterPageLayout class to access specific properties (i.e. margins) related to
  the layout of a printed page. Normally you will access this property through the
  TJvTFPrinter.PageLayout property.

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterMeasure
<TITLE TJvTFPrinterMeasure type>
Summary
  Specifies the available units of measure: pixels, inches, or millimeters.
Description
  TJvTFPrinterMeasure is used by the TJvTFPrinter.Measure property to determine the current
  measurements used when printing.

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterMeasure.pmPixels
Measurements are in pixels.

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.State
Summary
  Describes the current state of the printer component.
Description
  See TJvTFPrinterState for more information.
See Also
  TJvTFPrinterState

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.Title
Summary
  Specifies the title of the document.
Description
  This string will be sent to Windows as the title of the document when it is sent to a printer.
  (This is what will display in Print Manager.)

----------------------------------------------------------------------------------------------------
@@TJvTFPrinterDrawEvent
<TITLE TJvTFPrinterDrawEvent type>
Summary
  Event type used in various pre-print drawing events.
Description
  TJvTFPrinterDrawEvent is the event type for TJvTFPrinter's <LINK TJvTFPrinter.OnDrawFooter,
  OnDrawFooter>, <LINK TJvTFPrinter.OnDrawHeader, OnDrawHeader> and <LINK TJvTFPrinter.OnDrawBody,
  OnDrawBody> events.
Parameters
  Sender  - The object that fired the event.
  aCanvas - Provides a canvas for you to do any custom drawing on.
  ARect   - Provides a bounding rectangle for your drawing.
  PageNum - The page that the event is being fired for

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.ScreenToPrinter
Summary
  Converts a value from screen units to printer units.
Description
  Use this method to change a value (Value) from screen measurement to printer measurement. For
  example, a one-inch line may be 300 pixels (printer resolution = 300 dpi), but a 300 pixel line on
  the screen probably would be much longer than one inch. Set Horizontal to True if Value is a
  horizontal measurement.
Parameters
  Value      - Value to convert.
  Horizontal - True if Value is a horizontal measurement.
Return value
  The converted value.
See Also
  TJvTFPrinter.PrinterToScreen

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.SaveDocToFiles
Summary
  Save the document's pages to file.
Description
  Use this method to save each of the page images as separate emf files. Printer will append an
  underscore "_" and the page number, along with the emf extension to each file it saves. For
  example, if there are three pages and you set BaseFileName to 'c:\simpl\schedule' the following
  files will be produced:
  <CODE>
        c:\simpl\schedule_1.emf
        c:\simpl\schedule_2.emf
        c:\simpl\schedule_3.emf </CODE>
  
  You can access each page as a TMetafile via the Pages property.
Parameters
  BaseFileName - The base filename for the files to create.
See Also
  TJvTFPrinter.Pages, TJvTFPrinter.Print

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.PrinterToScreen
Summary
  Converts a value from printer units to screen units.
Description
  Use this method to change a value (Value) from printer measurement to screen measurement. For
  example, a one-inch line may be 300 pixels (printer resolution = 300 dpi), but a 300 pixel line on
  the screen probably would be much longer than one inch. Set Horizontal to True if Value is a
  horizontal measurement.
Parameters
  Value      - Value to convert.
  Horizontal - True if Value is a horizontal measurement.
Return value
  The converted value.
See Also
  TJvTFPrinter.ScreenToPrinter

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.Print
Summary
  Sends the document to the printer.
Description
  If DirectPrint is False, you can call the Print method to send a finished document to Windows to
  print. An EJvTFPrinterError will be raised if the component is in any State other than spsFinished.
See Also
  TJvTFPrinter.DirectPrint

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.PageLayout
Summary
  Maintains page layout properties.
Description
  Use this property to specify various aspects of how the pages are laid out on paper, such as
  margins.
  See TJvTFPrinterPageLayout for more details.
See Also
  TJvTFPrinterPageLayout

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.Pages
Summary
  Provides indexed access to the pages that are about to be printed.
Description
  You can access each page in the document through the pages property. Each page is stored internally
  as a TMetafile that you can have direct access to.
See Also
  TJvTFPrinter.PageCount

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.PageCount
Summary
  Returns the page count of the document.
Description
  An EJvTFPrinterError exception will be raised if you attempt to read this property when the State =
  spsNoDoc.
See Also
  TJvTFPrinter.Pages, TJvTFPrinter.State

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.OnPrintProgress
Summary
  Occurs when a page is printed.
Description
  This event fires after each page has been sent to Windows to print. You can use this event to
  update a progress window or status bar. See TJvTFProgressEvent for more details.
See Also
  TJvTFProgressEvent

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.OnMarginError
Summary
  Occurs when margins are incorrectly set.
Description
  This event fires if the MarginLeft, MarginRight, MarginTop, or MarginBottom property specifies a
  value that causes the margin to fall in the unprintable area of the page. The unprintable area is
  hardware dependent and varies from printer to printer.
See Also
  TJvTFPrinterPageLayout.MarginBottom, TJvTFPrinterPageLayout.MarginLeft,
  TJvTFPrinterPageLayout.MarginRight, TJvTFPrinterPageLayout.MarginTop

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.OnDrawFooter
Summary
  Occurs when a page footer has been drawn.
Description
  This event fires after Printer has drawn the footer. This event allows you to do any custom drawing
  on the footer that you might need to do. See TJvTFPrinterDrawEvent for a complete description of
  the parameters.
See Also
  TJvTFPrinter.OnAssembleProgress, TJvTFPrinter.OnDrawBody, TJvTFPrinter.OnDrawHeader,
  TJvTFPrinter.OnPrintProgress, TJvTFPrinterDrawEvent

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.OnDrawHeader
Summary
  Occurs when a page header has been drawn.
Description
  This event fires after Printer has drawn the page header. Use this event to do any custom drawing on
  the header that you might need to do. See TJvTFPrinterDrawEvent for complete descriptions of the
  parameters.
See Also
  TJvTFPrinter.OnAssembleProgress, TJvTFPrinter.OnDrawBody, TJvTFPrinter.OnDrawFooter,
  TJvTFPrinter.OnPrintProgress, TJvTFPrinterDrawEvent

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.OnDrawBody
Summary
  Occurs when a page body has been drawn.
Description
  This event fires after the Printer has drawn the body of a page. This event allows you do to any
  custom drawing on the body that you might need to do. See TJvTFPrinterDrawEvent for complete
  descriptions of the parameters.
See Also
  TJvTFPrinter.OnAssembleProgress, TJvTFPrinter.OnDrawFooter, TJvTFPrinter.OnDrawHeader,
  TJvTFPrinter.OnPrintProgress, TJvTFPrinterDrawEvent

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.OnAssembleProgress
Summary
  Occur while the document is being prepared for printing.
Description
  This event will fire after each page has been assembled. (The assemble process takes the header,
  body, and footer as separate images and combines them into one page image.) Use this event to
  update a progress window or something of that sort. See TJvTFProgressEvent for more details.
See Also
  TJvTFPrinter.OnPrintProgress, TJvTFProgressEvent

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.Measure
Summary
  Determines the units used in calculations.
Description
  Use this property to specify which unit of measure you want to work with. You can change this
  property at any time and all measurement related properties will be automatically converted to the
  new unit of measure.

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.FreeDoc
Summary
  Releases resources allocated for printing.
Description
  When you are finished with a document, call FreeDoc to remove the document from memory and release
  any resources allocated by the document. Printer will take care of this for you if you forget to
  call
  FreeDoc, so you don't have to worry about resource leaks. A successful call to FreeDoc changes
  State to spsNoDoc.
See Also
  TJvTFPrinter.State

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.DocDateTime
Summary
  Holds information on the documents creation date.
Description
  This property will hold the date and time when the document was composed.

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.DirectPrint
Summary
  Determines printing mode.
Description
  Use this property to control the printing model that the Printer uses. See <LINK
  __JVCL.Info.TimeFramework.UsingJvTFPrinter, "Using TJvTFPrinter"> for more info.
See Also
  <LINK __JVCL.Info.TimeFramework.UsingJvTFPrinter, "Using TJvTFPrinter">

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.ConvertingProps
Summary
  True when a unit conversion is in progress.
Description
  This property will be true if the component is in the process of converting the units of measure of
  various properties due to a change in the Measure property.
See Also
  TJvTFPrinter.ConvertMeasure, TJvTFPrinter.Measure

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.ConvertMeasure
Summary
  Converts a value from one unit to another.
Description
  Use this method to convert a value (Value) from one unit of measure (FromMeasure) to another
  (ToMeasure). Set Horizontal to true if Value is some horizontal measurement.
Parameters
  Value       - The value to convert.
  FromMeasure - The measure to convert from.
  ToMeasure   - The measure to convert to.
  Horizontal  - True if the measure is a horizontal measure.
Return value
  The converted value.
See Also
  TJvTFPrinter.Measure

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.BodyWidth
Summary
  Retrieves the width of the printable page.
Description
  \Read BodyWidth to determine the width of the printable page. BodyWidth is in pixels.
See Also
  TJvTFPrinter.BodyHeight, TJvTFPrinter.BodyLeft, TJvTFPrinter.BodyTop

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.BodyLeft
Summary
  Retrieves the left side of the printable page.
Description
  \Read BodyLeft to determine the left of the printable page. BodyLeft is in pixels.
See Also
  TJvTFPrinter.BodyHeight, TJvTFPrinter.BodyTop, TJvTFPrinter.BodyWidth

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.BodyTop
Summary
  Retrieves the top of the printable page.
Description
  \Read BodyTop to determine the top of the printable page. BodyTop is in pixels.
See Also
  TJvTFPrinter.BodyHeight, TJvTFPrinter.BodyLeft, TJvTFPrinter.BodyWidth

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.BodyHeight
Summary
  Retrieves the height of the printable page.
Description
  \Read BodyHeight to determine the height of the printable page. BodyHeight is in pixels.
See Also
  TJvTFPrinter.BodyLeft, TJvTFPrinter.BodyTop, TJvTFPrinter.BodyWidth

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.AbortPrint
Summary
  Terminates the printing of a print job, dropping all unprinted data.
Description
  Use AbortPrint to terminate the print job before it completes.
  
  When AbortPrint is called, the device is then set for the next print job.
See Also
  TJvTFPrinter.Aborted

----------------------------------------------------------------------------------------------------
@@TJvTFPostApptQueryEvent
<TITLE TJvTFPostApptQueryEvent type> <COMBINE TJvTFScheduleManager.OnPostApptQuery>

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter
Summary
  Base class for printing components.
Description
  The TJvTFPrinter class is the base case for all printing components in the JTF system.

----------------------------------------------------------------------------------------------------
@@TJvTFPrinter.Aborted
Summary
  Determines if the user aborted the print job.
Description
  If Aborted is True, the print job was aborted. If it is False, the user did not abort the print job.
  
  The AbortPrint method sets the Aborted property to True.

----------------------------------------------------------------------------------------------------
@@TJvTFHintType.shtObj
The hint is for any object.

----------------------------------------------------------------------------------------------------
@@TJvTFLoadBatchEvent
<TITLE TJvTFLoadBatchEvent type> <COMBINE TJvTFScheduleManager.OnLoadBatch>

----------------------------------------------------------------------------------------------------
@@TJvTFNavEvent
<TITLE TJvTFNavEvent type>
Summary
  Occurs when a JTF control receives a navigation command from its Navigator.
Description
  Write a handler for this event to take specific actions when a navigation request is received by a
  JTF control.
  
  This event is not currently used.
Parameters
  Sender     - The object that called the event.
  aControl   - The control that received the request.
  SchedNames - Names of affected schedules
  Dates      - List of affected days.

----------------------------------------------------------------------------------------------------
@@TJvTFHintType.shtAppt
The hint is for an appointment.

----------------------------------------------------------------------------------------------------
@@TJvTFHintType.shtStartEnd
The hint is for a start/end value

----------------------------------------------------------------------------------------------------
@@TJvTFHintType.shtCell
The hint is for a cell.

----------------------------------------------------------------------------------------------------
@@TJvTFHintType
<TITLE TJvTFHintType type>
Summary
  Represents the different types of hints used in JTF.
Description
  TJvTFHintType is used by the TJvTFHint class's HintType property to specify what type of hint is
  currently used by a JTF control.

----------------------------------------------------------------------------------------------------
@@TJvTFHintProps.HintPause
Summary
  Specifies the time interval that passes before the control's Help Hint appears when the user places
  the mouse pointer on a control.
Description
  This property specifies the amount of time, in milliseconds, that will elapse before the Hint
  window is shown. If this property is set to -1, the Hint window will refer to the application's
  HintPause property.

----------------------------------------------------------------------------------------------------
@@TJvTFHintProps.HintHidePause
Summary
  Specifies the time interval to wait before hiding the Help Hint if the mouse has not moved from the
  control.
Description
  This property specifies the amount of time, in milliseconds, that the Hint window will be visible on
  the screen. If this property is set to -1, the Hint window will refer to the application's
  HintHidePause property.

----------------------------------------------------------------------------------------------------
@@TJvTFHintProps
Summary
  Manages hint window settings.
Description
  The TJvTFHintProps class allows you to control certain properties of a TJvTFHint window. These
  properties include HintColor, HintPause, and HintHidePause.

----------------------------------------------------------------------------------------------------
@@TJvTFHintProps.HintColor
Summary
  Determines the background color of the control's hint window.
Description
  Use HintColor to specify the hint box color. A default color value of clInfoBk is set for the
  HintColor property in the constructor when the application is created. To change the HintColor
  assign it a new TColor value.

----------------------------------------------------------------------------------------------------
@@TJvTFHintClass
<TITLE TJvTFHintClass type>
Summary
  Defines the metaclass for TJvTFHint.
Description
  TJvTFHintClass is the metaclass for TJvTFHint. Its value is the class reference for TJvTFHint or
  for one of its descendants.

----------------------------------------------------------------------------------------------------
@@TJvTFHint.StartEndHint
Summary
  Displays a hint window.
Description
  Call the StartEndHint method to display start/end information. The window will appear at control
  position (X, Y). The StartDate and EndDate will only be shown if ShowDates is true. The hint will
  appear immediately on the screen, ignoring the ShortPause property.
Parameters
  StartDate - Date to display as the start date.
  EndDate   - Date to display as the end date.
  StartTime - Time to display as the start time.
  EndTime   - Time to display as the end time.
  X         - Left edge of hint window.
  Y         - Top edge of hint window.
  ShowDates - Set to true to display the dates. Times are always displayed.

----------------------------------------------------------------------------------------------------
@@TJvTFHint.ShortPause
Summary
  Specifies the time interval that passes before the control's hint appears when the user places the
  mouse pointer on a control.
Description
  Use ShortPause to change the default pause time of 500 ms or 1/2 second that is set in the
  constructor. When assigning a value to ShortPause, specify the interval in milliseconds. The hint
  displayed at the end of the pause is specified in the Hint property.

----------------------------------------------------------------------------------------------------
@@TJvTFHint.ReleaseHandle
Summary
  Hides a hint window.
Description
  Call ReleaseHandle to destroy a hint window that was activated by directly calling the ActivateHint
  method. Hint windows activated automatically by the application object are deactivated by the
  application as well.
See Also
  TJvTFHint.ActivateHint

----------------------------------------------------------------------------------------------------
@@TJvTFHint.RefProps
Summary
  Stores additional hint window information.
Description
  This property holds a pointer to an instance of a TJvTFHintProps object. If this property is not
  nil,
  TJvTFHint will reference the TJvTFHintProps object in order to set specific properties of the hint
  window. These properties include HintColor, HintPause, and HintHidePause.

----------------------------------------------------------------------------------------------------
@@TJvTFHint.Pause
Summary
  Specifies the time interval to wait before hiding the hint if the mouse has not moved from the
  control or menu item.
Description
  Use Pause to specify a wait time in milliseconds, which is different from the default value of 2500
  ms or 2 1/2 seconds that is set in the constructor. The hint for the control is specified in the
  Hint property.

----------------------------------------------------------------------------------------------------
@@TJvTFHint.OnShowHint
Summary
  Occurs when a hint window becomes visible.
Description
  Write a handler for this event to take specific actions before the hint window becomes visible. For
  example, you can customize the location and content of the hint window.
Parameters
  Sender   - The object that called the event.
  HintType - The hint type.
  Ref      - May contain a reference to the object that is displayed.
  HintRect - Bounding rect of hint window. Can be modified.
  HintText - Text to display in the hint window. Can be modified.

----------------------------------------------------------------------------------------------------
@@TJvTFHint.MultiLineObjHint
Summary
  Displays a hint window.
Description
  This method will show a hint window given multiple lines of text (Hints).
Parameters
  Obj   - The object that the hint is displayed for.
  X     - Left edged of hint window.
  Y     - Top edge of hint window
  Hints - List of hints to display.

----------------------------------------------------------------------------------------------------
@@TJvTFHint.HintType
Summary
  Retrieves the hint type.
Description
  Returns the type of hint that is showing. See TJvTFHintType for more information.
See Also
  TJvTFHintType

----------------------------------------------------------------------------------------------------
@@TJvTFHint.CellHint
Summary
  Displays the hint window.
Description
  The CellHint method will display a hint window specific to the cell given by Row and Col. HintText
  is
  the text that will be displayed and the hint window will appear center in the rect given by
  CellRect (control coordinates).
Parameters
  Row      - The row of the cell.
  Col      - The column of the cell.
  HintText - The hint text.
  CellRect - Coordinates for the hint window.

----------------------------------------------------------------------------------------------------
@@TJvTFHint.ApptHint
Summary
  Displays the hint window.
Description
  This method will cause a specially formatted hint to show. The hint will display the appointment's
  description and start/end info according to the values of the ShowDatesTimes and ShowDesc
  properties.
  If FormattedDesc is True, CRs and LFs (line breaks) will be preserved, otherwise they will be
  removed to minimize the size of the hint window.
  
  The hint will appear at location (X, Y) (relative to the control).
Parameters
  Appt           - The appointment whose hint is to be displayed.
  X              - Coordinate of the left edged of the hint window
  Y              - Coordinate of the top edged of the hint window
  ShowDatesTimes - Specifies if the appointment's date and time settings are displayed in the hint.
  ShowDesc       - Specifies if the appointment's description is displayed in the hint.
  FormattedDesc  - Specifies if CRLF's are preserved.
  ExtraDesc      - Description for this parameter

----------------------------------------------------------------------------------------------------
@@TJvTFHint.ActivateHint
Summary
  Displays the hint window.
Description
  Call ActivateHint to display the hint window at the coordinates provided by the Rect parameter. If
  the Rect parameter appears off screen, ActivateHint moves the hint window to the closest
  approximation to the coordinates supplied by Rect that appears entirely on screen. ActivateHint
  sets the Caption property to the AHint parameter before showing the window, so that the AHint
  string appears to the user.
  
  After an application displays a hint window, it automatically deactivates it after a time period
  has elapsed, or when it receives a message that requires hiding the hint message. To hide the hint
  window that is brought up automatically by the application, use the HideHint method of the global
  Application object. To hide a hint window that is activated directly by calling ActivateHint, use
  the
  ReleaseHandle method.
Parameters
  Rect  - Window coordinates of the hint window.
  AHint - The hint string to display.
See Also
  <DELPHILINK TApplication.HideHint>

----------------------------------------------------------------------------------------------------
@@TJvTFHint
Summary
  Class that provides hints for JTF controls.
Description
  The TJvTFHint component provides hint functionality to JvTFControls. It is used internally and
  under normal circumstances you should never have to work with this component.

----------------------------------------------------------------------------------------------------
@@TJvTFDWNameSource.dwnsSysShort
The day of week display name will be retrieved from the system's day of week short format.

----------------------------------------------------------------------------------------------------
@@TJvTFDWNameSource.dwnsCustom
The day of week display name will be retrieved from one of the DWN properties.

----------------------------------------------------------------------------------------------------
@@TJvTFFlushEvent
<TITLE TJvTFFlushEvent type> <COMBINE TJvTFScheduleManager.OnFlush>

----------------------------------------------------------------------------------------------------
@@TJvTFGetApptDisplayTextEvent
<TITLE TJvTFGetApptDisplayTextEvent type> <COMBINE TJvTFScheduleManager.OnGetApptDisplayText>

----------------------------------------------------------------------------------------------------
@@TJvTFDWNames.OnChange
Summary
  Occurs when any property of the class changes.
Description
  Do not write a handler for this event. One is assigned internally.

----------------------------------------------------------------------------------------------------
@@TJvTFDWNames.Source
Summary
  Determines the format of week day display names.
Description
  Specifies where the display names of the days of the week are retrieved from. See TJvTFDWNameSource
  for more info.

----------------------------------------------------------------------------------------------------
@@TJvTFDWNameSource
<TITLE TJvTFDWNameSource type>
Summary
  Describes the available sources used for week day names.
Description
  TJvTFDWNameSource is used to determine from where an object retrieves the weekday names it uses.

----------------------------------------------------------------------------------------------------
@@TJvTFDWNameSource.dwnsSysLong
The day of week display name will be retrieved from the system's day of week long format.

----------------------------------------------------------------------------------------------------
@@TJvTFDWNames.DWN_Tuesday
Summary
  Stores a week day name.
Description
  Specify a custom day of week display name in this property. This property will be ignored unless
  Source is set to dwnsCustom.
See Also
  TJvTFDWNames.DWN_Friday, TJvTFDWNames.DWN_Monday, TJvTFDWNames.DWN_Saturday,
  TJvTFDWNames.DWN_Sunday,
  TJvTFDWNames.DWN_Thursday, TJvTFDWNames.DWN_Wednesday

----------------------------------------------------------------------------------------------------
@@TJvTFDWNames.DWN_Wednesday
Summary
  Stores a week day name.
Description
  Specify a custom day of week display name in this property. This property will be ignored unless
  Source is set to dwnsCustom.
See Also
  TJvTFDWNames.DWN_Friday, TJvTFDWNames.DWN_Monday, TJvTFDWNames.DWN_Saturday,
  TJvTFDWNames.DWN_Sunday,
  TJvTFDWNames.DWN_Thursday, TJvTFDWNames.DWN_Tuesday

----------------------------------------------------------------------------------------------------
@@TJvTFDWNames.GetDWName
Summary
  Retrieves the week day name using an index.
Description
  Call GetDWName to retrieve the week day display name using an index. Index must be between 1
  (DWN_Monday) and 7 (DWN_Sunday). Depending on the settings of Source, this function returns the
  long or short week day name or a custom week day display name.
Parameters
  DWIndex - The week day display name to retrieve. This value must be between 1 and 7.
Return value
  The week day display name. If Index is less than 1 or greater than 7, am empty string is returned.
See Also
  TJvTFDWNames.Source

----------------------------------------------------------------------------------------------------
@@TJvTFDWNames.DWN_Thursday
Summary
  Stores a week day name.
Description
  Specify a custom day of week display name in this property. This property will be ignored unless
  Source is set to dwnsCustom.
See Also
  TJvTFDWNames.DWN_Friday, TJvTFDWNames.DWN_Monday, TJvTFDWNames.DWN_Saturday,
  TJvTFDWNames.DWN_Sunday,
  TJvTFDWNames.DWN_Tuesday, TJvTFDWNames.DWN_Wednesday

----------------------------------------------------------------------------------------------------
@@TJvTFDWNames.DWN_Sunday
Summary
  Stores a week day name.
Description
  Specify a custom day of week display name in this property. This property will be ignored unless
  Source is set to dwnsCustom.
See Also
  TJvTFDWNames.DWN_Friday, TJvTFDWNames.DWN_Monday, TJvTFDWNames.DWN_Saturday,
  TJvTFDWNames.DWN_Thursday, TJvTFDWNames.DWN_Tuesday, TJvTFDWNames.DWN_Wednesday

----------------------------------------------------------------------------------------------------
@@TJvTFDWNames.DWN_Saturday
Summary
  Stores a week day name.
Description
  Specify a custom day of week display name in this property. This property will be ignored unless
  Source is set to dwnsCustom.
See Also
  TJvTFDWNames.DWN_Friday, TJvTFDWNames.DWN_Monday, TJvTFDWNames.DWN_Sunday,
  TJvTFDWNames.DWN_Thursday,
  TJvTFDWNames.DWN_Tuesday, TJvTFDWNames.DWN_Wednesday

----------------------------------------------------------------------------------------------------
@@TJvTFDWNames.DWN_Monday
Summary
  Stores a week day name.
Description
  Specify a custom day of week display name in this property. This property will be ignored unless
  Source is set to dwnsCustom.
See Also
  TJvTFDWNames.DWN_Friday, TJvTFDWNames.DWN_Saturday, TJvTFDWNames.DWN_Sunday,
  TJvTFDWNames.DWN_Thursday, TJvTFDWNames.DWN_Tuesday, TJvTFDWNames.DWN_Wednesday

----------------------------------------------------------------------------------------------------
@@TJvTFDWNames
Summary
  Stores display names for days.
Description
  This class provides the mechanism to store and retrieve the display names of the days of the week.

----------------------------------------------------------------------------------------------------
@@TJvTFDWNames.DWN_Friday
Summary
  Stores a week day name.
Description
  Specify a custom day of week display name in this property. This property will be ignored unless
  
  Source is set to dwnsCustom.
See Also
  TJvTFDWNames.DWN_Monday, TJvTFDWNames.DWN_Saturday, TJvTFDWNames.DWN_Sunday,
  TJvTFDWNames.DWN_Thursday, TJvTFDWNames.DWN_Tuesday, TJvTFDWNames.DWN_Wednesday

----------------------------------------------------------------------------------------------------
@@TJvTFDrawDWTitleEvent
<TITLE TJvTFDrawDWTitleEvent type>
Summary
  Event used to retrieve week titles.
Description
  Used for an OnDrawDWTitle event, which is fired when day of week title is being drawn. aCanvas
  provides a canvas for custom drawing. aRect specifies the bounding rect of the DW title. DOW
  specifies for which day of the week the title is being drawn for. DWName specifies the name of the
  day of the week that will be drawn in the title.
  
  JTF buffers all drawing to eliminate flicker. Because of the buffering, you MUST use the canvas
  provided by aCanvas for any custom drawing.
Parameters
  Sender  - The object that called the event.
  aCanvas - The canvas to draw on.
  ARect   - The area to draw in.
  DOW     - The day of the week.
  DWName  - Name of the week day.

----------------------------------------------------------------------------------------------------
@@TJvTFDragInfo.Shift
Summary
  Contains keyboard information.
Description
  The Shift property will contain shift information for the drag operation.

----------------------------------------------------------------------------------------------------
@@TJvTFDragInfo.Schedule
Summary
  Source schedule of drag.
Description
  The Schedule property will point to the TJvTFSched where the drag operation originated.

----------------------------------------------------------------------------------------------------
@@TJvTFDragInfo.ApptCtrl
Summary
  Source of drag.
Description
  The ApptCtrl property will point to the Control where the drag operation originated.
See Also
  TJvTFDragInfo.Appt

----------------------------------------------------------------------------------------------------
@@TJvTFDragInfo.Appt
Summary
  The currently dragged appointment object.
Description
  The Appt property will point to the TJvTFAppt that is being dragged.
See Also
  TJvTFDragInfo.ApptCtrl

----------------------------------------------------------------------------------------------------
@@TJvTFDragInfo
Summary
  Represents drag and drop information.
Description
  The TJvTFDragInfo object is used by the Drag/Drop routines of JvTFControls. This object contains
  information about the current drag operation and facilitates dragging appointments across different
  JvTFControls.
  
  Since the JvTFDays control natively handles all drag/drop functions, you should not have to work
  with this object.

----------------------------------------------------------------------------------------------------
@@TJvTFDateList.IndexOf
Summary
  Returns the position of an item in the list.
Description
  Call IndexOf to obtain the position of the first occurrence of an item that matches ADate. An item
  matches ADate if it is identical to ADate or if it differs only in the time portion of ADate.
  
  IndexOf returns the 0-based index of the item; thus, if ADate matches the first item in the list,
  IndexOf returns 0, if ADate is the second item, IndexOf returns 1, and so on. If the item does not
  have a match in the list, IndexOf returns -1.
Parameters
  ADate - The date to find.
Return value
  The index of the item or -1 if not found.

----------------------------------------------------------------------------------------------------
@@TJvTFDateList.OnChange
Summary
  Occurs when the list changes.
Description
  Don't' assign a handler to this event. It is for internal use \only.

----------------------------------------------------------------------------------------------------
@@TJvTFDateList.Delete
Summary
  Deletes an item.
Description
  Deletes a date with the given index from the list.
Parameters
  Index - The index of the item to delete.
See Also
  TJvTFDateList.Add, TJvTFDateList.Clear

----------------------------------------------------------------------------------------------------
@@TJvTFDateList.Dates
Summary
  Provides indexed access to the items in the list.
Description
  Use Dates to access the items in the list using an index.
See Also
  TJvTFDateList.Count

----------------------------------------------------------------------------------------------------
@@TJvTFDateList.Add
Summary
  Adds a date to the list.
Description
  Call Add to add a new date to the list.
Parameters
  ADate - The date to add.
Return value
  Index in Dates where the new date was added.
See Also
  TJvTFDateList.Clear, TJvTFDateList.Dates, TJvTFDateList.Delete

----------------------------------------------------------------------------------------------------
@@TJvTFDateList.Clear
Summary
  Empties the list.
Description
  Clear removes all items from Dates.
See Also
  TJvTFDateList.Add, TJvTFDateList.Dates, TJvTFDateList.Delete

----------------------------------------------------------------------------------------------------
@@TJvTFDateList.Count
Summary
  Indicates the number of dates in the list.
Description
  Use the Count property when iterating over all items in the list, or when trying to locate the
  position of an item relative to the last item in the list.
See Also
  TJvTFDateList.Dates

----------------------------------------------------------------------------------------------------
@@TJvTFDateList
Summary
  Maintains a list of dates.
Description
  Don't create instances of TJvDateList. It is used internally to manage dates.

----------------------------------------------------------------------------------------------------
@@TJvTFCustomImageMap.Move
Summary
  Moves an entry.
Description
  Moves the image (entry) found at SrcMapIndex to DestMapIndex.
Parameters
  SrcMapIndex  - Index of the entry to move.
  DestMapIndex - Index of the new location.

----------------------------------------------------------------------------------------------------
@@TJvTFCustomImageMap.Images
Summary
  Provides indexed access to the original image index in the ImageList.
Description
  The Images property allows you to retrieve the index where the image can be found in the ImageList
  given an index in the image map.
See Also
  TJvTFCustomImageMap.ImageNames

----------------------------------------------------------------------------------------------------
@@TJvTFCustomImageMap.FindImageIndex
Summary
  Searches for an image.
Description
  Use FindImageIndex to get the index position of the image (specified in ImageName) in the ImageList.
Parameters
  ImageName - Name of the image.
Return value
  The index of the image in the imagelist or -1 if not found.
See Also
  TJvTFCustomImageMap.FindMapIndex

----------------------------------------------------------------------------------------------------
@@TJvTFCustomImageMap.FindMapIndex
Summary
  Searches for an image.
Description
  Use FindMapIndex to get the position of the image (specified by ImageName) in the map.
Parameters
  ImageName - name of the image.
Return value
  The index of the image in the map or -1 if not found.
See Also
  TJvTFCustomImageMap.FindImageIndex

----------------------------------------------------------------------------------------------------
@@TJvTFCustomImageMap.ImageNames
Summary
  Provides indexed access to image names.
Description
  The ImageNames property allows you to retrieve the name of the image at the given index.
  Note
  The index is the map index and not the index of the image in the ImageList.
See Also
  TJvTFCustomImageMap.Images

----------------------------------------------------------------------------------------------------
@@TJvTFCustomImageMap.Delete
Summary
  Removes a mapping.
Description
  Removes the map entry at MapIndex.
Parameters
  MapIndex - The index of the entry to remove.

----------------------------------------------------------------------------------------------------
@@TJvTFCustomImageMap.Clear
Summary
  Removes all entries from the map.
Description
  Call Clear to remove all image mappings from the list.

----------------------------------------------------------------------------------------------------
@@TJvTFCustomImageMap.Count
Summary
  Returns the number of entries in the map.
Description
  Use Count to determine how many entries is in the map list.

----------------------------------------------------------------------------------------------------
@@TJvTFCustomImageMap.Assign
Summary
  Copies another object to this object.
Description
  Use the Assign method to assign the properties of one CustomImageMap to another.
Parameters
  Source - The object to copy from.

----------------------------------------------------------------------------------------------------
@@TJvTFCustomImageMap.Add
Summary
  Adds a named imagelist reference to the class.
Description
  Use Add to add a new image to the map. Specify a name for the image in ImageName . Specify the
  location of the image in the ImageList in ImageIndex.
Parameters
  ImageName  - Image name.
  ImageIndex - Index in imagelist.

----------------------------------------------------------------------------------------------------
@@TJvTFCustomImageMap
Summary
  Provides support for custom images in appointments.
Description
  The TJvTFCustomImageMap is part of the system that allows you to attach custom images to specific
  appointments. Specifically, the TJvTFCustomImageMap is part of a TJvTFAppt \object and allows you
  to assign a name to an image from a TImageList. You can then reference the image by name or by its
  index in the map (which is different from the index in the ImageList).
  Note
  The TJvTFScheduleManager.CustomImages is the TImageList that is referenced.

----------------------------------------------------------------------------------------------------
@@TJvTFControlEvent
<TITLE TJvTFControlEvent type>
Summary
  Not currently used.
Description
  This event type is not currently in use.
Parameters
  Sender   - The object that called the event.
  aControl - The control affected.

----------------------------------------------------------------------------------------------------
@@TJvTFControl.Schedules
Summary
  Provides indexed access to the schedules.
Description
  Allows you to access each of the schedule objects that are connected to the control using an index.
  The Schedules property is a list of all schedules that are being used (have been requested and not
  yet released) by the control.
See Also
  TJvTFControl.ScheduleCount

----------------------------------------------------------------------------------------------------
@@TJvTFControl.TimeFormat
Summary
  Sets the (display) time format used by the control.
Description
  The TimeFormat property allows you to specify how times should be displayed in the control.
  Internally JTF uses Delphi's FormatDateTime method along with the format strings specified here and
  in the DateFormat property to display dates and times. Please refer to the FormatDateTime method
  for more information on the content of the format string.
  
  In TJvTFDays this property will be ignored if TJvTFDays.RowHdrType is set to rhFancy.
  
  This is a protected property which can be surfaced by controls derived from TJvTFControl. It may
  not be available to all TJvTFControls.
See Also
  <DELPHILINK FormatDateTime>

----------------------------------------------------------------------------------------------------
@@TJvTFControl.RetrieveSchedule
Summary
  Retrieves a schedule.
Description
  This method will search for schedule with SchedName on SchedDate in the control's Schedules list.
Parameters
  SchedName - Name of schedule to find.
  SchedDate - Date where schedule occurs.
Return value
  Returns the matching schedule. If a match is not found an EJvTFScheduleManagerError will be raised.

----------------------------------------------------------------------------------------------------
@@TJvTFControl.ScheduleCount
Summary
  Returns the number of schedules in the component's Schedules list.
Description
  Use ScheduleCount to determine number of schedules in the list
See Also
  TJvTFControl.Schedules

----------------------------------------------------------------------------------------------------
@@TJvTFControl.ScheduleManager
Summary
  Points to the schedule manager for the control.
Description
  Use ScheduleManager to access the schedule manager for this component.
See Also
  TJvTFScheduleManager

----------------------------------------------------------------------------------------------------
@@TJvTFControl.ReleaseSchedules
Summary
  Releases all schedules.
Description
  Release all of the schedules found in the control's Schedules list with one call. The call is
  equivalent to:
  <CODE>
  while ScheduleCount > 0 do
   ReleaseSchedule(Schedules[0].SchedName, Schedules[0].SchedDate); </CODE>
See Also
  TJvTFControl.ReleaseSchedule

----------------------------------------------------------------------------------------------------
@@TJvTFControl.ReleaseSchedule
Summary
  Releases a schedule.
Description
  Releases a schedule with SchedName on SchedDate. This signals the server that the schedule will no
  longer be needed by the control. This method is here strictly for convenience since it simply calls
  TJvTFScheduleManager.ReleaseSchedule.
Parameters
  SchedName - Name of schedule to release.
  SchedDate - Date where schedule occurs.
See Also
  TJvTFControl.ReleaseSchedules

----------------------------------------------------------------------------------------------------
@@TJvTFControl.ProcessBatches
Summary
  Performs batch processing.
Description
  This method simply calls TJvTFScheduleManager.ProcessBatches if the Server property is assigned and
  the server's SchedLoadMode property is set to slmBatch.

----------------------------------------------------------------------------------------------------
@@TJvTFControl.FindSchedule
Summary
  Searches for a schedule.
Description
  This method will search for a schedule with SchedName on SchedDate in the control's Schedules list.
Parameters
  SchedName - Name of schedule to find.
  SchedDate - Date where schedule occurs.
Return value
  The found schedule. If a match is not found FindSchedule will return nil.

----------------------------------------------------------------------------------------------------
@@TJvTFControl.DragInfo
Summary
  Contains drag information.
Description
  The DragInfo property will contain information about the current drag operation. This property is
  used by the internal drag/drop routines and facilitates moving appointments between different
  JvTFControls. Please see TJvTFDragInfo for more information.
See Also
  TJvTFDragInfo

----------------------------------------------------------------------------------------------------
@@TJvTFControl.DateFormat
Summary
  Sets the (display) date format used by the control.
Description
  The DateFormat property allows you to specify how dates should be displayed in the control.
  Internally JTF uses Delphi's FormatDateTime method along with the format strings specified here and
  in the TimeFormat property to display dates and times. Please refer to the FormatDateTime method
  for more information on the content of the format string.
  
  This is a protected property which can be surfaced by controls derived from TJvTFControl. It may
  not be available to all TJvTFControls.
See Also
  <DELPHILINK FormatDateTime>

----------------------------------------------------------------------------------------------------
@@TJvTFControl
Summary
  Base class of all JTF controls.
Description
  This class manages most of the communication that takes place between a JTF control and its server.
  You should never create an instance of TJvTFControl, but rather derive a new control from the
  TJvTFControl class and override methods as necessary.
  
  All non-visual components that need to connect to the server should be derived from TJvTFComponent.
  Any visual control that needs to connect to the server should be derived from TJvTFControl.

----------------------------------------------------------------------------------------------------
@@TJvTFComponent.TimeFormat
Summary
  Sets the (display) time format used by the component.
Description
  Use this property to specify how Time should be displayed. This property is protected and may be
  surface as a public or published property is derived components.
See Also
  TJvTFComponent.DateFormat

----------------------------------------------------------------------------------------------------
@@TJvTFComponent.Schedules
Summary
  Provides indexed access to the schedules.
Description
  Allows you to access each of the schedule objects that are connected to the component using an
  index.
See Also
  TJvTFComponent.ScheduleCount

----------------------------------------------------------------------------------------------------
@@TJvTFComponent.RetrieveSchedule
Summary
  Retrieves a schedule.
Description
  This method will search for schedule with SchedName on SchedDate in the component's Schedules list.
  If a match is not found an EJvTFScheduleManagerError will be raised.
Parameters
  SchedName - name of schedule to find.
  SchedDate - Date where schedule occurs.
Return value
  The found schedule. If a schedule is not found, an exception is raised.

----------------------------------------------------------------------------------------------------
@@TJvTFComponent.ScheduleCount
Summary
  Returns the number of schedules in the component's Schedules list.
Description
  Use ScheduleCount to determine number of schedules in the list
See Also
  TJvTFComponent.Schedules

----------------------------------------------------------------------------------------------------
@@TJvTFComponent.ScheduleManager
Summary
  Points to the schedule manager for the component.
Description
  Use ScheduleManager to connect the component to a schedule manager or to access the schedule
  manager assigned to the component.
See Also
  TJvTFScheduleManager

----------------------------------------------------------------------------------------------------
@@TJvTFComponent.ReleaseSchedules
Summary
  Releases all schedules.
Description
  Release all of the schedules found in the component's Schedules list with one call. The call is
  equivalent to:
  <CODE>
  while ScheduleCount > 0 do
   ReleaseSchedule(Schedules[0].SchedName, Schedules[0].SchedDate); </CODE>
See Also
  TJvTFComponent.ReleaseSchedule

----------------------------------------------------------------------------------------------------
@@TJvTFComponent.ReleaseSchedule
Summary
  Releases a schedule.
Description
  Releases a schedule with SchedName on SchedDate. This signals the server that the schedule will no
  longer be needed by the component. This method is here strictly for convenience since it simply
  calls
  TJvTFScheduleManager.ReleaseSchedule.
Parameters
  SchedName - Name of the schedule to release.
  SchedDate - Date where the schedule appears.
See Also
  TJvTFComponent.ReleaseSchedules

----------------------------------------------------------------------------------------------------
@@TJvTFComponent.ProcessBatches
Summary
  Performs batch processing.
Description
  This method simply calls TJvTFScheduleManager.ProcessBatches if the Server property is assigned and
  the server's SchedLoadMode property is set to slmBatch.

----------------------------------------------------------------------------------------------------
@@TJvTFComponent.FindSchedule
Summary
  Searches for a schedule.
Description
  This method will search for a schedule with SchedName on SchedDate in the component's Schedules
  list.
  If a match is not found FindSchedule will return nil.
Parameters
  SchedName - Name of the schedule to find.
  SchedDate - Date where the schedule appears.
Return value
  The found TSchedule or nil if not found.

----------------------------------------------------------------------------------------------------
@@TJvTFComponent.DateFormat
Summary
  Sets the (display) date format used by the component.
Description
  This property allows you to specify how dates should be displayed. This property is protected and
  may be surfaced as a public or published property in a derived component.
See Also
  TJvTFComponent.TimeFormat

----------------------------------------------------------------------------------------------------
@@TJvTFComponent
Summary
  Base class of all JvTFComponents.
Description
  This class manages most of the communication that takes place between a JvTFComponent and its
  server.
  
  You should never create an instance of TJvTFComponent, but rather derive a new component from the
  TJvTFComponent class and override methods as necessary.
  
  All non-visual components that need to connect to the server should be derived from TJvTFComponent.
  Any visual control that needs to connect to the server should be derived from TJvTFControl.

----------------------------------------------------------------------------------------------------
@@TJvTFApptEvent
<TITLE TJvTFApptEvent type>
Summary
  Event type for appointment related events.
Description
  The TJvTFApptEvent type is used for appointment related events such as OnPostAppt and OnDeleteAppt.
Parameters
  Sender - Sender will be the object that fired the event, which is most likely to be a
            TJvTFScheduleManager.
  Appt   - Appt will contain the appointment object that is being affected.
See Also
  TJvTFScheduleManager.OnCreateAppt, TJvTFScheduleManager.OnDeleteAppt,
  TJvTFScheduleManager.OnDestroyAppt, TJvTFScheduleManager.OnPostAppt,
  TJvTFScheduleManager.OnRefreshAppt

----------------------------------------------------------------------------------------------------
@@TJvTFApptClass
<TITLE TJvTFApptClass type>
Summary
  Defines the metaclass for TJvTFAppt.
Description
  TJvTFApptClass is the metaclass for TJvTFAppt. Its value is the class reference for TJvTFAppt or
  for one of its descendants.

----------------------------------------------------------------------------------------------------
@@TJvTFApptDescEvent
<TITLE TJvTFApptDescEvent type>
Summary
  Event type for getting and setting a description.
Description
  This event type is used for the OnGetApptDescription and OnSetApptDescription events in
  TJvTFScheduleManager.
Parameters
  Sender      - The TJvTFScheduleManager that is firing the event.
  Appt        - Appt is a reference to the appointment whose Description property is being           
      read/written.
  Description - Description is the appointment's description and is modifiable by you.

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Updating
Summary
  Determines if the appointment is currently being updated.
Description
  This property will be True when an appointment is being loaded or refreshed, or between a
  BeginUpdate/EndUpdate pair.
See Also
  TJvTFAppt.BeginUpdate, TJvTFAppt.EndUpdate

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.StartTime
Summary
  Specifies the starting time of the appointment.
Description
  Note that this property is read-only. You should set the start and end info by using the
  SetStartEnd method.
See Also
  TJvTFAppt.SetStartEnd, TJvTFAppt.StartDate, TJvTFAppt.StartDateTime

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.StartDateTime
Summary
  Specifies the starting date and time of the appointment.
Description
  Note that this property is read-only. You should set the start and end info by using the
  SetStartEnd method.
See Also
  TJvTFAppt.SetStartEnd, TJvTFAppt.StartDate, TJvTFAppt.StartTime

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.StartDate
Summary
  Specifies the starting date of the appointment.
Description
  Note that this property is read-only. You should set the start and end info by using the
  SetStartEnd method.
See Also
  TJvTFAppt.SetStartEnd, TJvTFAppt.StartDateTime, TJvTFAppt.StartTime

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Shared
Summary
  Determines whether the appointment is shared between several Schedules or not.
Description
  Returns True if ScheduleCount > 1, False otherwise.
See Also
  TJvTFAppt.ScheduleCount

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.SetModified
Summary
  Causes Modified to return true.
Description
  Call SetModified to cause the Modified method to return True. This method will come in handy if you
  attach custom data to the appointment via the Data property. When your custom data changes, you can
  call SetModified to signal that the appointment's data has changed.
See Also
  TJvTFAppt.Modified

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.SetStartEnd
Summary
  Sets new start and end values for the appointment.
Description
  Use the SetStartEnd method to set the start and end information of the appointment. Valid
  parameters are as follows:
  
  1. NewStartDate must fall on or before NewEndDate 2. If NewStartDate = NewEndDate then NewStartTime
  must be before NewEndTime
Parameters
  NewStartDate - The date when the appointment should start.
  NewStartTime - The time when the appointment should start.
  NewEndDate   - The date when the appointment should end.
  NewEndTime   - The time when the appointment should end.

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.RemoveSchedule
Summary
  Removes the appointment from a schedule.
Description
  Use the RemoveSchedule method to remove the schedule specified by SchedName from the appointment's
  Schedules list.
Parameters
  SchedName - Name of the schedule to remove.
See Also
  TJvTFAppt.Schedules

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.ScheduleCount
Summary
  Returns the number of schedules in the component's Schedules list.
Description
  Use ScheduleCount to determine number of schedules in the list
See Also
  TJvTFAppt.Schedules

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.ScheduleManager
Summary
  Points to the schedule manager for the component.
Description
  Use ScheduleManager to access the schedule manager for this component.
See Also
  TJvTFScheduleManager

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Schedules
Summary
  Provides indexed access to the schedules that contain the appointment.
Description
  The Schedules property is a list of names for all of the schedules that contain this appointment.
  (The schedule date(s) are specified by StartDate and EndDate.)
  
  Note that a "connection" signifies that the appointment belongs to a schedule that is currently
  loaded in the server and is represented by a TJvTFSched object. A "schedule" signifies that the
  appointment belongs to a schedule that may or may not currently reside in the server. A schedule is
  represented by a name and a date. See the Connections property for more info.
See Also
  TJvTFAppt.Connections, TJvTFAppt.ScheduleCount

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Refreshed
Summary
  Determines whether the object has been refreshed.
Description
  This property specifies whether or not the appt object has been refreshed. Please see <LINK
  __JVCL.Info.TimeFramework.RefreshReconciliation, "Refresh Reconciliation"> for more information.
  Note
  This property is ignored if TJvTFScheduleManager.RefreshAutoReconcile is set to False.

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.RefreshControls
Summary
  Updates all linked controls with new data.
Description
  Call this method to cause all controls that display the appointment to be redrawn to reflect recent
  changes. You should not have to call this method, as the server should refresh its controls as
  needed.

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Refresh
Summary
  Rereads data from storage.
Description
  Call this method when you need to make the data in memory reflects the data on the disk. This method
  calls TJvTFScheduleManager.dbRefreshAppt, which eventually fires the
  TJvTFScheduleManager.OnRefreshAppt event. (You would implement a handler for the OnRefreshAppt
  event to "reload" the appointment data in memory from the data stored on disk.)

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Post
Summary
  Saves the appointment.
Description
  Use this method to save changes to the appointment's data to your physical data storage backend.
  This method calls TJvTFScheduleManager.dbPostAppt, which eventually fires the
  TJvTFScheduleManager.OnPostAppt event. (You would implement a handler for the OnPostAppt event that
  would change the physical data stored for the appointment.)

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Modified
Summary
  Determines if the appointment has been modified or not.
Description
  Returns True if the appointment information has changed since it was last posted, false otherwise.

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Persistent
Summary
  Determines whether the appointment is cached or not.
Description
  The caching mechanism will not flush the appointment from memory if Persistent is set to True.

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.IndexOfSchedule
Summary
  Returns the index of the name of a schedule stored in the Schedules list.
Description
  Call IndexOfSchedule to get the index of SchedName in Schedules.
Parameters
  SchedName - Name of the schedule to find. Not case-sensitive.
Return value
  The index in Schedule where SchedName is located or -1 if SchedName is not found.
See Also
  TJvTFAppt.Schedules

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.ImageMap
Summary
  Provides space for custom images.
Description
  Use this property to embed custom images into the appointment which are specific to the appointment.
  See TJvTFCustomImageMap for more info.
  
  Note that the TJvTFCustomImageMap stored in this property refers to images stored in the TImageList
  specified in TJvTFScheduleManager.CustomImages.

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Glyph
Summary
  Indicates the image to draw next to the appt
Description
  This value may or may not be used by the controls that use this class. For instance, TJvTFDays will
  display it next to the appt, depending on its own properties

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.ID
Summary
  A unique identifier for the item.
Description
  The ID property contains a string that uniquely identifies an appointment. The ID is set when the
  appointment object is initially created. If an ID is not provided by you (using the
  TJvTFScheduleManager.RequestAppt or TJvTFScheduleManager.dbNewAppt methods) the server will
  generate a unique ID for you.
  
  If you do specify an ID, it is your responsibility to guarantee that it is unique among all
  appointments, whether or not they are currently loaded into the server.
  
  The server automatically generates IDs using the TJvTFScheduleManager.GenerateApptID class function.

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.EndUpdate
Summary
  Resumes updating.
Description
  Calling this method after a call to BeginUpdate signifies that you are done updating the appt.
  properties and TJvTFScheduleManager will fire the OnPostApptQuery/OnPostAppt events.
See Also
  TJvTFAppt.BeginUpdate

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.EndTime
Summary
  Specifies the end time of the appointment.
Description
  Note that this property is read-only. You should set the start and end info by using the
  SetStartEnd method.
See Also
  TJvTFAppt.EndDate, TJvTFAppt.EndDateTime, TJvTFAppt.SetStartEnd

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.EndDateTime
Summary
  Specifies the ending date and time of the appointment.
Description
  Note that this property is read-only. You should set the start and end info by using the
  SetStartEnd method.
See Also
  TJvTFAppt.EndDate, TJvTFAppt.EndTime, TJvTFAppt.SetStartEnd

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.EndDate
Summary
  Specifies the ending date of the appointment.
Description
  Note that this property is read-only. You should set the start and end info by using the
  SetStartEnd method.
See Also
  TJvTFAppt.EndDateTime, TJvTFAppt.EndTime, TJvTFAppt.SetStartEnd

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Description
Summary
  Specifies the description of the appointment.
Description
  This property specifies the description of the appointment.

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Destroying
Summary
  True while the Appt is being destroyed
Description
  Write here a description

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Delete
Summary
  Removes the appointment.
Description
  This method will completely remove the appointment from the scheduling system. This method calls
  TJvTFScheduleManager.dbDeleteAppt, which eventually fires the TJvTFScheduleManager.OnDeleteAppt
  event. (You would implement a handler for the OnDeleteAppt event that would remove the appointment
  data from your physical data storage backend.)

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Data
Summary
  Provides space for storing custom data.
Description
  You can use the Data property to attach custom data to an appointment. Most likely, you will define
  a
  TObject to hold the additional data and then typecast this property into a TObject, but it has been
  implemented as an Integer for added flexibility.
  
  If you store additional data by using a TObject, you should use the
  TJvTFScheduleManager.OnCreateAppt and the TJvTFScheduleManager.OnDestroyAppt events to create and
  destroy your object.

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Connections
Summary
  Returns a TJvTFSched object to which the appointment is connected.
Description
  Note that a "connection" signifies that the appointment belongs to a schedule that is currently
  loaded in the server and is represented by a TJvTFSched object. A "schedule" signifies that the
  appointment belongs to a schedule that may or may not currently reside in the server. A schedule is
  represented by a name and a date. See the Schedules property for more info.
See Also
  TJvTFAppt.ConnectionCount, TJvTFAppt.Schedules

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.ConnectionCount
Summary
  The number of maintained connections.
Description
  Returns the number of TJvTFSched objects stored in the Connections list.
See Also
  TJvTFAppt.Connections

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.Color
Summary
  Specifies the background color of the appointment.
Description
  Use the Color property of TJvTFAppt to set the background color of an appointment, specific to that
  appointment.
  
  The default value for this property is clDefault. When this property is set to clDefault, the
  JvTFDays control will use the color specified in the ApptAttr.Color property. In short, by
  specifying any value other than clDefault for this property you are "overriding" the color
  specified in the
  ApptAttr.Color property for an individual appointment.
  
  Use TJvTFDays.GetApptDispColor to easily determine the background color of an appointment drawn in
  the JvTFDays control.
See Also
  TJvTFDays.GetApptDispColor

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.ClearSchedules
Summary
  Removes the appointment from all schedules.
Description
  Call the ClearSchedules method to remove all of the schedules from the appointment.

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.BeginUpdate
Summary
  Suspends updating.
Description
  Calling this method before you change one or more of the appt's properties prevents the
  OnPostApptQuery/OnPostAppt events from being fired. This is handy if you need to change more than
  one property at a time. Be sure to call EndUpdate when you are done modifying the properties.
  
  Note that you do not have to call BeginUpdate/EndUpdate when the appointment is being loaded or
  refreshed.
See Also
  TJvTFAppt.EndUpdate

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.BarColor
Summary
  Controls the color of the bar.
Description
  Use this property to specify the color of the bar for an individual appointment. The default value
  for this property is clDefault. If this property is set to clDefault, the JvTFDays control will use
  the color specified by the ApptBar.Color property when drawing the appointment bar. By setting this
  property to a value other than clDefault, you are in effect, overriding the ApptBar.Color property.
See Also
  TJvTFAppt.Color

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.AssignSchedules
Summary
  Adds the appointment to multiple schedules.
Description
  Use the AssignSchedules method to add the appointment to multiple schedules with one call. List
  should contain the names of all of the schedules that the appointment belongs to. AssignSchedules
  will overwrite the current Schedules list.
Parameters
  List - List with names of schedules the appointment belongs to.

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.AlarmEnabled
Summary
  Controls whether alarms are active or not.
Description
  Set the AlarmEnabled property to True if an alarm should fire before the appointment is scheduled
  to begin. Note that currently alarm functionality is not included in the JTF suite.

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.AlarmAdvance
Summary
  Indicates when the alarm should be triggered.
Description
  Set the AlarmAdvance property to indicate the number of minutes before the appointment is scheduled
  to start that the alarm should fire. Note that currently alarm functionality is not native to the
  JTF suite. Example: <PRE>
  Appointment starts at 10:00am.
  AlarmAdvance is set to 15.
  Alarm should fire at 9:45am.
  </PRE>

----------------------------------------------------------------------------------------------------
@@TJvTFAppt.AddSchedule
Summary
  Adds the appointment to a schedule.
Description
  Use the AddSchedule method to add the appointment to the schedule specified in SchedName. An
  appointment can be added to multiple schedules, which is called "sharing".
Parameters
  SchedName - Name of the schedule.

----------------------------------------------------------------------------------------------------
@@TCNRequestRefresh.Schedule
The schedule that needs refreshing

----------------------------------------------------------------------------------------------------
@@TCNRequestRefresh.Unused
Not used

----------------------------------------------------------------------------------------------------
@@TCNRequestRefresh.Result
Not used

----------------------------------------------------------------------------------------------------
@@TJvTFAppt
Summary
  Stores information about an appointment.
Description
  The TJvTFAppt object is used to store information about an appointment within the server. Normally
  the server completely maintains each appointment it contains, which includes creation, destruction,
  and indexing for contained TJvTFSched objects.
  
  The TJvTFAppt object provides you with several properties that you can use to define the
  appointment.
  There are also several methods you may use to manipulate the object.

----------------------------------------------------------------------------------------------------
@@TCNRequestRefresh.Msg
The message, should be CN_REQUESTREFRESH

----------------------------------------------------------------------------------------------------
@@TCNRequestRefresh
<TITLE TCNRequestRefresh type>
Summary
  Message type used to request a schedule refresh.
Description
  A CN_REQUESTREFRESH is sent by the TJvTFScheduleManager when it needs to refresh a schedule. The
  message is sent in a TCNRequestRefresh record. This message has been superseded by the
  NotifyApptCtrl method.

----------------------------------------------------------------------------------------------------
@@EJvTFScheduleManagerError
Summary
  Exception class.
Description
  An EJvTFScheduleManagerError is raised whenever an error condition is encountered which is specific
  to the server and its relationships and communication with the contained TJvTFSched and TJvTFAppt
  and connected controls.

----------------------------------------------------------------------------------------------------
@@EJvTFPrinterError
Summary
  Exception class.
Description
  This exception is raised when an error is encountered in a Printer.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManagerCache.BufferCount
Summary
  Sets the max number of unused objects to keep in memory.
Description
  This property specifies a maximum number of unused schedules objects that will remain in memory.
  The cache then becomes a "buffer" of the most recently used schedules. As schedules are added to the
  cache list, others are flushed from memory so that the number of cached schedules never exceeds
  BufferCount.
  
  This property is ignored unless the CacheType is set to ctBuffer .
See Also
  TJvTFScheduleManagerCache.CacheType

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManagerCache.CacheType
Summary
  Specifies the manner in which objects are cached.
Description
  See TJvTFScheduleManagerCacheType for descriptions of the available options.
See Also
  TJvTFScheduleManagerCacheType

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManagerCache.TimedDelay
Summary
  Specifies how long objects are kept in memory.
Description
  TimedDelay specifies how long cached objects will remain in memory before being flushed. TimedDelay
  is in milliseconds and cached objects are guaranteed to be removed from memory in TimedDelay to
  TimedDelay * 2 milliseconds after being cached.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManagerCacheType
<TITLE TJvTFScheduleManagerCacheType type>
Summary
  Represents the different settings for the caching system.
Description
  Write here a description

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManagerCacheType.ctNone
Signifies that no objects will be automatically removed from memory.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManagerCacheType.ctTimed
Signifies that cached objects will be flushed periodically.

----------------------------------------------------------------------------------------------------
@@TJvTFScheduleManagerCacheType.ctBuffer
Signifies that only the most recently used schedules will remain in memory (as specified by
BufferCount).

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode
<TITLE TJvTFServNotifyCode type>
Summary
  Represents the different notification codes used internally.
Description
  Write here a description

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncDestroyAppt
Description for sncDestroyAppt

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncDestroySchedule
Description for sncDestroySchedule

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncLoadAppt
Description for sncLoadAppt

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncSchedLoadAppt
Description for sncSchedLoadAppt

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncSchedUnloadAppt
Description for sncSchedUnloadAppt

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncPostAppt
Description for sncPostAppt

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncDeleteAppt
Description for sncDeleteAppt

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncRequestSchedule
Description for sncRequestSchedule

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncReleaseSchedule
Description for sncReleaseSchedule

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncConnectComponent
Description for sncConnectComponent

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncDisconnectComponent
Description for sncDisconnectComponent

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncConnectControl
Description for sncConnectControl

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncDisconnectControl
Description for sncDisconnectControl

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncConnectAppt
Description for sncConnectAppt

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncDisconnectAppt
Description for sncDisconnectAppt

----------------------------------------------------------------------------------------------------
@@TJvTFServNotifyCode.sncRefresh
Description for sncRefresh

----------------------------------------------------------------------------------------------------
@@TJvTFShowHintEvent
<TITLE TJvTFShowHintEvent type> <COMBINE TJvTFHint.OnShowHint>

----------------------------------------------------------------------------------------------------
@@TJvTFStateImageMap
Summary
  Class that allows you to embed images within an appointment.
Description
  The TJvTFStateImageMap object is part of the system that allows you to embed images within a
  TJvTFAppt object. Specifically, it allows you to assign images to certain states that the
  appointment may be in. The different states are implemented as properties. You need to specify the
  index position where the image can be found in the ImageList.
  
  Set the state property value to -1 to indicate that no image should be shown for the given state.
  
  Note that the ImageList being referenced is found in the TJvTFScheduleManager.StateImages property.

----------------------------------------------------------------------------------------------------
@@TJvTFStateImageMap.AlarmDisabled
Summary
  Specifies the image to use for the disabled alarm state.
Description
  Set this property to the position of the image in the ImageList that should display when
  Appt.AlarmEnabled = False.
  
  Set it to -1 to indicate that no image should be shown for this state.
See Also
  TJvTFStateImageMap.AlarmEnabled, TJvTFStateImageMap.Modified, TJvTFStateImageMap.Recurring,
  TJvTFStateImageMap.Shared

----------------------------------------------------------------------------------------------------
@@TJvTFStateImageMap.AlarmEnabled
Summary
  Specifies the image to use for the enabled alarm state.
Description
  Set the value of this property to the position of the image in the ImageList that should display
  when
  Appt.AlarmEnabled = True.
  
  Set it to -1 to indicate that no image should be shown for this state.
See Also
  TJvTFStateImageMap.AlarmDisabled, TJvTFStateImageMap.Modified, TJvTFStateImageMap.Recurring,
  TJvTFStateImageMap.Shared

----------------------------------------------------------------------------------------------------
@@TJvTFStateImageMap.BeginUpdate
Summary
  Suspends redrawing.
Description
  If you are setting several of the state properties at once you should call BeginUpdate. This will
  not allow any connected controls to be redrawn while you are setting the properties. Don't forget
  to call
  EndUpdate when you are done setting the properties.
See Also
  TJvTFStateImageMap.EndUpdate

----------------------------------------------------------------------------------------------------
@@TJvTFStateImageMap.Clear
Summary
  Resets all state image values.
Description
  This will set the values of all of the state properties to -1.
See Also
  TJvTFStateImageMap.AlarmDisabled, TJvTFStateImageMap.AlarmEnabled, TJvTFStateImageMap.Modified,
  TJvTFStateImageMap.Recurring, TJvTFStateImageMap.Shared

----------------------------------------------------------------------------------------------------
@@TJvTFStateImageMap.EndUpdate
Summary
  Resumes redrawing.
Description
  This signals the server that you are done changing the state properties and that it should now tell
  its controls to redraw themselves to reflect the changes you have made. Each call to EndUpdate
  should be paired with a previous call to BeginUpdate.
See Also
  TJvTFStateImageMap.BeginUpdate

----------------------------------------------------------------------------------------------------
@@TJvTFStateImageMap.Modified
Summary
  Specifies the image to use for the modified state.
Description
  Set the value of this property to the position of the image in the ImageList that should display
  when an appointment's data has been changed but not yet posted (Appt.Modified = True) .
  
  Set it to -1 to indicate that no image should be shown for this state.
See Also
  TJvTFStateImageMap.AlarmDisabled, TJvTFStateImageMap.AlarmEnabled, TJvTFStateImageMap.Recurring,
  TJvTFStateImageMap.Shared

----------------------------------------------------------------------------------------------------
@@TJvTFStateImageMap.Pics
Summary
  Provides indexed access to the images.
Description
  Returns the position of the image specified by Index in the ImageList. This is handy if you need to
  loop through the possible states to get image map information.

----------------------------------------------------------------------------------------------------
@@TJvTFStateImageMap.Recurring
Summary
  Specifies the image to use for the recurring state.
Description
  Set the value of this property to the position of the image in the ImageList that should display
  when
  Appt.Recurring = False. Note that recurring appointments are not yet supported.
  
  Set it to -1 to indicate that no image should be shown for this state.
See Also
  TJvTFStateImageMap.AlarmDisabled, TJvTFStateImageMap.AlarmEnabled, TJvTFStateImageMap.Modified,
  TJvTFStateImageMap.Shared

----------------------------------------------------------------------------------------------------
@@TJvTFStateImageMap.Shared
Summary
  Specifies the image to use for the shared state.
Description
  Set the value of this property to the position of the image in the ImageList that should display
  when
  Appt.Shared = True.
  
  Set it to -1 to indicate that no image should be shown for this state.
See Also
  TJvTFStateImageMap.AlarmDisabled, TJvTFStateImageMap.AlarmEnabled, TJvTFStateImageMap.Modified,
  TJvTFStateImageMap.Recurring

----------------------------------------------------------------------------------------------------
@@TJvTFStatePic
<TITLE TJvTFStatePic type>
Summary
  Represent the different appointment states that may be assign an image.
Description
  Represent the different appointment states that may be assign an image.

----------------------------------------------------------------------------------------------------
@@TJvTFStatePic.spAlarmEnabled
The alarm is enabled for the appointment.

----------------------------------------------------------------------------------------------------
@@TJvTFStatePic.spAlarmDisabled
The alarm is disabled for the appointment.

----------------------------------------------------------------------------------------------------
@@TJvTFStatePic.spShared
The appointment is a shared appointment.

----------------------------------------------------------------------------------------------------
@@TJvTFStatePic.spRecurring
The appointment is a recurring appointment.

----------------------------------------------------------------------------------------------------
@@TJvTFStatePic.spModified
The appointment has been modified

----------------------------------------------------------------------------------------------------
@@TJvTFTimeRange
<TITLE TJvTFTimeRange type>
Summary
  Defines a time range.
Description
  Defines a time range.

----------------------------------------------------------------------------------------------------
@@TJvTFTimeRange.StartTime
Start time of the range. Must be less than EndTime.

----------------------------------------------------------------------------------------------------
@@TJvTFTimeRange.EndTime
End time of the range. Must be greater than StartTime.

----------------------------------------------------------------------------------------------------
@@TJvTFUniversalPrinter
<TITLEIMG TJvTFUniversalPrinter>
#JVCLInfo
<GROUP JVCL.Printing>
<FLAG Component>
Summary
  The TJvTFUniversalPrinter component is a general purpose printing component that allows you to
  easily produce documents with specific margins, bodies, and headers and footers.
Description
  This component is NOT a supported part of JTF. It is included only because it is a natural
  extension of TJvTFPrinter. This component will NOT be improved or enhanced.
  
  See <LINK __JVCL.Info.TimeFramework.UsingJvTFPrinter, "Using TJvTFPrinter"> for more information.

----------------------------------------------------------------------------------------------------
@@TJvTFVarApptEvent
<TITLE TJvTFVarApptEvent type>
Summary
  Event type for events that might need to change an appointment.
Description
  This event type is used when the value of Appt may be changed in an event handler.
Parameters
  Sender - The object that called the event.
  Appt   - The appointment that might be changed.

----------------------------------------------------------------------------------------------------
@@TTFDayOfWeek
<TITLE TTFDayOfWeek type>
Summary
  Type describing the days of a week.
Description
  Enumerates the days of the week.

