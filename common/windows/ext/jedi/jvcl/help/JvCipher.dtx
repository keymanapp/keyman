##Package: Crypt
##Status: Completed, Needs review
----------------------------------------------------------------------------------------------------
@@JvCipher.pas
Summary
    Contains the TJvCaesarCipher, TJvVigenereCipher and TJvXorCipher components.
Author
  Sébastien Buysse
----------------------------------------------------------------------------------------------------
@@TJvXORCipher
<TITLEIMG TJvXORCipher>
#JVCLInfo
<GROUP JVCL.System.Encryption>
<FLAG Component>
Summary
  A component that can encode and decode using the XOR algorithm
Description
  The XOR algorithm is really simple and as such really easy to crack. However it is fast and uses a
  symmetrical algorithm:
  
  <CODE>
  Encoded[I] = Decoded[I] XOR Key[J]
  Decoded[I] = Encoded[I] XOR Key[J] </CODE>
  
  Set the Encoded property to get the \decoded value in Decoded. Set the Decoded property to get the
  \encoded value in Encoded.
  Note
  As the algorithm is symmetrical, there is virtually no difference between setting Encoded or
  Decoded to get the resulting value.
  
  Each element of the string will be \encoded by its corresponding element in the Key. If the Key is
  too short, it is reused from the start.

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher.Key
Summary
  The key used for encoding/decoding via the Encoded/Decoded properties
Description
  This key will only be used by the Decoded and Encoded properties. It is stored in the DFM file only
  if IsStored is True.
See Also
  TJvCustomCipher.Decoded, TJvCustomCipher.Encoded, TJvCustomCipher.IsStored

----------------------------------------------------------------------------------------------------
@@TJvVigenereCipher
<TITLEIMG TJvVigenereCipher>
#JVCLInfo
<GROUP JVCL.System.Encryption> 
<FLAG Component>
Summary
  A component that encodes and decodes according to the Vigenere cipher method
Description
  Here is a short explanation of the vigenere cipher, inspired by the much more complete description
  available at this address: http://www.trincoll.edu/depts/cpsc/cryptography/vigenere.html
  
  For each letter of the Key, a new alphabet is created by shifting the usual alphabet to start at
  the same letter as in the key. For instance, if the key is CUP then three alphabets are created:
  
  <PRE>
  CDEFGHIJKLMNOPQRSTUVWXYZAB
  UVWXYZABCDEFGHIJKLMNOPQRST
  PQRSTUVWXYZABCDEFGHIJKLMNO </PRE>
  When encoding a string, each alphabet is used in turn as a lookup table. For instance, if we encode
  HELLO, then we have this:
  
  <PRE>
  H --> J
  E --> Y
  L --> A
  L --> N
  O --> I </PRE>
  As you can see, the same letter is not always encoded by the same letter, thus making statistical
  analysis a bit harder. The implementation in this component considers an alphabet of 255
  characters, thus encoding every single character no matter what its value is.

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher.IsStored
Summary
  If True, the Key and Encoded properties are stored in the DFM file
Description
  For security reasons, you may not want to store the Encoded and Key values in the DFM file, and as
  result they wouldn't appear in the final exe file. If that is the case, set this property to False
  and the Encoded and Key values will not be stored. For backward compatibility, this property is
  True by default.
See Also
  TJvCustomCipher.Decoded, TJvCustomCipher.Encoded, TJvCustomCipher.Key

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher.EncodeString
Summary
  Encodes the given string
Description
  Write here a description
Parameters
  \Key  - The key to use to encode the string.
  Value - The string to encode
Return value
  The encoded equivalent of the given string.
See Also
  TJvCustomCipher.DecodeString

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher.EncodeList
Summary
  Encodes the given TStrings
Description
  The content of the given string list will be replaced by its encoded equivalent.
Parameters
  \Key - The key to use to encode the list.
  List - The string list to encode
See Also
  TJvCustomCipher.DecodeList

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher.EncodeStream
Summary
  Encodes the given stream
Description
  The content of the given stream will be replaced by its encoded equivalent.
Parameters
  \Key   - The key to use to encode the stream.
  Stream - The stream to encode
See Also
  TJvCustomCipher.DecodeStream, TJvCustomCipher.Key

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher.EncodeFile
Summary
  Encodes the given file
Description
  The content of the given file will be replaced by its encoded equivalent.
Parameters
  \Key     - The key to use to encode the file.
  FileName - The name of the file to encode
See Also
  TJvCustomCipher.DecodeFile

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher.Encoded
Summary
  The encoded counterpart of Decoded
Description
  Set this value to get the decoded version in the Decoded property. This property is stored in the
  DFM file only if IsStored is True
See Also
  TJvCustomCipher.Decoded, TJvCustomCipher.IsStored, TJvCustomCipher.Key

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher.Encode
Summary
  Encodes the given buffer using the given \key
Description
  Write here a description
Parameters
  Key  - The key to use to encode the buffer
  Buf  - The buffer to be encoded. Its value will be replaced
  Size - The number of bytes in the buffer
See Also
  TJvCustomCipher.Decode

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher.DecodeString
Summary
  Decodes the given string
Description
  Write here a description
Parameters
  \Key  - The key to use to decode the string.
  Value - The string to decode
Return value
  The decoded equivalent of the given string.
See Also
  TJvCustomCipher.EncodeString

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher.DecodeStream
Summary
  Decodes the given stream
Description
  The content of the given stream will be replaced by its decoded equivalent.
Parameters
  \Key   - The key to use to decode the stream.
  Stream - The stream to decode
See Also
  TJvCustomCipher.EncodeStream

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher.DecodeList
Summary
  Decodes the given TStrings
Description
  The content of the given string list will be replaced by its decoded equivalent.
Parameters
  \Key - The key to use to decode the list.
  List - The string list to decode
See Also
  TJvCustomCipher.EncodeList

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher.DecodeFile
Summary
  Decodes the given file
Description
  The content of the given file will be replaced by its decoded equivalent.
Parameters
  \Key     - The key to use to decode the file.
  FileName - The name of the file to decode
See Also
  TJvCustomCipher.EncodeFile

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher.Decoded
Summary
  The decoded counterpart of Encoded
Description
  Set this value to get its encoded version in the Encoded property. This value is never stored in the
  DFM file.
See Also
  TJvCustomCipher.Encoded, TJvCustomCipher.IsStored, TJvCustomCipher.Key

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher
Summary
  Abstract base class for simple ciphers which do not change the length of the data
Description
  Write here a description

----------------------------------------------------------------------------------------------------
@@TJvCustomCipher.Decode
Summary
  Decodes the given buffer using the given \key
Description
  Write here a description
Parameters
  \Key - The key to use to decode the buffer
  Buf  - The buffer to be decoded. Its value will be replaced
  Size - The number of bytes in the buffer
See Also
  TJvCustomCipher.Encode

----------------------------------------------------------------------------------------------------
@@TJvCaesarCipher
<TITLEIMG TJvCaesarCipher>
#JVCLInfo
<GROUP JVCL.System.Encryption>
<FLAG Component>
Summary
  Enables you to (de)cipher strings.
Description
  TJvCaesarCipher is a component to (de)cipher strings or series of bytes using "Caesar Cipher", one of
  he simplest forms of substitution cipher. The method is named after Julius Ceasar who - as is said
  - used this method to communicate with his army. The ciphering is usually done by substituting each
  letter in a message by a letter that is on a fixed distance in the alphabet. TJvCaesarCipher uses
  the whole character set (256 characters) for ciphering strings or series of bytes. This makes it
  possible to cipher any series of bytes (not necessarily readable strings). When used with strings
  it may result in strings that do not even look like strings anymore.
  
  Caesar Cipher is not a safe method to cipher text. When used with strings it is easy to crack.
  
  The Key property must represent a number. If it does not, the value 13 will be used.

