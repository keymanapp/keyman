##Package: System
##Status: Completed, Incomplete
----------------------------------------------------------------------------------------------------
@@JvTimerList.pas
Summary
    Contains the TJvTimerList component.
Author
  Fedor Koshevnikov
  Igor Pavluk
  Serge Korolev
----------------------------------------------------------------------------------------------------
@@TJvTimerList.OnFinish
Summary
  Occurs when the timer list is deactivated.
Description
  Write an OnFinish event handler to respond when the timer list is deactivated. The timer list is
  deactivated when Active is set to false or when all timers are done executing.
  
  A timer is done executing if its <LINK TJvTimerEvent.Enabled, Enabled> property is set to false or
  property <LINK TJvTimerEvent.Cycled, Cycled> is set to false and the timer has executed <LINK
  TJvTimerEvent.RepeatCount, RepeatCount> times.
See Also
  TJvTimerList.Active

----------------------------------------------------------------------------------------------------
@@TJvTimerList.Events
Summary
  Provides indexed access to the TJvTimerEvent objects maintained by the timer list.
Description
  Use Items to access the properties of the TJvTimerEvent objects maintained by TJvTimerList.
  Note
  At run-time the timer list ensures that this list is sorted based on the Interval property of the
  timer events; thus, direct access to Events is not recommended, better use <LINK
  TJvTimerEvents.ItemByHandle, ItemByHandle> for access to timer events and Add for adding a new
  timer event.
See Also
  TJvTimerList.Add

----------------------------------------------------------------------------------------------------
@@TJvTimerList.Add
Summary
  Creates a new timer and adds it to the list.
Description
  Add creates a timer and assigns the values passed in the AOnTimer, AInterval, and ACycled
  parameters to the TJvTimerEvent properties of the same names. Finally the timer is added to the
  timer list.
Parameters
  AOnTimer  - A TNotifyEvent procedure that will be called when the timer executes.
  AInterval - The interval in milliseconds between two executions for the added timer.
  ACycled   - Indicates whether the timer executes indefinitely or a specific number of times.
Return value
  \Returns the <LINK TJvTimerEvent.Handle, handle> of the added timer. This is not a windows handle.
  You can not use it in calls to windows API's. It is just a number that identifies a timer uniquely
  in a timer list.
See Also
  TJvTimerEvents.Add

----------------------------------------------------------------------------------------------------
@@TJvTimerList.Active
Summary
  Specifies whether the timer list is active.
Description
  Read Active to determine whether the timer list active. If Active is true, then the time list has
  created an internal timer used for all timer event objects. If Active is false, then all timers are
  paused.
  
  You don't have to change Active. This is done automatically when you change the <LINK
  TJvTimerEvent.Enabled, Enabled> property of a timer;
  
  * Setting an <LINK TJvTimerEvent.Enabled, Enabled> property of a TJvTimerEvent object to true,  
  automatically activates the timer list (i.e., set Active to true) * When all <LINK
  TJvTimerEvent.Enabled, Enabled> properties of the timers in a timer list are set to   false, the
  timer is automatically deactivated.
  
  But you can change the active state of the timers explicitly: Set Active to false to pause all
  timers. Set Active to true to resume the timers whose <LINK TJvTimerEvent.Enabled, Enabled>
  property are set to true. Changing Active will not change any <LINK TJvTimerEvent.Enabled, Enabled>
  property of the timer events.
See Also
  TJvTimerEvents.Activate, TJvTimerEvents.Deactivate

----------------------------------------------------------------------------------------------------
@@TJvTimerList
<TITLEIMG TJvTimerList>
#JVCLInfo
<GROUP JVCL.System.AlarmsAndTimers.Timers>
<FLAG Component>
Summary
  Maintains a list of timers.
Description
  The TJvTimerList maintains a list of TJvTimerEvent objects, that each provide all the properties of
  the standard TTimer component. By using a TJvTimerList to maintain timers you have the additional
  benefit of using only 1 windows timer for up to 32767 timing events. The practical maximum number
  of timing events depends on how long it takes your application to handle each timer execution.
  
  Windows (system) timers are a scarce system resource. Using more system timers than necessary can
  impact performance. If a (system) timer is not available when a program needs one, it can either
  terminate gracefully or it can terminate in a manner that leaves Windows in an unstable state. You
  can reduce the chances of running out of timers by using a TJvTimerList rather than multiple timers.
  
  TJvTimerList uses the concept of a timer events to perform the same function as the TTimer's OnTimer event. After adding a TJvTimerList compone
  t to your form, use the component editor to create events at design-time, or call Add method at
  run-time to create timer events dynamically. \Events can repeat until they are canceled or they can
  be fired only a specific number of times and then be automatically removed (accordingly Cycled
  property value).
See Also
  TJvTimerEvent

----------------------------------------------------------------------------------------------------
@@TJvTimerEvents.Items
Summary
  Provides indexed access to the TJvTimerEvent objects in the collection.
Description
  Use Items to access the properties of the TJvTimerEvent objects maintained by TJvTimerEvents.
  
  Items is the default property of TJvTimerEvents, so the name of the Items property can be left off
  when using this property. Thus the line
  
  <CODE>
  FirstTimer := TJvTimerList1.Events.Items[0]; </CODE>
  
  can be written
  <CODE>
  FirstTimer := TJvTimerList1.Events[0]; </CODE>
See Also
  TJvTimerList.Events

----------------------------------------------------------------------------------------------------
@@TJvTimerEvents.ItemByName
Summary
  Write here a summary (1 line)
Description
  Write here a description
Parameters
  AName - Description for this parameter
Return value
  Describe here what the function returns
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvTimerEvents.ItemIndexByHandle
Summary
  \Returns the index of the TJvTimerEvent object with a specified handle.
Description
  Call ItemIndexByHandle to obtain the index of a TJvTimerEvent object with handle AHandle in the
  Events property array.
Parameters
  AHandle - Specifies the value of the timer event's Handle property.
Return value
  \Returns the index in the list of a timer event with the specified handle. If there is no such
  timer event, ItemIndexByHandle returns -1.
See Also
  TJvTimerEvents.ItemByHandle

----------------------------------------------------------------------------------------------------
@@TJvTimerEvents.ItemByHandle
Summary
  \Returns the TJvTimerEvent object with a specified handle.
Description
  Call ItemByHandle to obtain information about a particular timer event.
  Note
  Use this method to access a specific timer event object instead of directly accessing property
  Events.
Parameters
  AHandle - Specifies the value of the timer event's Handle property.
Return value
  \Returns the TJvTimerEvent component with AHandle as handle in the list, if there is no timer event
  in the list with the specified handle, it returns nil.
See Also
  TJvTimerEvents.ItemIndexByHandle

----------------------------------------------------------------------------------------------------
@@TJvTimerEvents.EnabledCount
Summary
  \Returns the number of enabled timers maintained by the timer list.
Description
  EnabledCount contains the number of enabled timers in the Events array. Use Count to retrieve the
  number of <I>all</I> timers.
See Also
  <DELPHILINK TCollection.Count>

----------------------------------------------------------------------------------------------------
@@TJvTimerEvents.IndexOfName
Summary
  Write here a summary (1 line)
Description
  Write here a description
Parameters
  AName - Description for this parameter
Return value
  Describe here what the function returns
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvTimerEvents.DeleteByHandle
Summary
  Deletes the timer event with the specified handle.
Description
  Use DeleteByHandle to delete a timer event and remove it from the Events list.
Parameters
  AHandle - Specifies the value of the timer event's Handle property.
See Also
  TJvTimerEvents.ItemByHandle

----------------------------------------------------------------------------------------------------
@@TJvTimerEvents.Deactivate
Summary
  Pauses all enabled timers.
Description
  Call Deactivate to deactivate the timer list. Deactivate sets the Active property to false. It will
  pause all enabled timer.
See Also
  TJvTimerEvents.Activate, TJvTimerList.Active

----------------------------------------------------------------------------------------------------
@@TJvTimerEvents.Activate
Summary
  Activates the timer list.
Description
  Call Activate to activate the timer list. Activate sets the Active property to true. Calling
  Activate will resume the timers whose <LINK TJvTimerEvent.Enabled, Enabled> property are set to
  true.
See Also
  TJvTimerEvents.Deactivate, TJvTimerList.Active

----------------------------------------------------------------------------------------------------
@@TJvTimerEvents.Add
Summary
  \Creates a new TJvTimerEvent object and adds it to the end of the Items property array.
Description
  Call Add to add a new timer to the timer list. Use Add when adding a timer whose properties will be
  set at a later time. If the values of the TJvTimerEvent properties are known at the time of
  creation, use the <LINK TJvTimerList.Add, Add> method of the TJvTimerList object instead.
Return value
  Returns the newly created TJvTimerEvent object
See Also
  TJvTimerList.Add

----------------------------------------------------------------------------------------------------
@@TJvTimerEvents
Summary
  Container for TJvTimerEvent objects.
Description
  TJvTimerEvents is a collection of TJvTimerEvent objects, each of which represents a single timer
  for a timer list (TJvTimerList instance). TJvTimerEvents objects are the implementation of the <LINK
  TJvTimerList.Events, Events> property of TJvTimerList.

----------------------------------------------------------------------------------------------------
@@TJvTimerEvent.TimerList
Summary
  Identifies the timer list that maintains this timer.
Description
  \Check the value of the TimerList property to determine the timer list component that is associated
  with the TJvTimerEvent object.
  
  Use the properties of the timer list component to obtain additional information.

----------------------------------------------------------------------------------------------------
@@TJvTimerEvent.RepeatCount
Summary
  Specifies the number of times the execution of the timer occurs.
Description
  Use the RepeatCount property to specify the number of times the execution of the timer occurs, when
  the Enabled property is set to true. The executions have an interval specified by the Interval
  property. On each execution the OnTimer event is fired.
  
  Changing property RepeatCount to a value less than ExecCount sets Enabled to false.
  Note
  Set Cycled to false, otherwise the value of RepeatCount is ignored.
See Also
  TJvTimerEvent.Cycled, TJvTimerEvent.Interval, TJvTimerEvent.OnTimer

----------------------------------------------------------------------------------------------------
@@TJvTimerEvent.Name
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvTimerEvent.OnTimer
Summary
  Occurs when a specified amount of time, determined by the Interval property, has passed.
Description
  Write an OnTimer event handler to execute an action at regular intervals.
  
  The Interval property of a timer determines how frequently the OnTimer event occurs. Each time the
  specified interval passes, the OnTimer event occurs.
  
  You can also write an <LINK TJvTimerList.OnTimers, OnTimers> event handler to handle the execution
  of all timers in one procedure.
See Also
  TJvTimerEvent.AsSeconds, TJvTimerEvent.Interval, TJvTimerList.OnTimers

----------------------------------------------------------------------------------------------------
@@TJvTimerEvent.Interval
Summary
  Determines the amount of time, in milliseconds, that passes before the timer component initiates
  another OnTimer event.
Description
  Interval determines how frequently the OnTimer event occurs. Each time the specified interval
  passes, the OnTimer event occurs.
  
  Use Interval to specify any cardinal value as the interval between OnTimer events. The default
  value is 1000 (one second).
  Note
  A 0 value is valid, however the timer will not call an OnTimer event for a value of 0.
See Also
  TJvTimerEvent.AsSeconds

----------------------------------------------------------------------------------------------------
@@TJvTimerEvent.Handle
Summary
  Contains a number that uniquely identifies each timer in a timer list.
Description
  Use this property to reference the timer when calling for example <LINK TJvTimerEvents.ItemByHandle,
  ItemByHandle>.
  Note
  Handle is <I>not</I> a windows handle. You can not use it in calls to windows API's. It is just a
  number that identifies a timer uniquely in a timer list.
See Also
  TJvTimerEvents.DeleteByHandle, TJvTimerEvents.ItemByHandle, TJvTimerEvents.ItemIndexByHandle

----------------------------------------------------------------------------------------------------
@@TJvTimerEvent.ExecCount
Summary
  \Returns the number of times the timer has fired an OnTimer event.
Description
  ExecCount contains the number of times the timer has fired an OnTimer event. ExecCount is reset to
  0, when Enabled is changed to true.
See Also
  TJvTimerEvent.Enabled, TJvTimerEvent.OnTimer

----------------------------------------------------------------------------------------------------
@@TJvTimerEvent.Enabled
Summary
  \Controls whether the timer generates OnTimer events periodically.
Description
  Use Enabled to enable or disable the timer. If Enabled is true, the timer responds normally. If
  Enabled is false, the timer does not generate OnTimer events. The default is true.
  Note
  When you set Enabled to true, the timer list is automatically activated; thus, its <LINK
  TJvTimerList.Active, Active> property is set to true.
See Also
  TJvTimerEvent.OnTimer

----------------------------------------------------------------------------------------------------
@@TJvTimerEvent.Cycled
Summary
  Specifies whether the timer executes indefinitely or a specific number of times.
Description
  Set Cycled to true to specify that the timer should execute indefinitely. Set Cycled to false to
  specify that the timer should execute a number of times specified by the RepeatCount property.
  
  You can change Cycled when the timer is enabled. After setting Cycled to false when the timer is
  enabled, the timer will execute minimal once.
See Also
  TJvTimerEvent.Enabled, TJvTimerEvent.ExecCount, TJvTimerEvent.RepeatCount

----------------------------------------------------------------------------------------------------
@@TJvTimerEvent.AsSeconds
Summary
  Determines the amount of time, in seconds, that passes before the timer component initiates another
  OnTimer event.
Description
  AsSeconds determines how frequently the OnTimer event occurs. Each time the specified interval
  passes, the OnTimer event occurs.
  
  Use AsSeconds to specify any cardinal value as the interval between OnTimer events. The default
  value is 1 (one second).
  Note
  Reading AsSeconds returns the truncated actual interval - that is set in milliseconds. For example
  if you set Interval to 999, AsSeconds returns 0.
See Also
  TJvTimerEvent.Interval

----------------------------------------------------------------------------------------------------
@@TAllTimersEvent
<TITLE TAllTimersEvent type> <COMBINE TJvTimerList.OnTimers>

----------------------------------------------------------------------------------------------------
@@TJvTimerEvent
Summary
  Represents a timer in a timer list.
Description
  TJvTimerEvent represents a timer in a timer list. It has the same properties as a TTimer component:
  Enabled, Interval and OnTimer.
  
  Additionally, you can specify whether the timer should execute indefinitely or a specific number of
  times. Use the Cycled and RepeatCount properties for this task.
  
  A TJvTimerEvent object can be identified by its Handle or Name property. Handle is not a windows
  handle. You can not use it in calls to windows API's. It is just a number that identifies a timer
  uniquely in a timer list.
See Also
  TJvTimerList

----------------------------------------------------------------------------------------------------
@@TJvTimerList.OnTimers
Summary
  Occurs for each timer that executes.
Description
  Write an OnTimers event handler to handle the execution of all timers in 1 procedure; thus, you
  don't have to write a specific event handle for each timer in the list.
  
  The OnTimers event is fired each time a timer's interval is reached.
Parameters
  Sender - The timer list that maintains the timer that has fired.
  Handle - Identifies the timer that has fired in the list.
See Also
  TJvTimerEvent.Handle, TJvTimerEvent.OnTimer

----------------------------------------------------------------------------------------------------
@@TJvTimerList.Sorted
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

