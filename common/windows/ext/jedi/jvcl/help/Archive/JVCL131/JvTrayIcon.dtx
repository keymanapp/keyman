----------------------------------------------------------------------------------------------------
@@$TJvTrayIcon
<TITLE TJvTrayIcon overview>
<GROUP JVCL.Miscel>
  Use TJvTrayIcon to add a icon to the taskbar notification area. Applications commonly put icons in 
  the status area of the taskbar - also called "tray" - to serve as status indicators. For example, 
  an application might put a printer icon in the status area to show that a print job is under way. 
  The status area is located at the right edge of the taskbar (if the taskbar is horizontal) or at 
  the bottom (if the taskbar is vertical). 
  
  You can provide additional information when the user performs mouse actions, such as moving the 
  mouse pointer over the icon or clicking the icon. Use the OnClick, OnDblClick, OnMouseDown, OnMouseMove 
  and OnMouseMove events for this purpose.

  Typically, clicking the icon causes the application to display a window with additional information,
  right-clicking displays a shortcut menu, and double-clicking executes the default shortcut menu command.
  Use DropDownMenu or PopupMenu to display a shortcut menu, when the user clicks the icon.
  
  Use the Animated, Delay and Icons properties to set up an animation in the tray. When Animated is 
  set to True, TJvTrayIcon will start iterating through the image list specified by Icons and display
  each icon for Delay milliseconds in the notification area. Set Animated to False to stop the animation.
  
  Call BalloonHint to display a cartoon-style "balloon" with a stem pointing to the icon in the
  taskbar notification area. Not all systems support balloon ToolTips; check AcceptBalloons to determine
  if balloon ToolTips are supported. Use the OnBalloonClick, OnBalloonHide and OnBalloonShow to react
  on user events.
----------------------------------------------------------------------------------------------------
@@JvTrayIcon.pas
Summary
  Contains the TJvTrayIcon component.
<INCLUDE JVCL.UnitText.dtx>
Author
  Sébastien Buysse
----------------------------------------------------------------------------------------------------
@@TBalloonType
Summary
  TBalloonType defines values describing the type of a balloon ToolTip. 
Description
  The TBalloonType type defines the values describing the type of a balloon ToolTip. TBalloonType can 
  have any of the following values:
  
@@TBalloonType.btNone
  A balloon Tooltip containing no icon.
@@TBalloonType.btError
  A balloon ToolTip containing a red stop sign.
@@TBalloonType.btInfo
  A balloon ToolTip containing a blue "i".
@@TBalloonType.btWarning
  A balloon ToolTip containing a yellow exclamation point symbol.
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon
<GROUP TJvTrayIcon>
Summary
  Adds an icon to the tray.
Description
  Use TJvTrayIcon to add an icon to the taskbar notification area. Applications commonly put icons in 
  the status area of the taskbar - also called "tray" - to serve as status indicators. For example, 
  an application might put a printer icon in the status area to show that a print job is under way. 
  The status area is located at the right edge of the taskbar (if the taskbar is horizontal) or at 
  the bottom (if the taskbar is vertical). 
  
  You can provide additional information when the user performs mouse actions, such as moving the 
  mouse pointer over the icon or clicking the icon. Use the OnClick, OnDblClick, OnMouseDown, OnMouseMove 
  and OnMouseMove events for this purpose.

  Typically, clicking the icon causes the application to display a window with additional information,
  right-clicking displays a shortcut menu, and double-clicking executes the default shortcut menu command.
  Use DropDownMenu or PopupMenu to display a shortcut menu, when the user clicks the icon.
  
  Use the Animated, Delay and Icons properties to set up an animation in the tray. When Animated is 
  set to True, TJvTrayIcon will start iterating through the image list specified by Icons and display
  each icon for Delay milliseconds in the notification area. Set Animated to False to stop the animation.
  
  Call BalloonHint to display a cartoon-style "balloon" with a stem pointing to the icon in the
  taskbar notification area. Not all systems support balloon ToolTips; check AcceptBalloons to determine
  if balloon ToolTips are supported. Use the OnBalloonClick, OnBalloonHide and OnBalloonShow to react
  on user events.
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Create
Summary
  Creates and initializes a new TJvTrayIcon object.
Description
  Use Create to create and initialize a new TJvTrayIcon object.
  
  Create calls the inherited Create method, then sets the initial values for the component as follows: 
  
  * Icon is set to Application.Icon.
  * Animated is set to False.
  * Delay is set to 100.
  * Active is set to False.
  * VisibleInTaskList is set to True.
Parameters
  AOwner - A component, typically the form, that is responsible for freeing the component.
See Also
  Active, Animated, Delay, Icon, VisibleInTaskList
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Destroy
Summary
  Destroys an instance of TJvTrayIcon
Description
  Do not call Destroy directly in an application. Instead, call Free. Free verifies that the 
  TJvTrayIcon object is not nil and only then calls Destroy.
Parameters
  None.
See Also
  Create
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.AcceptBalloons
Summary
  Indicates whether this system supports balloon ToolTips.
Description
  Balloon ToolTips are only supported for Shell32.dll versions 5.0 and later. AcceptBalloons returns
  True if the Shell32.dll on this system is version 5.0 or later. AcceptBalloons returns False if the
  Shell32.dll is a pre-5.0 version.
See Also
  BalloonHint
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Active
Summary
  Specifies whether the tray icon is shown.
Description
  Examine Active at runtime to determine if it an icon is shown in the taskbar notification area or 
  not. Active is False by default, meaning there is no notification icon shown in the taskbar 
  notification area. 

  Setting Active to True adds the icon specified by Icon to the tray at runtime. If Animated is also
  set to True, TJvTrayIcon uses the images in the image list specified by Icons to periodically change
  the notification icon. Property Delay specifies the amount of time between icon changes.

  Setting Active to False (the default), removes the notification icon from the taskbar notification
  area.
See Also
  Animated, Delay, Icon, Icons
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Animated
Summary
  Indicates whether the icon is animated.
Description
  Set Animated to True to let TJvTrayIcon iterate through the icons in the image list specified by
  Icons and display each icon in that list - one at a time - in the notification area. Property 
  Delay specifies the amount of time each icon is shown in the tray.
  Set Animated to False to stop the animation.
  
  You must also set Active to True to activate the animation.
See Also
  Active, Delay, Icons
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.ApplicationVisible
Summary
  Determines whether the application's taskbar button is visible.
Description
  Use the ApplicationVisible property to control the visibility of the application's taskbar. If 
  ApplicationVisible is True, the button appears on the taskbar. If ApplicationVisible is False, the 
  button is not visible.

  Calling the ShowApplication method sets the ApplicationVisible property to True. Calling the 
  HideApplication method sets it to False.
See Also
  HideApplication, ShowApplication, VisibleInTaskList
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.BalloonHint
Summary
  Displays a balloon ToolTip.
Description
  Call BalloonHint to display a cartoon-style "balloon" with a stem pointing to the icon in the
  taskbar notification area. Call AcceptBalloons to determine if the system supports balloon ToolTips. 

  No more than one balloon ToolTip at a time is displayed for the taskbar. If an application attempts
  to display a ToolTip when one is already being displayed, the ToolTip will not appear until the 
  existing balloon ToolTip has been visible for at least the system minimum timeout value. For example,
  a balloon ToolTip with \Delay set to 30 seconds has been visible for seven seconds when another
  application attempts to display a balloon ToolTip. If the system minimum timeout is ten seconds,
  the first ToolTip displays for an additional three seconds before being replaced by the second ToolTip.

  The ToolTip will disappear when clicked, but you can also specify a time-out value. Use the 
  OnBalloonClick, OnBalloonHide and OnBalloonShow events to take specific actions when the balloon
  ToolTip is clicked, disappeared or is shown, respectively.
Parameters
  Title       - Contains a title for the balloon ToolTip. This title appears in boldface above the
                text. It can have a maximum of 63 characters. 
  Value       - Contains the text for the balloon ToolTip. It can have a maximum of 255 characters.
                The text can be either single-line or multiline.
  BalloonType - Flags that can be set to add an icon to the balloon ToolTip. It is placed to the left
                of the title. If Title is an empty string, the icon is not shown. 
  Delay       - The timeout value, in milliseconds, for a balloon ToolTip. The system enforces minimum 
                and maximum timeout values. \Delay values that are too large are set to the maximum
                value and values that are too small default to the minimum value. The system minimum
                and maximum timeout values are currently set at 10 seconds and 30 seconds, respectively.
See Also
  AcceptBalloons, OnBalloonClick, OnBalloonHide, OnBalloonShow
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Delay
Summary
  Determines the amount of time, in milliseconds, between two refreshes of the tray icon.
Description
  Delay determines how frequently a refresh of the tray icon occurs. If Active and Animated are set
  to True, TJvTrayIcon will iterate through the icons in the image list specified by property Icons.
  Each time the specified time passes, TJvTrayIcon changes the tray icon to the next icon in the image
  list.

  Use Delay to specify any cardinal value as the interval between refresh events. The default value 
  is 100 (1/10 second).
See Also
  Active, Animated, Icons
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.DoCheckCrash
Summary
  Checks whether the taskbar notification area has been recreated.
Description
  Call DoCheckCrash to check whether the taskbar notification area has been recreated. If so, and Active
  is set to True, DoCheckCrash re-adds the icon to the tray.
See Also
  Active
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.DropDownMenu
Summary
  Identifies a pop-up menu associated with the tray icon.
Description
  Assign a value to DropdownMenu to make a menu appear when the left button is pressed when the mouse
  is over the icon in the taskbar notification area.
See Also
  OnClick, PopupMenu
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.HideApplication
Summary
  Hides the application button on the taskbar.
Description
  Call HideApplication to hide the application button on the taskbar. Call ShowApplication to show
  the button.
Parameters
  None.
See Also
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Hint
Summary
  Contains the text string that can appear when the user moves the mouse over the tray icon.
Description
  Use the Hint property to provide a string as the standard ToolTip for the tray icon. Hint can have 
  a maximum of 64 characters. For version 5.0 and later, Hint can have a maximum of 128 characters.
See Also
  AcceptBalloons, BalloonHint
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Icon
Summary
  Determines which icon represents the application on the Windows taskbar notification area.
Description
  Use Icon to assign a specific icon to represent the application. TJvTrayIcon displays Icon on
  the Windows task bar notification area, when Active is set to True.

  To avoid icon distortion, be aware that notification area icons have different levels of support
  under different versions of Windows. Windows 95, Windows 98, and Microsoft Windows NT 4.0 support
  icons of up to 4 bits per pixel (BPP). Windows Millennium Edition (Windows Me) and Windows 2000
  support icons of a color depth up to the current display mode. Windows XP supports icons of up
  to 32 BPP.
  
  If no icon is specified, TJvTrayIcon uses the application's icon, specified by Application.Icon.
See Also
  Active
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Icons
Summary
  Specifies the icons that are used for the animation.
Description
  Use Icons to supply a list of icons that are used for the animation in the task bar notification
  area. When Active and Animated are set to True, TJvTrayIcon will iterate through the icons in the
  image list specified by Icons and display each icon in that list for Delay milliseconds in the 
  notification area.
See Also
  Active, Animated, Delay
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnBalloonClick
Summary
  Occurs when the balloon is dismissed because the user clicked the mouse.
Description
  Use the OnBalloonClick event handler to respond when the user clicks on the balloon ToolTip.
See Also
  OnBalloonHide, OnBalloonShow
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnBalloonHide
Summary
  Occurs when the balloon disappears
Description
  Use the OnBalloonClick event handler to respond when the balloon ToolTip disappears; when the icon
  is deleted, for example. This message is not sent if the balloon is dismissed because of a timeout
  or mouse click by the user. 
See Also
  OnBalloonClick, OnBalloonShow
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnBalloonShow
Summary
  Occurs when the balloon is shown.
Description
  Use the OnBalloonShow event handler to respond when a balloon ToolTip is shown.
See Also
  OnBalloonClick, OnBalloonHide
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnClick
Summary
  Occurs when the user clicks the tray icon.
Description
  Use the OnClick event handler to respond when the user clicks on the icon that represents the 
  application on the Windows taskbar notification area.

  Typically, clicking a tray icon causes the application to display a window with additional information;
  right-clicking displays a shortcut menu.
See Also
  OnDblClick, OnMouseDown, OnMouseUp
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnDblClick
Summary
  Occurs when the user double-clicks a mouse button when the mouse pointer is over the tray icon.
Description
  Use the OnDblClick event to respond to mouse double-clicks.

  Typically, double-clicking a tray icon causes the application to executes the default shortcut menu
  command.
See Also
  OnClick, OnMouseDown, OnMouseUp
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnMouseDown
Summary
  Occurs when the user presses a mouse button with the mouse pointer over the tray icon. 
Description
  Use the OnMouseDown event handler to implement any special processing that should occur as a result
  of pressing a mouse button with the mouse pointer over the icon that represents the application on
  the Windows taskbar notification area.

  The OnMouseDown event handler can respond to left, right, or center mouse button presses and shift
  key plus mouse-button combinations. Shift keys are the Shift, Ctrl, and Alt keys. X and Y are the
  screen coordinates of the mouse pointer.
See Also
  OnClick, OnDblClick, OnMouseUp
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnMouseMove
Summary
  Occurs when the user moves the mouse pointer while the mouse pointer is over the tray icon. 
Description
  the system displays the ToolTip text that was specified in NOTIFYICONDATA.
  
  Use the OnMouseMove event handler to respond when the mouse pointer moves after the control has 
  captured the mouse.

  Use the Shift parameter of the OnMouseDown event handler, to determine to the state of the shift 
  keys and mouse buttons. Shift keys are the Shift, Ctrl, and Alt keys or shift key-mouse button 
  combinations. X and Y are the screen coordinates of the mouse pointer.
See Also
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnMouseUp
Summary
  Occurs when the user releases a mouse button that was pressed with the mouse pointer over the tray
  icon. 
Description
  Use an OnMouseUp event handler to implement special processing when the user releases a mouse button.

  The OnMouseUp event handler can respond to left, right, or center mouse button presses and shift key 
  plus mouse-button combinations. Shift keys are the Shift, Ctrl, and Alt keys. X and Y are the screen 
  coordinates of the mouse pointer.
See Also
  OnClick, OnDblClick, OnMouseDown
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.PopupMenu
Summary
  Identifies the pop-up menu associated with the control.
Description
  Assign a value to PopupMenu to make a pop-up menu appear when the user clicks the tray icon with 
  the right mouse.
See Also
  DropDownMenu, OnClick
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.ShowApplication
Summary
  Shows the application button on the taskbar.
Description
  Call ShowApplication to show the application button on the taskbar. Call HideApplication to hide
  the button.
See Also
  ApplicationVisible, HideApplication 
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.VisibleInTaskList
Summary
  Determines if the application is shown in the task manager.
Description
  Set VisibleInTaskList to True to show the application in the windows task manager application. Set
  VisibleInTaskList to False to remove the application from the task manager; the application prevent
  itself from being closed when the user logs off. The application close only when the system is shut
  down.

  This only applies to Windows 95, 98 and me.
See Also
  ApplicationVisible  
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.WndProc
Summary
  Responds to windows messages sent to the component.
Description
  WndProc responds to messages concerning the tray icon, sent by the system.
Parameters
  Mesg - Represents the Windows message.
----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP
Summary
  Delphi implementation of the windows NOTIFYICONDATA structure.
Description
  This structure contains information that the system needs to process taskbar status area messages.
  See MSDN for more information.

@@TNotifyIconDataXP.cbSize
  Passes the size of the NOTIFYICONDATA data type.
@@TNotifyIconDataXP.Wnd
  Handle of the window used to receive the notification message.
@@TNotifyIconDataXP.uID
  Identifier of the icon in the status area.
@@TNotifyIconDataXP.uFlags
  Array of flags that indicate which of the other members contain valid data.
@@TNotifyIconDataXP.uCallbackMessage
  Identifier of the notification message sent to the window that is used to receive the messages.
@@TNotifyIconDataXP.hIcon
  Handle of the icon that is displayed in the taskbar status area.
@@TNotifyIconDataXP.szTip
  String to be used as the ToolTip text.
@@TNotifyIconDataXP.dwState
  State of the icon.
@@TNotifyIconDataXP.dwStateMask
  Specifies which bits of the state member are retrieved or modified.
@@TNotifyIconDataXP.szInfo
  Contains the text for a balloon ToolTip.
@@TNotifyIconDataXP.uTimeOut
  The timeout value, in milliseconds, for a balloon ToolTip.
@@TNotifyIconDataXP.szInfoTitle
  String to be used as the title for a balloon ToolTip.
@@TNotifyIconDataXP.dwInfoFlags
  Flags that can be set to add an icon to a balloon ToolTip.
----------------------------------------------------------------------------------------------------
@@TRegisterServiceProcess
Summary
  Registers or unregisters a service process. 
Description
  Use TRegisterServiceProcess to register or unregister a service process. A service process continues 
  to run after the user logs off.
  
  This only applies to Windows 95, 98 and me.
Parameters
  dwProcessID - Specifies the identifier of the process to register as a service process. Specifies 0 
                to register the current process. 
  dwType      - Specifies whether the service is to be registered or unregistered. Specifies 0 to 
                unregisters the process as a service process. Specifies 1 to registers the process as 
                a service process.