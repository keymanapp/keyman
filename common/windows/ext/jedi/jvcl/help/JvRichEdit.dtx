##Package: StdCtrls
##Status: Completed (II)
----------------------------------------------------------------------------------------------------
@@JvRichEdit.pas
Summary
    Contains the TJvRichEdit component.
Author
  Fedor Koshevnikov
  Igor Pavluk
  Serge Korolev
----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.SubscriptStyle
Summary
  Determines whether the font is normal, superscript or subscript.
Description
  Use SubscriptStyle to specify whether the font is normal, superscript or subscript. If you specify
  ssSubscript or ssSuperscript for SubscriptStyle, the control automatically calculates a value for
  property Offset and a smaller font size.
  
  Alternatively, you can use the Height and Offset properties to explicitly specify font size and
  Offset for subscript and superscript characters.
See Also
  TJvTextAttributes.Height, TJvTextAttributes.Offset

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Style
Summary
  Determines whether the font is normal, italic, underlined, bold, or strikeout.
Description
  See Delphi help for more info.
See Also
  TJvTextAttributes.Disabled, TJvTextAttributes.Hidden, TJvTextAttributes.Link,
  TJvTextAttributes.Protected

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.StrikeOut
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Size
Summary
  Specifies the height of the font in points.
Description
  See Delphi help for more info.
See Also
  TJvTextAttributes.ConsistentAttributes, TJvTextAttributes.Height

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.RevAuthorIndex
Summary
  Identifies the author making a revision.
Description
  An index that identifies the author making a revision. The rich edit control uses different text
  colors for each different author index.

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Protected
Summary
  Indicates whether the text represented by the TJvTextAttributes object is protected.
Description
  Protected text can’t be changed by the user. When the user attempts to edit a selection that
  includes
  protected text, the rich edit control calls the OnProtectChangeEx event handler. The
  OnProtectChangeEx event handler can then permit or disallow the editing of the protected text. If
  there is no OnProtectChange or OnProtectChangeEx event handler, protected text is read-only.
See Also
  TJvCustomRichEdit.OnProtectChange, TJvCustomRichEdit.OnProtectChangeEx,
  TJvTextAttributes.ConsistentAttributes, TJvTextAttributes.Disabled, TJvTextAttributes.Hidden,
  TJvTextAttributes.Link, TJvTextAttributes.Style

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Pitch
Summary
  Specifies whether the characters in the font all have the same width.
Description
  See Delphi help for more info.
See Also
  TJvTextAttributes.Name

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Name
Summary
  Specifies the typeface of the font described by the TJvTextAttributes object.
Description
  See Delphi help for more info.
See Also
  TJvTextAttributes.Charset, TJvTextAttributes.ConsistentAttributes, TJvTextAttributes.Pitch

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Offset
Summary
  Specifies the character Offset from the baseline, in points.
Description
  Use Offset to specify the character Offset from the baseline in points. If the value of Offset is
  positive, the character is a superscript; if the value is negative, the character is a subscript.
  
  Alternatively, you can use property SubscriptStyle to specify whether the text is made of subscript
  and superscript characters. Note (= is equals; ~ is approximation)
  
  <TABLE>
    1 point = 20 twips. (A twip is a TWenthIeth of a Point) </TABLE>
  
  For printing:
  
  <TABLE>
    72 points = 1 physical inch.
    1440 twips = 1 physical inch.
    1 inch ~ 25,40 mm, thus
    2,83 points ~ 1 mm
    56,7 twips ~ 1 mm </TABLE>
  
  For screen:
  
  <TABLE>
    72 points ~ 1 logical inch.
    1440 twips ~ 1 logical inch.
  </TABLE>
  
  The relation between a logical inch and a physical inch depends on your monitor/video driver.
  Windows typically uses 96 pixels per logical inch for small fonts and 120 pixels per logical inch
  for large fonts. So, if 1 logical inch = 96 pixels, then
  
  <TABLE>
    1 pixel = 1/96 logical inch ~ 1440/96 twips = 15 twips = 3/4 point.
  </TABLE>
See Also
  TJvTextAttributes.SubscriptStyle

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Italic
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Link
Summary
  Indicates whether the text represented by the TJvTextAttributes object is a link.
Description
  Text that represents a link is underlined and colored blue. If the user clicks on the link text an
  OnURLClick event is fired.
  
  If you want to set the Link property for specific text, then AutoURLDetect must be set to false.
  When
  AutoURLDetect is set to true, the rich edit control applies and removes the link property to
  specific text automatically.
  
  Note that the link is not persistent, ie. if you save the text to a (RTF) file the links will not
  be saved.
  
  You could also insert a link by inserting RTF codes. Such a link will also <B>not</B> be saved for
  rich edit dll version 3.0 and below, but it will be saved for rich edit dll version 4.0 and up.
  
  <CODE>
  const
    cHyperlink = '{\rtf1{\field {\*\fldinst {HYPERLINK "%s" }}{\fldrslt {\ul %s }}}}';
  var
    S: string;
    Stream: TStream;
  begin
    S := Format(cHyperLink, ['https://github.com/project-jedi/jvcl', 'JVCL']);
  
    Stream := TMemoryStream.Create;
    try
      Stream.Write(PChar(S)^, Length(S));
      Stream.Position := 0;
  
      JvRichEdit1.StreamFormat := sfRichText;
      JvRichEdit1.StreamMode := [smSelection, smPlainRtf];
      JvRichEdit1.Lines.LoadFromStream(Stream);
      { Don't forget to clear the smSelection flag: normally we want to save
         the whole text, and such a flag is easily forgotten }
      JvRichEdit1.StreamMode := [];
    finally
      Stream.Free;
    end;
  end; </CODE>
See Also
  TJvCustomRichEdit.OnURLClick, TJvTextAttributes.Disabled, TJvTextAttributes.Hidden,
  TJvTextAttributes.Protected, TJvTextAttributes.Style

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Height
Summary
  Specifies the height of the font in pixels.
Description
  See Delphi help for more info.
See Also
  TJvTextAttributes.ConsistentAttributes, TJvTextAttributes.Size

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Hidden
Summary
  Indicates whether the text represented by the TJvTextAttributes object is hidden.
Description
  Hidden text is not displayed.
  Note
  Rich Edit 3.0.
See Also
  TJvTextAttributes.Disabled, TJvTextAttributes.Link, TJvTextAttributes.Protected,
  TJvTextAttributes.Style

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Disabled
Summary
  Indicates whether the text represented by the TJvTextAttributes object is disabled.
Description
  Disabled text is displayed with a shadow that is Offset by 3/4 point or one pixel, whichever is
  larger.
See Also
  TJvTextAttributes.Hidden, TJvTextAttributes.Link, TJvTextAttributes.Protected,
  TJvTextAttributes.Style

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.ConsistentAttributes
Summary
  Indicates which of the properties of the TJvTextAttributes object are consistent throughout the
  text of the current selection in the rich edit object.
Description
  See Delphi help for more info.
See Also
  TJvTextAttributes.BackColor, TJvTextAttributes.Color, TJvTextAttributes.Disabled,
  TJvTextAttributes.Hidden, TJvTextAttributes.Link, TJvTextAttributes.Name,
  TJvTextAttributes.Protected, TJvTextAttributes.Size, TJvTextAttributes.Style

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Charset
Summary
  Specifies the character set of the font.
Description
  See Delphi help for more info.
See Also
  TJvTextAttributes.Name

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Color
Summary
  Indicates the foreground color of the text.
Description
  Use Color to specify the foreground color of the text. Set Color clDefault to set the color to the
  default color: clWindowText.
See Also
  TJvTextAttributes.BackColor, TJvTextAttributes.ConsistentAttributes

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Bold
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.BackColor
Summary
  Indicates the background color of the text.
Description
  Use BackColor to specify the background color of the text. Set BackColor to clDefault to set the
  color to the default color: clWindow.
See Also
  TJvTextAttributes.Color, TJvTextAttributes.ConsistentAttributes

----------------------------------------------------------------------------------------------------
@@TJvTabLeader.tlDouble
Double line leader.

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes
Summary
  Represents the font characteristics of a section of text in a rich edit control.
Description
  TJvTextAttributes is a wrapper for the CHARFORMAT2 structure, that contains information about
  character formatting in a rich edit control. The TJvTextAttributes class is an extension of the
  TTextAttributes class, i.e., it can do the same and more:
  
  \New properties that affects the text represented by the TJvTextAttributes:
  
  <TABLE>
    Property        Description
    --------------  --------------------------------------------------------------------------
    BackColor       Sets the background color of the text.
    Disabled        Enables or disables the text. If the text is disabled, it can't be
                      changed by the user.
    Hidden          Hides the text for the user.
    Link            Indicates whether the text is a link. If the user clicks such link an
                      <LINK TJvCustomRichEdit.OnURLClick, OnURLClick> event is fired.
    Offset          Specifies the character Offset from the baseline, in points.
    RevAuthorIndex  Identifies the author making a revision.
    SubscriptStyle  Changes the text's font to normal, superscript or subscript.
    UnderlineType   Underlines the text.
  </TABLE>
See Also
  TJvRichEdit

----------------------------------------------------------------------------------------------------
@@TJvTabLeader.tlUnderlined
Underlined leader.

----------------------------------------------------------------------------------------------------
@@TJvTabLeader.tlThick
Thick line leader.

----------------------------------------------------------------------------------------------------
@@TJvTabLeader.tlNone
No leader.

----------------------------------------------------------------------------------------------------
@@TJvTabLeader.tlDotted
Dotted leader.

----------------------------------------------------------------------------------------------------
@@TJvTabLeader.tlDashed
Dashed leader.

----------------------------------------------------------------------------------------------------
@@TJvTabAlignment.taDecimal
Decimal tab. (Aligns a decimal point at the tab stop: text or numbers without a decimal point extend to the left of the tab stop)

----------------------------------------------------------------------------------------------------
@@TJvTabAlignment.taVertical
Word bar tab (vertical bar).

----------------------------------------------------------------------------------------------------
@@TJvTabLeader
<TITLE TJvTabLeader type>
Summary
  Enumerates types of tab leaders.
Description
  Use the TJvTabLeader type to specify a specific leader type for a tab stop.
See Also
  TJvParaAttributes.TabLeader

----------------------------------------------------------------------------------------------------
@@TJvTabAlignment.taOrdinary
Ordinary tab.

----------------------------------------------------------------------------------------------------
@@TJvTabAlignment.taCenter
Center tab.

----------------------------------------------------------------------------------------------------
@@TJvTabAlignment.taRight
Right-aligned tab.

----------------------------------------------------------------------------------------------------
@@TJvStreamConversion
Summary
  Base class for stream converters.
Description
  The TJvStreamConversion class implements the Open, Done and Retry methods.

----------------------------------------------------------------------------------------------------
@@TJvStreamConversion.Stream
Summary
  Gives access to the stream used for the import or export operation.
Description
  Descendants of TJvStreamConversion can use this property to access the source or destination file in
  ConvertRead or ConvertWrite procedures.
See Also
  TJvConversion.ConvertRead, TJvConversion.ConvertWrite

----------------------------------------------------------------------------------------------------
@@TJvTabAlignment
<TITLE TJvTabAlignment type>
Summary
  Enumerates types of alignments for tab stops.
Description
  Use the TJvTabAlignment type to specify a specific alignment for a tab stop.
See Also
  TJvParaAttributes.TabAlignment

----------------------------------------------------------------------------------------------------
@@TJvRTFConversion
Summary
  Reads or writes rich text data.
Description
  The TJvRTFConversion is an "empty" converter used to read or write to RTF files. Empty means that
  TJvRTFConversion does not perform any conversion of the rich text data it imports or exports.

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.Alignment
Summary
  Specifies how text is aligned within a paragraph.
Description
  Use Alignment to specify how text is aligned within a paragraph.
  Note
  For paJustify you need RichEdit 3.0 and <LINK TJvCustomRichEdit.AdvancedTypography,
  AdvancedTypography> or <LINK TJvCustomRichEdit.AutoAdvancedTypography, AutoAdvancedTypography> must
  be true.
See Also
  RichEditVersion, TJvCustomRichEdit.AdvancedTypography, TJvParaAttributes.LeftIndent,
  TJvParaAttributes.RightIndent

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.FirstIndent
Summary
  Specifies the indent, in points, of the first line of the paragraph relative to the left margin.
Description
  See Delphi help for more info.
See Also
  TJvParaAttributes.LeftIndent, TJvParaAttributes.RightIndent

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.HeadingStyle
Summary
  Specifies a built-in character and paragraph style for the paragraph.
Description
  Use HeadingStyle to apply a built-in style for the paragraph text:
  
  <TABLE>
  Value  Meaning
  -----  ---------------
  0      Normal style
  1      Heading 1 style
  2      Heading 2 style
  3      Heading 3 style
  4      Heading 4 style
  5      Heading 5 style
  6      Heading 6 style
  7      Heading 7 style
  8      Heading 8 style 9      Heading 9 style </TABLE>

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.IndentationStyle
Summary
  Specifies the indentation style for the paragraph.
Description
  Use IndentationStyle to specify the indentation style.
See Also
  TJvParaAttributes.FirstIndent, TJvParaAttributes.LeftIndent

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.LeftIndent
Summary
  Specifies the indent, in points, of the paragraph relative to the left margin.
Description
  See Delphi help for more info.
See Also
  TJvParaAttributes.FirstIndent, TJvParaAttributes.RightIndent

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.LineSpacing
Summary
  Specifies the spacing between lines.
Description
  Use LineSpacing to specify the spacing between lines. The meaning of LineSpacing depends on the
  value of LineSpacingRule:
  
  <TABLE 30c%,70c%>   \LineSpacingRule   LineSpacing
    -----------------  -----------------------------------------------------------------------
    lsSpecifiedOrMore  Specifies the spacing from one line to the next, in points; however,
                         if LineSpacing specifies a value that is less than single spacing,
                         the control displays single-spaced text.
    lsSpecified        Specifies the spacing from one line to the next, in points. The
                         control uses the exact spacing specified, even if LineSpacing
                         specifies a value that is less than single spacing.
    lsMultiple         Specifies the spacing, in lines, from one line to the next; thus,
                         setting LineSpacing to 1 produces single-spaced text, 2 is double
                         spaced, 3 is triple spaced, and so on.
    Other              Value of LineSpacing is ignored.
  </TABLE>
See Also
  TJvParaAttributes.LineSpacingRule

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.LineSpacingRule
Summary
  Specifies the type of line spacing.
Description
  Use LineSpacingRule to specify the type of line spacing. LineSpacingRule determines the meaning of
  property LineSpacing, if its value is used, whether the value specified by LineSpacing is in
  points, or in lines etc.
See Also
  TJvParaAttributes.LineSpacing

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.Numbering
Summary
  Specifies whether the paragraph is one of a set of bulleted or numbered paragraphs.
Description
  Use Numbering to specify whether the paragraph is one of a set of bulleted or numbered paragraphs.
  Use property NumberingStyle to specify the numbering style for the paragraph.
  Note
  You can use the number hot key (Ctrl-L, capital L) to cycle through numbering options available,
  starting with bullet.
See Also
  TJvParaAttributes.NumberingStyle, TJvParaAttributes.NumberingTab

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.NumberingStart
Summary
  Specifies the starting number for numbered paragraphs.
Description
  Use NumberingStart to specify the starting number used for numbered paragraphs. Use NumberingStart
  in conjunction with property Numbering.
See Also
  TJvParaAttributes.Numbering

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.NumberingStyle
Summary
  Specifies the numbering style used with numbered paragraphs.
Description
  Use NumberingStyle to specify the numbering style used with numbered paragraphs. Use this property
  in conjunction with the Numbering property.
  Note
  Rich Edit 3.0
See Also
  TJvParaAttributes.Numbering, TJvParaAttributes.NumberingTab

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.NumberingTab
Summary
  Specifies the minimum space, in points, between a paragraph number and the paragraph text.
Description
  Use NumberingTab to specify the minimum space, in points, between a paragraph number and the
  paragraph text. Use this property in conjunction with the Numbering property.
  Note
  Rich Edit 3.0.
See Also
  TJvParaAttributes.Numbering, TJvParaAttributes.NumberingStyle

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.RightIndent
Summary
  Specifies the indent, in points, of the paragraph relative to the right margin.
Description
  See Delphi help for more info.
See Also
  TJvParaAttributes.FirstIndent, TJvParaAttributes.LeftIndent

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.SpaceAfter
Summary
  Specifies the size of the spacing below the paragraph.
Description
  Use SpaceAfter to specify the size of the spacing below the paragraph in points. The value must be
  greater than or equal to zero.
See Also
  TJvParaAttributes.SpaceBefore

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.SpaceBefore
Summary
  Specifies the size of the spacing above the paragraph.
Description
  Use SpaceBefore to specify the size of the spacing above the paragraph in points. The value must be
  greater than or equal to zero.
See Also
  TJvParaAttributes.SpaceAfter

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.Tab
Summary
  Specifies the position, in points, of a particular tab stop.
Description
  See Delphi help for more info.
See Also
  TJvParaAttributes.TabAlignment, TJvParaAttributes.TabCount, TJvParaAttributes.TabLeader

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.TabAlignment
Summary
  Specifies the alignment of a particular tab stop.
Description
  Use TabAlignment to specify the alignment of a particular tab stop.
  Note
  RichEdit 3.0 and <LINK TJvCustomRichEdit.AdvancedTypography, AdvancedTypography> or <LINK
  TJvCustomRichEdit.AutoAdvancedTypography, AutoAdvancedTypography> needs to be true.
Parameters
  Index - The index of the tab, where 0 is the first tab.
See Also
  RichEditVersion, TJvCustomRichEdit.AdvancedTypography, TJvParaAttributes.Tab,
  TJvParaAttributes.TabCount, TJvParaAttributes.TabLeader

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.TabCount
Summary
  Indicates the number of tab stops that are defined for the paragraph.
Description
  See Delphi help for more info.
See Also
  TJvParaAttributes.Tab

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.TabLeader
Summary
  Specifies the type of leader of a particular tab stop.
Description
  Use TabLeader to specify the type of leader of a particular tab stop.
  Note
  RichEdit 3.0 and <LINK TJvCustomRichEdit.AdvancedTypography, AdvancedTypography> or <LINK
  TJvCustomRichEdit.AutoAdvancedTypography, AutoAdvancedTypography> needs to be true.
Parameters
  Index - The index of the tab, where 0 is the first tab.
See Also
  RichEditVersion, TJvCustomRichEdit.AdvancedTypography, TJvParaAttributes.Tab,
  TJvParaAttributes.TabAlignment, TJvParaAttributes.TabCount

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes.TableStyle
Summary
  Does nothing.
Description
  Write here a description

----------------------------------------------------------------------------------------------------
@@TJvRichEdit
<TITLEIMG TJvRichEdit>
#JVCLInfo
<GROUP JVCL.CommCtrl,JVCL.EditsMemosAndCombos.Other>
<FLAG Component>
Summary
  Wrapper for the v2.0 or v3.0 Windows rich text edit control.
Description
  A rich edit control is a window in which the user can enter, edit, format, print, and save text.
  The text can be assigned character and paragraph formatting, and can include embedded Component
  Object
  Model (COM) objects. Rich edit controls support almost all of the messages and notification
  messages used with multiline edit controls.
  
  <B>Rich Edit Version 2.0</B>
  
  Rich Edit 2.0 includes the following features in addition to the features provided by Rich Edit
  version 1.0.
  <TABLE 30c%,70c%>
  Feature                                   Description ---------------------------------------- 
  ------------------------------------------------
  Find Up/Find Down support                 Searching forward and backward is supported,             
                                 see function <LINK
                                              TJvCustomRichEdit.FindText, FindText> and the
                                              TRichSearchTypes type.
  Bidirectional support                     This is included in Rich Edit 2.1
  Multilevel undo                           An extensible Undo architecture allows client            
                                  to participate in application-wide Undo
                                              model. See Undo, CanUndo etc.
  Automatic URL recognition                 Can check for a number of URL formats (For               
                               example, http:), see property <LINK
                                              TJvCustomRichEdit.AutoURLDetect,
                                              AutoURLDetect>
  Plain-text as well as rich-text           Single-character format and single-paragraph  
  functionality                             format.
  Windowless operation and interfaces       This is provided through the ITextHost and
                                              ITextServices interfaces. (TODO)
  COM dual interfaces                       Text Object Model (TOM) interfaces. (TODO)
  CHARFORMAT2                               Added font weight, background color, locale              
                                identifier, underline type, superscript and
                                              subscript (in addition to Offset), disabled
                                              effect. For RTF roundtripping only, added
                                              amount to space between letters, twip size
                                              above which to kern character pair,
                                              animated-text type, various effects: font
                                              shadow/outline, all caps, small caps, hidden,
                                              embossed, imprint, and revised. See
                                              TJvTextAttributes.
  PARAFORMAT2                               Added space before and after and Word line               
                               spacing. For RTF roundtripping only, added
                                              shading weight/style, numbering
                                              start/style/tab, border space/width/sides,
                                              tab alignment/leaders, various Word paragraph
                                              effects: RTL paragraph, keep, keep-next,
                                              page-break-before, no-line-number,
                                              no-window-control, do-not-hyphenate,
                                              side-by-side, see TJvParaAttributes.
  </TABLE>
  
  With a few exceptions, Rich Edit 2.0 uses the same functions, structures, and properties as Rich
  Edit 1.0 (supported by the standard TRichEdit control). But note the following differences: <TABLE
  30c%,70c%>
  Property                                   Description ----------------------------------------- 
  ----------------------------------------------- <LINK TJvCustomRichEdit.AutoURLDetect,     Enables
  or disables automatic URL detection.
    AutoURLDetect> <LINK TJvCustomRichEdit.CanRedo, CanRedo>  Determines whether there are any
  actions in                                              the \redo queue.
  <LINK TJvCustomRichEdit.LangOptions,       Retrieves or sets options for IME and Asian
    LangOptions>                               language support.
  <LINK TJvCustomRichEdit.RedoName,          Retrieves the type name of the next action in
    RedoName>                                  the \redo queue.
  <LINK TJvCustomRichEdit.UndoName,          Retrieves the type name of the next action in
    UndoName>                                  the undo queue.
  <LINK TJvCustomRichEdit.Redo, Redo>        Redoes the next action in the \redo queue.
  <LINK TJvCustomRichEdit.UndoLimit,         Sets the maximum number of actions in the undo
    UndoLimit>                                 queue.
  <LINK TJvCustomRichEdit.StopGroupTyping,   Stops grouping consecutive typing actions into
    StopGroupTyping>                           the current undo action.
  </TABLE>
  
  <TABLE 30c%,70c%>
  Class              Description ----------------- 
  -----------------------------------------------------------------------
  TJvTextAttributes  Wrapper for CHARFORMAT2, contains information about character                   
    formatting.
  TJvParaAttributes  Wrapper for PARAFORMAT2, contains information about paragraph                   
    formatting.
  </TABLE>
  
  Wrappers for messages: <TABLE 30c%,70c%>
  Function                                  Description ---------------------------------------- 
  ------------------------------------------------ <LINK TJvCustomRichEdit.GetCharPos,      
  Retrieves the client area coordinates of a
    GetCharPos>                               specified character in a rich edit control.
  <LINK TJvCustomRichEdit.GetLineIndex,     Retrieves the character index of the first
    GetLineIndex>                             character of a specific line.
  <LINK TJvCustomRichEdit.GetLineLength,    Retrieves the length, in characters, of a
    GetLineLength>                            specific line.
  <LINK TJvCustomRichEdit.GetSelection,     Retrieves the starting and ending character
    GetSelection>                             positions of the selection.
  <LINK TJvCustomRichEdit.GetTextRange,     Retrieves a specified range of characters from
    GetTextRange>                             a rich edit control.
  <LINK TJvCustomRichEdit.SetSelection,     Selects a range of characters and/or Component
    SetSelection>                             Object Model (COM) objects in the rich edit
                                              control.
  </TABLE>
  
  <B>Rich Edit Version 3.0</B>
  
  Rich Edit 3.0 includes the following features in addition to the features provided by Rich Edit
  <TABLE 30c%,70c%>
  Feature                              Description ----------------------------------- 
  ----------------------------------------------------- \Zoom                                The zoom
  factor is given by a ratio, see property                                        <LINK
  TJvCustomRichEdit.Zoom, Zoom>.
  \Paragraph numbering (single-level)  Numeric, upper and lower alphabetic, or Roman                 
                        numeral, see property <LINK
                                         TJvParaAttributes.Numbering, Numbering> of
                                         TJvParaAttributes.
  Normal and heading styles            Built-in normal style and heading styles 1 through 9          
                               are supported, see property <LINK
                                         TJvParaAttributes.HeadingStyle, HeadingStyle> of
                                         TJvParaAttributes.
  More underline types                 Dashed, dash-dot, dash-dot-dot, and dot underlining           
                              has been added, see property <LINK
                                         TJvTextAttributes.UnderlineType, UnderlineType>.
  Underline coloring                   Underlined text can be tagged with one of 15                  
                       document choices for underline colors, see
                                         property <LINK TJvTextAttributes.UnderlineColor,
                                         UnderlineColor>.
  Hidden text                          See property <LINK TJvTextAttributes.Hidden, Hidden>          
                               of TJvTextAttributes.
  Increased undo control               Undo can be suspended and resumed (an IME                     
                    requirement). (TODO) </TABLE>

----------------------------------------------------------------------------------------------------
@@TJvParaAttributes
Summary
  Represents paragraph formatting properties for a rich edit control.
Description
  TJvParaAttributes includes a number of properties that describe the formatting characteristics of a
  paragraph in a rich text document. TJvParaAttributes is a wrapper for the PARAFORMAT2 struct, and
  is an extension of the VCL TParaAttributes class.
  
  \New properties:
  <TABLE>
    Property         Description
    ---------------  -------------------------------------------------------------------------
    LineSpacing      Specifies the spacing between lines.
    LineSpacingRule  Specifies the type of line spacing.
    NumberingStart   Changes the starting number used for numbered paragraphs.
    NumberingStyle   Applies a numbering style to a paragraphs.
    NumberingTab     Specifies the minimum space, in points, between a paragraph number and
                       the paragraph text.
    SpaceAfter       Specifies the size of the spacing below the paragraph.
    SpaceBefore      Specifies the size of the spacing above the paragraph.
  </TABLE>
See Also
  TJvRichEdit, TJvTextAttributes

----------------------------------------------------------------------------------------------------
@@TJvNumberingStyle.nsParenthesis
Follows the number with a right parenthesis. For example: 0), 1), 2), ...

----------------------------------------------------------------------------------------------------
@@TJvNumberingStyle.nsPeriod
Follows the number with a period. For example: 0., 1., 2., ...

----------------------------------------------------------------------------------------------------
@@TJvNumberingStyle.nsEnclosed
Encloses the number in parentheses. For example: (0), (1), (2), ...

----------------------------------------------------------------------------------------------------
@@TJvNumberingStyle.nsSimple
Displays only the number. For example: 0, 1, 2, ...

----------------------------------------------------------------------------------------------------
@@TJvOEMConversion
Summary
  Converts rich text data from and to OEM formatted text.
Description
  Use the TJvOEMConversion class to allow rich text edit controls to \read from and write to files
  that
  use the OEM-defined character set.
  
  Rich text edit controls can use this class by registering it through their <LINK
  TJvCustomRichEdit.RegisterConversionFormat, RegisterConversionFormat> method, or by making an
  instance the <LINK TJvCustomRichEdit.DefaultConverter, default converter>.
  Note
  Use the <LINK TJvCustomRichEdit.Lines, Lines> property to stream the text to or from a file.

----------------------------------------------------------------------------------------------------
@@TJvNumberingStyle
<TITLE TJvNumberingStyle type>
Summary
  Represents different kinds of numbering styles used with numbered paragraphs.
Description
  Use the TJvNumberingStyle type to specify a specific numbering style with numbered paragraphs.
  Note
  Rich Edit versions earlier than version 3.0 do not display paragraph numbers. (The rich edit
  control stores the value but does not use it to display the text.)
See Also
  TJvNumbering, TJvParaAttributes.NumberingStyle

----------------------------------------------------------------------------------------------------
@@TJvNumbering.nsLoCaseLetter
Lowercase letters (a, b, c, ...).

----------------------------------------------------------------------------------------------------
@@TJvNumbering.nsUpCaseLetter
Uppercase letters (A, B, C, ...).

----------------------------------------------------------------------------------------------------
@@TJvNumbering.nsLoCaseRoman
Lowercase Roman numerals (i, ii, iii, ...).

----------------------------------------------------------------------------------------------------
@@TJvNumbering.nsUpCaseRoman
Uppercase Roman numerals (I, II, III, ...).

----------------------------------------------------------------------------------------------------
@@TJvNumbering.nsNone
No paragraph numbering or bullets.

----------------------------------------------------------------------------------------------------
@@TJvNumbering.nsBullet
Insert a bullet at the beginning of each selected paragraph.

----------------------------------------------------------------------------------------------------
@@TJvNumbering.nsArabicNumbers
Arabic numbering (1, 2, 3, ...).

----------------------------------------------------------------------------------------------------
@@TJvIndentationStyle.isRichEdit
<LINK TJvParaAttributes.LeftIndent, LeftIndent> relative to <LINK TJvParaAttributes.FirstIndent,
FirstIndent>. For example, if <LINK TJvParaAttributes.FirstIndent, FirstIndent> equals 2 and <LINK
TJvParaAttributes.LeftIndent, LeftIndent> equals 1 then the first line of the paragraph will start at 2 and the following lines at 3.

----------------------------------------------------------------------------------------------------
@@TJvIndentationStyle.isOffice
<LINK TJvParaAttributes.FirstIndent, FirstIndent> relative to <LINK TJvParaAttributes.LeftIndent,
LeftIndent> (like MS Word and WordPad). For example, if <LINK TJvParaAttributes.FirstIndent,
FirstIndent> equals 2 and <LINK TJvParaAttributes.LeftIndent, LeftIndent> equals 1 then the first line of the paragraph will start at 3 and the following lines at 1.

----------------------------------------------------------------------------------------------------
@@TJvMSTextConversion
Summary
  Wrapper for a MS Text conversion dll.
Description
  TJvMSTextConversion is a wrapper class for a single MS Text conversion dll. You can register all MS
  Text converters by calling <LINK TJvCustomRichEdit.RegisterMSTextConverters,
  RegisterMSTextConverters>
See Also
  TJvCustomRichEdit.RegisterMSTextConverters

----------------------------------------------------------------------------------------------------
@@TJvMSTextConversion.TranslateError
Summary
  Converts a MS Text conversion OS error code into a string.
Description
  Call TranslateError to translate a MS Text conversion OS error code into an error message string.
Parameters
  ErrorCode - The errorcode to translate.
Return value
  Returns an error message string describing the error.

----------------------------------------------------------------------------------------------------
@@TJvNumbering
<TITLE TJvNumbering type>
Summary
  Represents different kinds of bulleting or numbering of paragraphs.
Description
  Use the TJvNumbering type to specify a specific kind of bulleting or numbering of paragraphs.
  Note
  Rich Edit versions earlier than version 3.0 do not display paragraph numbers. (The rich edit
  control stores the value but does not use it to display the text.)
See Also
  TJvNumberingStyle, TJvParaAttributes.Numbering

----------------------------------------------------------------------------------------------------
@@TJvIndentationStyle
<TITLE TJvIndentationStyle type>
Summary
  Enumerates indentation styles.
Description
  Use the TJvIndentationStyle type to specify a specific indentation style.
See Also
  TJvParaAttributes.IndentationStyle

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.Zoom
Summary
  Specifies the zoom percentage.
Description
  Use property Zoom to get or set the zoom percentage for the rich edit control. Set Zoom to 100 to
  turn off zooming.
  Note
  RichEdit 3.0.

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.UseFixedPopup
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.WordAtCursor
Summary
  \Returns the word at the current position in the rich edit control.
Description
  \Read WordAtCursor to retrieve the word at the current position in the rich edit control.
Return value
  The word at the current position in the rich edit control.
See Also
  TJvCustomRichEdit.GetSelection, TJvCustomRichEdit.GetTextRange

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.WordAttributes
Summary
  Describes the rich text characteristics of the selected text in the rich edit control.
Description
  WordAttributes works the same way as SelAttributes, except if no text is selected, and the cursor
  position is inside a word, WordAttributes represents the attributes of that word at the cursor
  position.
  
  WordAttributes is a TJvTextAttributes object, that works the same as the VCL's TTextAttributes
  object, and introduces some more properties. See TJvTextAttributes for an overview of these new
  properties.
  Note
  WordAttributes is available only at runtime.
See Also
  TJvCustomRichEdit.DefAttributes, TJvCustomRichEdit.SelAttributes, TJvTextAttributes

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.WordSelection
Summary
  Specifies whether automatic selection of word on double-click is enabled.
Description
  Set WordSelection to true, to enable automatic selection of word on double-click. Set WordSelection
  to false to disable it.
See Also
  TJvCustomRichEdit.HideSelection, TJvCustomRichEdit.SelectionBar

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.UndoName
Summary
  Indicates the type of the next undo action, if any.
Description
  \Read UndoName to retrieve the type of the next undo action, if any.
  
  The types of actions that can be undone or redone include typing, \delete, drag, drop, cut, and paste operations. This information can be useful fo
   applications that provide an extended user interface for undo and \redo operations, such as a
  drop-down list box of actions that can be undone.
  
  This example changes the Caption and Enabled properties of 2 TMenuItem's in the OnChange event
  handler of a rich edit control named JvRichEdit1.
  
  <CODE>
  procedure TForm1.JvRichEdit1Change(Sender: TObject);
  const
    UndoNames: array [TUndoName] of string =
      ('', 'typing', 'delete', 'drag and drop', 'cut', 'paste');
  begin   { Undo }
    UndoMenuItem.Enabled := JvRichEdit1.CanUndo;
    UndoMenuItem.Caption := '&Undo ' + UndoNames[JvRichEdit1.UndoName];
    { Redo }
    RedoMenuItem.Enabled := JvRichEdit1.CanRedo;
    RedoMenuItem.Caption := '&Redo ' + UndoNames[JvRichEdit1.RedoName];
  end; </CODE>
  Note
  Rich Edit 2.0
See Also
  <DELPHILINK TCustomMemo.Undo>

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.UndoLimit
Summary
  Specifies the maximum number of actions that can stored in the undo queue.
Description
  Specifies the maximum number of actions that can be stored in the undo queue. The return value is
  the new maximum number of undo actions for the rich edit control. This value may be less than the
  value specified by UndoLimit if memory is limited.
  
  By default, the maximum number of actions in the undo queue is 100. If you increase this number,
  there must be enough available memory to accommodate the new number. For better performance, set
  the limit to the smallest possible value.
  
  Setting the limit to zero disables the Undo feature.
See Also
  TJvCustomRichEdit.CanRedo, TJvCustomRichEdit.RedoName, TJvCustomRichEdit.UndoName,
  TJvCustomRichEdit.Redo, <DELPHILINK TCustomMemo.Undo>

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.Title
Summary
  Specifies the caption of the window, that is displayed when a user selects to edit an embedded
  object.
Description
  Use Title to specify a string that is displayed in the title bar of the window, displayed when a
  user opens an object for editing.
  Note
  Property AllowObjects must be set to true, otherwise setting Title has no effect.
See Also
  TJvCustomRichEdit.AllowObjects

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.StreamMode
Summary
  \Controls how the text is treated when streaming to or from a file.
Description
  Use StreamMode to specify whether to
  
  * Only replace the contents of the current selection when loading a stream, and to only stream out 
   the contents of the current selection, when saving to a stream.
  * Stream only keywords common to all languages in and out, i.e., ignore all language-specific RTF  
  keywords.
  * Replace COM objects with spaces when streaming out.
  * Stream unicode text in and out.
  
  Some flags are ignored depending on the value of StreamFormat. For example you must set
  StreamFormat to sfPlainText, or PlainText to true and StreamFormat to sfDefault to be able to
  stream unicode text in or out.)
  Note
  Rich edit controls do not directly support streaming. Use the Lines property to stream to or from a
  file, For example to save the selected text as unicode to a file:
  <CODE>
  with JvRichEdit1 do
  try
    StreamFormat := sfPlainText;
    StreamMode := [smSelection, smUnicode];
    Lines.SaveToFile(AFileName);
  finally
    StreamMode := [];
  end; </CODE>
See Also
  TJvCustomRichEdit.PlainText, TJvCustomRichEdit.StreamFormat

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.StreamFormat
Summary
  \Specifies the format of the text when streaming to or from a file.
Description
  Use StreamFormat to specify the format of the text when streaming to or from a file. The format can
  be either Rich Text \Format (RTF) or plain text.
  
  If you set StreamFormat to sfDefault, then property PlainText determines whether the format is RTF
  or plain text.
See Also
  TJvCustomRichEdit.PlainText, TJvCustomRichEdit.StreamMode

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.StopGroupTyping
Summary
  Stops the control from collecting additional typing actions into the current undo action.
Description
  Call StopGroupTyping to stop the control from collecting additional typing actions into the current
  undo action. The control stores the next typing action, if any, into a new action in the undo queue.
  
  A rich edit control groups consecutive typing actions, including characters deleted by using the
  BackSpace key, into a single undo action until one of the following events occurs:
  
  * StopGroupTyping is called.
  * The control loses focus.
  * The user moves the current selection, either by using the arrow keys or by clicking the mouse.
  * The user presses the \delete key.
  * The user performs any other action, such as a paste operation that does not involve typing.
  
  You can call StopGroupTyping to break consecutive typing actions into smaller undo groups. For
  example, you could call it after each character or at each word break.
  Note
  Rich Edit 2.0.
See Also
  <DELPHILINK TCustomMemo.Undo>

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.SetSelection
Summary
  Selects a range of characters and/or Component Object Model (COM) objects in the rich edit control.
Description
  Call SetSelection to select the indicated range of characters in the rich edit control. If StartPos
  is the same as EndPos, SetSelection positions the cursor at the StartPos character.
  
  For example, call:
  <CODE>
  SetSelection(0, 0, True); </CODE> to scroll to the first position of the rich edit control
Parameters
  StartPos    - Indicates the beginning of the range of text, where 0 is the first character in the  
               text.
  EndPos      - Indicates the end of the range of text, where 0 is the first character in the text.
  ScrollCaret - Specifies whether to scroll the caret into view in an edit control.

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.SelectionBar
Summary
  Specifies whether to show the selection bar.
Description
  The selection bar is an unmarked area to the left of each paragraph that when clicked, selects the
  line. Set SelectionBar to true to show the selection bar, set it to false, to hide it.
See Also
  TJvCustomRichEdit.HideScrollBars, TJvCustomRichEdit.HideSelection

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.SelectionType
Summary
  Indicates the selection type for the rich edit control.
Description
  Use SelectionType to determine whether one or more COM objects are selected.

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.SelText
Summary
  Denotes the selected portion of the edit control’s text.
Description
  \Read SelText to determine the value of the selected text. Set SelText to replace the selected text
  with a new string. If there is no selection, but the edit control has focus, set SelText to insert
  a new string into the text at the cursor.
See Also
  TJvCustomRichEdit.SelectionType, TJvCustomRichEdit.SetSelection

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.SaveToImage
Summary
  Copies the complete text in the rich edit control to an image.
Description
  Call SaveToImage to copy the complete text in the rich edit control to an image.
Parameters
  Picture - The image to copy the text in the rich edit control to.

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.SelAttributes
Summary
  Describes the rich text characteristics of the selected text in the rich edit control.
Description
  Use SelAttributes to discover or set the font characteristics of the currently selected text. If no
  text is selected, SelAttributes represents the attributes of the cursor position.
  
  When inserting new text, the font characteristics of the new text will match SelAttributes.
  
  SelAttributes is a TJvTextAttributes object, that works the same as the VCL's TTextAttributes
  object, and introduces some more properties. See TJvTextAttributes for an overview of these new
  properties.
  Note
  SelAttributes is available only at runtime.
  
  \Example:
  <CODE>
  function TForm1.CurrText: TJvTextAttributes;
  begin
    if JvRichEdit1.SelLength > 0 then
      Result := JvRichEdit1.SelAttributes
    else
      Result := JvRichEdit1.WordAttributes;
  end;
  
  procedure TForm1.Button1Click(Sender: TObject);
  begin
    CurrText.Style := CurrText.Style + [fsBold];
  end; </CODE>
See Also
  TJvCustomRichEdit.DefAttributes, TJvCustomRichEdit.WordAttributes, TJvTextAttributes

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.ReplaceDialog
Summary
  Displays the Replace Text dialog box.
Description
  Call ReplaceDialog to display the Replace Text dialog box, that prompts the user for both a search
  string and a replace string. If the user presses the Find Next button, a search for the entered
  search string is performed. If the search string is found the rich edit control selects the found
  string. If the search string is <I>not</I> found an OnTextNotFound event is fired. If the user
  closes the dialog an OnCloseFindDialog is fired.
  Note
  If HideSelection is set to true (as is the default), you won't see the highlighted string, because
  the Replace Text dialog will have the focus. You might want to set HideSelection To false before
  calling ReplaceDialog, and set it to its old value in an OnCloseFindDialog event handler.
Parameters
  SearchStr  - Default search string that appears in the edit box when the dialog opens.
  ReplaceStr - Default replacement string that appears in the edit box when the dialog opens.
Return value
  \Returns a reference to the created Replace Text dialog.
See Also
  TJvCustomRichEdit.FindDialog

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.RegisterConversionFormat
Summary
  Registers an association between a file extension and a TJvConversion object that can convert
  between the native file format and rich text format (RTF) or plain text.
Description
  Rich edit controls encode text attributes in RTF format or plain text. To read from or write to
  files that encode text attributes in some other format, a converter is required. The converter is a
  descendant of TJvConversion that translates between the native file format and RTF or plain text
  when the text is streamed in or out. RegisterConversionFormat sets up an association between a file
  extension and a converter, so that all attempts to stream between a file with that extension and a
  rich edit control automatically invoke the appropriate converter.
  Note
  Use the Lines property to stream the text to or from a file.
Parameters
  AConverter - The converter to register.
See Also
  TJvCustomRichEdit.DefaultConverter, TJvCustomRichEdit.Lines, TJvCustomRichEdit.PlainText,
  TJvCustomRichEdit.RegisterMSTextConverters

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.RegisterMSTextConverters
Summary
  Registers the text converters supplied by Microsoft.
Description
  Call RegisterMSTextConverters to register the text converters supplied by Microsoft. These
  converters
  can import or export RTF from or to some other format, for example Word documents or html pages.
  
  RegisterMSTextConverters sets up associations between file extension and MS converters, so that all
  attempts to stream between a file with that extension and a rich edit control automatically invoke
  the appropriate converter.
  
  RegisterMSTextConverters registers a TJvMSTextConversion instance for each item found in:
  <CODE>
  HKEY_LOCAL_MACHINE\Software\Microsoft\Shared Tools\Text Converters </CODE>
  Note
  Registered converters apply to <I>all</I> rich edit controls.
See Also
  TJvCustomRichEdit.RegisterConversionFormat

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.Print
Summary
  Formats and prints the contents of the rich edit control.
Description
  Use Print to print the contents of the rich edit control.
Parameters
  Caption - Specifies the title that appears in the print manager and on network title pages.
See Also
  TJvCustomRichEdit.PageRect

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.Redo
Summary
  Redoes the next action in the control's \redo queue.
Description
  Call Redo to \redo the next action in the control's \redo queue.
  
  To determine whether there are any actions in the control's \redo queue, check property CanRedo.
See Also
  <DELPHILINK TCustomMemo.Undo>

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.RedoName
Summary
  Indicates the type of the next action, if any, in the control's \redo queue.
Description
  \Read RedoName to retrieve the type of the next action, if any, in the control's \redo queue.
  
  The types of actions that can be undone or redone include typing, \delete, drag-drop, cut, and paste operations. This information can be useful fo
   applications that provide an extended user interface for undo and \redo operations, such as a
  drop-down list box of redoable actions.
See Also
  <DELPHILINK TCustomMemo.Undo>

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.PlainText
Summary
  Indicates whether the rich edit control's text is formatted or not.
Description
  Set PlainText to true to transform the rich edit control's text to plain unformatted text.
See Also
  TJvCustomRichEdit.StreamFormat, TJvCustomRichEdit.StreamMode

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.PasteSpecialDialog
Summary
  Displays the standard Paste Special dialog box.
Description
  Call PasteSpecialDialog to display the standard Paste Special dialog box, allowing the user to
  select the format of the clipboard object to be pasted or paste-linked.
  
  The following formats are accepted:
  
  * Embedded object.
  * Linked Object.
  * Rich Text \Format (RTF).
  * Rich Text \Format without objects.
  * Unformatted text.
  * Windows bitmap.
  
  With applications that support OLE, the user can initiate the transfer from either the server or
  the container. For example, the server can copy data to the clipboard in the server application,
  then switch to the container application and choose Paste Special/Embedded Object or an equivalent
  menu command to create a new embedded object from the selected data. Or the user can drag the data
  from one application to the other. The process is similar for creating a linked object.
  Note
  Property AllowObjects must be set to true, otherwise no dialog will be displayed.
Return value
  \Returns true if the dialog could be displayed and the user pressed the OK button, otherwise
  returns false.
See Also
  TJvCustomRichEdit.AllowObjects, TJvCustomRichEdit.InsertObjectDialog,
  TJvCustomRichEdit.ObjectPropertiesDialog

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.ParentFlat
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnVerticalScroll
Summary
  Occurs when the user scrolls the vertical scroll bar with the mouse or keyboard.
Description
  \Write an OnVerticalScroll event handler to respond when the user scrolls the vertical scroll bar.
See Also
  TJvCustomRichEdit.OnHorizontalScroll

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.PageRect
Summary
  Specifies the dimensions, in pixels, of the logical page size used when printing the contents of a
  rich text edit control.
Description
  Use PageRect to specify the logical page size used when formatting the contents of the rich edit
  control for printing. Specify the dimensions in pixels.
See Also
  TJvCustomRichEdit.Print

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.Paragraph
Summary
  Specifies the formatting information for the current paragraphs.
Description
  Paragraph is a TJvParaAttributes object, that works the same as the VCL's TParaAttributes object,
  and introduces some more properties. See TJvParaAttributes for an overview of these new properties.
See Also
  TJvCustomRichEdit.OnSelectionChange, TJvParaAttributes

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnURLClick
Summary
  Occurs when the user clicks the mouse when the mouse pointer is over text that is a link.
Description
  \Write an OnURLClick event handler to respond when the user clicks the mouse when the mouse pointer
  is over text that is marked as a link. Text that is marked as a link typically identifies a range
  of text that contains an URL. Applications can handle the OnURLClick event by For example starting
  a browser to view the location identified by the URL as specified by parameter URLText.
  
  To set or unset the link attribute for a section of text, select the text and use the <LINK
  TJvTextAttributes.Link, Link> property of the rich edit control’s <LINK
  TJvCustomRichEdit.SelAttributes, SelAttributes> property.
  
  If you set AutoURLDetect to true to enable automatic URL detection, the rich edit control
  automatically sets the link attribute for modified text that it identifies as a URL.
  
  \Example:
  <CODE>
  procedure TForm1.JvRichEdit1URLClick(Sender: TObject; const URLText: string;
    Button: TMouseButton);
  begin
    if Button = mbLeft then
      ShellExecute(Handle, nil, PChar(URLText), nil, nil, SW_SHOW);
  end; </CODE>
  Note
  Rich Edit 2.0
Parameters
  Sender  - Rich Edit control that has fired this event.
  URLText - Specifies the text with the link attribute the user clicked.
  Button  - Identifies the mouse button the user used to click the text.
See Also
  TJvCustomRichEdit.AutoURLDetect, TJvTextAttributes.Link

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnSelectionChange
Summary
  Occurs when the current selection changes.
Description
  \Write an OnSelectionChange event handler to respond to changes in the selected text. Changes in
  selection can occur when the user changes the selection using the mouse or keyboard, or when the
  selection is changed through the SelText property. Portions of the selection can be changed through
  the Lines property.
See Also
  <DELPHILINK TCustomMemo.SelStart>, <DELPHILINK TCustomMemo.SelText>

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnTextNotFound
Summary
  Occurs when the text entered by a user in a Find or Replace dialog could not be found.
Description
  \Write an OnTextNotFound event handler to respond when the text entered by a user - specified by
  parameter FindText - in a Find or Replace dialog could not be found.
  
  \Example:
  <CODE>
  procedure TForm1.JvRichEdit1TextNotFound(Sender: TObject;
    const FindText: string);
  begin
    MessageDlg(Format('Text "%s" not found.', [FindText]), mtWarning, [mbOK], 0);
  end; </CODE>
Parameters
  Sender   - Rich Edit control that has fired this event.
  FindText - Specifies the text the user entered.
See Also
  TJvCustomRichEdit.FindDialog, TJvCustomRichEdit.ReplaceDialog

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnSaveClipboard
Summary
  Occurs when the window of the rich edit control is about to be destroyed and the control has
  delayed rendering of text copied to the clipboard.
Description
  \Write an OnSaveClipboard event handler to respond to notifications that the window of the rich
  edit control is about to be destroyed and the Clipboard needs information from the control. The
  parameter
  NumObjects is the number of objects on the Clipboard, and NumChars is the number of characters on
  the
  Clipboard. To clear all information about the rich edit control from the Clipboard, set
  SaveClipboard to false.

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnResizeRequest
Summary
  Occurs when the text has grown either smaller or larger than the control's window size.
Description
  \Write an OnResizeRequest event handler to respond to notifications that the rich edit control is
  trying to resize due to changes in the text. The Rect parameter gives the desired bounding
  rectangle that will display all the text, in screen coordinates.

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnQueryAcceptData
Summary
  Occurs when the user performs an paste operation or drags an object to the rich edit control.
Description
  Write here a description
Parameters
  Sender                 - Rich Edit control that has fired this event.
  ADataObject            - The data object being pasted or dragged.
  AFormat                - Specifies the format to use.
  ClipboardOperationKind - Description for this parameter
  Really                 - Indicates whether the drag-drop is actually happening or if it is just a  
                          query.
  IconMetaPict           - Specifies a global memory handle to a metafile picture (TMetaFilePict) to 
                           display in place of the OLE object's default icon.
  Handled                - Returns true if the event handler performs the operation, false if the
  rich                           edit control should continue with its default processing.
See Also
  TJvCustomRichEdit.OnDragAllowed, TJvCustomRichEdit.OnGetDragDropEffect,
  TJvCustomRichEdit.OnQueryAcceptData

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnProtectChangeEx
Summary
  Occurs when a user attempts to modify text that is marked as protected.
Description
  \Write an OnProtectChange event handler to allow modification of text with the protected attribute.
  
  To allow modification of protected text, set AllowChange to true.
  
  To set or unset the protected attribute for a section of text, select the text and use the
  Protected property of the rich edit control’s <LINK TJvCustomRichEdit.SelAttributes, SelAttributes>
  property.
  To cause text to have the protected attribute by default, use the <LINK TJvTextAttributes.Protected,
  Protected> property of the rich edit object’s DefAttributes property.
Parameters
  Sender      - Rich Edit control that has fired this event.
  Msg         - Message that triggered the notification.
  StartPos    - Indicates the beginning of the range of text, that would be affected by the          
       modification, where 0 is the first character in the text.
  EndPos      - Indicates the end of the range of text, that would be affected by the modification,  
               where 0 is the first character in the text.
  AllowChange - Specifies whether to allow modification of protected text.
See Also
  TJvTextAttributes.Protected

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnInPlaceActivate
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnInPlaceDeactivate
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnProtectChange
Summary
  Occurs when a user attempts to modify text that is marked as protected.
Description
  \Write an OnProtectChange event handler to allow modification of text with the protected attribute.
  The StartPos and EndPos parameters indicate the beginning and end of the range of text that would
  be affected by the modification, where 0 is the first character in the text. To allow modification
  of protected text, set AllowChange to true.
  
  To set or unset the protected attribute for a section of text, select the text and use the
  Protected property of the rich edit control’s <LINK TJvCustomRichEdit.SelAttributes, SelAttributes>
  property.
  To cause text to have the protected attribute by default, use the <LINK TJvTextAttributes.Protected,
  Protected> property of the rich edit object’s DefAttributes property.
  Note
  Obsolete, use OnProtectChangeEx
See Also
  TJvCustomRichEdit.OnProtectChangeEx

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnHorizontalScroll
Summary
  Occurs when the user scrolls the horizontal scroll bar with the mouse or keyboard.
Description
  \Write an OnHorizontalScroll event handler to respond when the user scrolls the horizontal scroll
  bar.
See Also
  TJvCustomRichEdit.OnVerticalScroll

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnGetDragDropEffect
Summary
  Occurs when the user drags an OLE object over the control.
Description
  Use an OnGetDragDropEffect event to provide feedback to the user about what would happen if a drop
  occurred at this point. Typically, pressing certain combination of the Shift, Alt, or Ctrl keys
  while dragging an object changes the effect. For example:
  
  <TABLE>
    Keys            Effect
    --------------  -------
    Ctrl and Shift  rdeLink
    Ctrl            rdeCopy
    Alt             rdeMove </TABLE>
Parameters
  Sender         - Rich Edit control that has fired this event.
  ShiftState     - Indicates the state of the shift keys and mouse buttons.
  AllowedEffects - Returns the effect to use.
  Handled        - Returns true if the event handler performs the operation, false if the rich edit  
                  control should continue with its default processing.
See Also
  TJvCustomRichEdit.OnDragAllowed, TJvCustomRichEdit.OnGetDragDropEffect,
  TJvCustomRichEdit.OnQueryAcceptData

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnConversionProgress
Summary
  Occurs when a rich edit control is importing or exporting.
Description
  For certain descendants of TJvConversion, OnConversionProgress occurs during import or export
  operations. OnConversionProgress allows applications to provide feedback to the user about the
  progress of the slow process.
Parameters
  Sender      - Rich Edit control that has fired this event.
  PercentDone - PercentDone is an approximation of how much of the operation has completed. Use
               PercentDone to update the position of a progress bar or other indicator.

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnDragAllowed
Summary
  Occurs when the user begins to drag an OLE object on the control.
Description
  If you set AllowedEffects to the empty set then the drag operation is cancelled.
Parameters
  Sender         - Rich Edit control that has fired this event.
  ShiftState     - Indicates the state of the shift keys and mouse buttons.
  AllowedEffects - Returns the allowed effect to use.
  Handled        - Returns true if the event handler performs the operation, false if the rich edit  
                  control should continue with its default processing.
See Also
  TJvCustomRichEdit.OnDragAllowed, TJvCustomRichEdit.OnGetDragDropEffect,
  TJvCustomRichEdit.OnQueryAcceptData

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OnCloseFindDialog
Summary
  Occurs when the Find Text or Replace Text dialog box closes.
Description
  Write an OnCloseFindDialog event handler to perform special processing when the Find Text or Replace
  Text dialog box closes.
  
  The Find dialog can be displayed by a call to FindDialog. The Replace Text dialog can be displayed
  by a call to ReplaceDialog.
  
  \Example:
  <CODE>
  procedure TForm1.JvRichEdit1CloseFindDialog(Sender: TObject; Dialog: TFindDialog);
  begin
    with JvRichEdit1 do
      if CanFocus then
        SetFocus;
  end; </CODE>
Parameters
  Sender - Rich Edit control that has fired this event.
  Dialog - Specifies the Find Text or Replace Text dialog box.
See Also
  TJvCustomRichEdit.CanFindNext, TJvCustomRichEdit.FindDialog, TJvCustomRichEdit.ReplaceDialog

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.OLEDragDrop
Summary
  Indicates whether to allow OLE drag and drop.
Description
  Use OLEDragDrop to specify whether to allow OLE drag and drop.
  
  OLE drag and drop allows the user to drag data (such as text or graphics) from one control or
  application to another (or the same) control or application.
See Also
  TJvCustomRichEdit.InsertGraphic

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.Lines
Summary
  Contains the individual lines of text in the rich text edit control.
Description
  See Delphi help for more info.
See Also
  TJvCustomRichEdit.SelText

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.ObjectPropertiesDialog
Summary
  Displays the Object Properties dialog box.
Description
  Call ObjectPropertiesDialog to display the Object Properties dialog box, which displays General,
  View, and Link information about an object.
  Note
  Property AllowObjects must be set to true, otherwise no dialog will be displayed.
Return value
  \Returns true if the dialog could be displayed and the user pressed the OK button, otherwise
  returns false.
See Also
  TJvCustomRichEdit.AllowObjects, TJvCustomRichEdit.InsertObjectDialog,
  TJvCustomRichEdit.PasteSpecialDialog

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.LineFromChar
Summary
  \Returns which line contains the specified character.
Description
  Call LineFromChar to retrieve which line contains the character specified by parameter CharIndex in
  the rich edit control.
Parameters
  CharIndex - Zero-based index of the character.
Return value
  \Returns the zero-based index of the line.

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.LangOptions
Summary
  Specifies the current language option settings.
Description
  Use LangOptions to retrieve or set the options for Input Method Editor (IME) and Asian language
  support in the rich edit control.
  
  Property LangOptions controls the following:
  
  * Automatic font binding.
  * Automatic keyboard switching.
  * Automatic font size adjustment.
  * Use of user-interface default fonts instead of document default fonts.
  * Notifications to client during IME composition.
  * How IME aborts composition mode.
  
  The IMF_AUTOFONT flag is set by default. The IMF_AUTOKEYBOARD and IMF_IMECANCELCOMPLETE flags are
  clear by default.
  Note
  RichEdit 2.0.

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.InsertObjectFromInfo
Summary
  Write here a summary (1 line)
Description
  Write here a description
Parameters
  Info - Description for this parameter
See Also
  TJvCustomRichEdit.InsertLinkToFile, TJvCustomRichEdit.InsertObject,
  TJvCustomRichEdit.InsertObjectDialog, TJvCustomRichEdit.InsertObjectFromFile,
  TJvCustomRichEdit.InsertObjectFromInfo

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.InsertObjectDialog
Summary
  Displays the standard \Insert Object dialog box.
Description
  Call InsertObjectDialog to display the standard \Insert Object dialog box, which allows the user to
  select an object source and class name, as well as the option of displaying the object as itself or
  as an icon.
  Note
  Property AllowObjects must be set to true, otherwise no dialog will be displayed.
Return value
  \Returns true if the dialog could be displayed and the user pressed the OK button, otherwise
  returns false.
See Also
  TJvCustomRichEdit.AllowObjects, TJvCustomRichEdit.ObjectPropertiesDialog,
  TJvCustomRichEdit.PasteSpecialDialog

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.InsertObjectFromFile
Summary
  Inserts an embedded OLE object from the contents of a file.
Description
  Call InsertObjectFromFile to insert an OLE object from the file specified by the FileName parameter.
Parameters
  FileName - Specifies the file.
  Iconic   - Indicates whether the object is shown as an icon (true) or displayed as it would be in  
            the server application (false)
See Also
  TJvCustomRichEdit.InsertLinkToFile, TJvCustomRichEdit.InsertObject,
  TJvCustomRichEdit.InsertObjectDialog, TJvCustomRichEdit.InsertObjectFromFile,
  TJvCustomRichEdit.InsertObjectFromInfo

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.InsertLinkToFile
Summary
  Inserts a linked OLE object from a file.
Description
  Call InsertLinkToFile to insert a linked OLE object from the file specified by the FileName
  parameter.
Parameters
  FileName - Specifies the file.
  Iconic   - Specifies whether the object is shown as an icon (true) or displayed as it would be in  
            the server application (false).
See Also
  TJvCustomRichEdit.InsertLinkToFile, TJvCustomRichEdit.InsertObject,
  TJvCustomRichEdit.InsertObjectDialog, TJvCustomRichEdit.InsertObjectFromFile,
  TJvCustomRichEdit.InsertObjectFromInfo

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.InsertObject
Summary
  Write here a summary (1 line)
Description
  Write here a description
Parameters
  OleClassName - Description for this parameter
  Iconic       - Description for this parameter
See Also
  TJvCustomRichEdit.InsertLinkToFile, TJvCustomRichEdit.InsertObject,
  TJvCustomRichEdit.InsertObjectDialog, TJvCustomRichEdit.InsertObjectFromFile,
  TJvCustomRichEdit.InsertObjectFromInfo

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.InsertGraphic
Summary
  Inserts a graphic at the current cursor position.
Description
  Call InsertGraphic to insert a graphic at the current cursor position.
  
  If parameter Sizeable is set to false, but property OLEDragDrop is true, then the user can drag and
  drop the image, and then resize the image. Set OLEDragDrop to false to completely prevent the user
  from resizing the image. Another way is to set ReadOnly to true.
  
  Code example:
  <CODE>
  procedure AddImageToRichEdit(AImageList: TImageList; const AImageIndex: Integer);
  var
    Bitmap: TBitmap;
  begin
    Bitmap := TBitmap.Create;
    try
      AImageList.GetBitmap(AImageIndex, Bitmap);
      JvRichEdit1.InsertGraphic(Bitmap, False);
  
      { Move cursor }
      with JvRichEdit1.GetSelection do
        JvRichEdit1.SetSelection(cpMin + 1, cpMin + 1, False);
    finally
      Bitmap.Free;
    end;
  end; </CODE>
  Note
  InsertGraphic is slower than <LINK BitmapToRTF> and <LINK BitmapToRTF2>, but only with
  InsertGraphic you can stream out RTF content that includes the inserted graphics.
Parameters
  AGraphic - Specifies the graphic to insert.
  Sizeable - Specifies whether the graphic can be resized by the user.
See Also
  BitmapToRTF, BitmapToRTF2, TJvCustomRichEdit.InsertFormatText

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.InsertFormatText@Integer@string@TFontStyles@string@TColor@Integer
<COMBINE TJvCustomRichEdit.InsertFormatText@Integer@string@TFont>

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.HideScrollBars
Summary
  Specifies whether to hide or disable scroll bars when they are not needed.
Description
  Set HideScrollBars to true to hide the scroll bars when they are not needed. Set HideScrollBars to
  false to disable them when they are not needed.
  
  HideScrollBars is default set to true.
See Also
  TJvCustomRichEdit.HideSelection, TJvCustomRichEdit.SelectionBar

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.HideSelection
Summary
  Specifies whether to hide the selection when the control loses the input focus.
Description
  The default behavior of a rich edit control is to hide the selection when the control loses the
  input focus and to invert the selection when the control receives the input focus.
  
  Set HideSelection to false, to override this default behavior and to keep the selected text
  inverted, if the control does not have the focus.
  
  HideSelection is default set to true.
See Also
  TJvCustomRichEdit.HideScrollBars, TJvCustomRichEdit.SelectionBar

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.InsertFormatText@Integer@string@TFont
Summary
  Inserts formatted text at a specific position.
Description
  Call InsertFormatText to insert formatted text at the cursor position given by parameter Index.
  Note
  This procedure does not reset the attributes after the call, i.e if you change the text color it
  will remain that color until you change it again.
Parameters
  Index      - The cursor position where the text will be inserted. If Index < 0, the text is
  inserted               at the current SelStart position.
  S          - Specifies the string to insert.
  AFont      - Specifies the font to use. If AFont = nil, then the current attributes at the
  insertion               point are used.
  FontStyle  - Description for this parameter
  FontName   - Description for this parameter
  FontColor  - Description for this parameter
  FontHeight - Description for this parameter
See Also
  TJvCustomRichEdit.AddFormatText, TJvCustomRichEdit.InsertGraphic

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.GetSelection
Summary
  Retrieves the starting and ending character positions of the selection.
Description
  Call GetSelection to retrieve the starting and ending character positions of the selection in the
  rich edit control.
Return value
  \Return value is of type TCharRange and contains the selection range.

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.GetTextRange
Summary
  Retrieves a specified range of characters from the rich edit control.
Description
  Call GetTextRange to retrieve a specified range of characters from the rich edit control.
Parameters
  StartPos - Indicates the beginning of the range of text, where 0 is the first character in the     
         text.
  EndPos   - Indicates the end of the range of text, where 0 is the first character in the text.
Return value
  \Returns the specified range of characters as a string.
See Also
  <DELPHILINK TCustomMemo.CaretPos>

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.GetLineLength
Summary
  Retrieves the length, in characters, of a specific line.
Description
  Call GetLineLength to retrieve the length, in characters, of a line in the rich edit control.
  Alternatively, call GetLineIndex to retrieve a character index for a given line number.
  
  If you set parameter CharIndex to -1, GetLineLength returns the number of unselected characters on
  lines containing selected characters. For example, if the selection extended from the fourth
  character of one line through the eighth character from the end of the next line, the return value
  would be 10 (three characters on the first line and seven on the next).
  
  Retrieve the length of the current line:
  <CODE>
    LengthCurrentLine := JvRichEdit1.GetLineLength(JvRichEdit1.GetLineIndex(-1)); </CODE>
Parameters
  CharIndex - Specifies the character index of a character in the line whose length is to be         
      retrieved. This parameter can be –1. In this case, GetLineLength returns the number of
               unselected characters on lines containing selected characters.
Return value
  \Returns the length, in characters, of the line specified by the CharIndex parameter. It does not
  include the carriage-return character at the end of the line. If CharIndex is greater than the
  number of characters in the control, the return value is zero.
See Also
  TJvCustomRichEdit.GetLineIndex

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.GetLineIndex
Summary
  Retrieves the character index of the first character of a specific line.
Description
  Call GetLineIndex to retrieve the character index of the first character of the line specified by
  the
  LineNo parameter in the rich edit control. A character index is the zero-based index of the
  character from the beginning of the control.
Parameters
  LineNo - Specifies the zero-based line number. A value of –1 specifies the current line number (the
            line that contains the caret).
Return value
  \Returns the character index of the line specified in the LineNo parameter, or –1 if the specified
  line number is greater than the number of lines in the rich edit control.
See Also
  TJvCustomRichEdit.GetLineLength

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.Flat
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.ForceUndo
Summary
  Specifies whether undo should be active for all types of text changes in the control.
Description
  Use ForceUndo to specify whether undo should be activated even for replacements in selection. When
  ForceUndo is false, changing the text of the control by assigning to the SelText property or by
  using the built-in text replace functions cannot be undone. Set ForceUndo to true to make undo
  available in
  these circumstances.
See Also
  TJvCustomRichEdit.ReplaceDialog, TJvCustomRichEdit.SelText

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.GetCharPos
Summary
  Retrieves the client area coordinates of a specified character in the rich edit control.
Description
  A returned coordinate can be a negative value if the specified character is not displayed in the
  edit control's client area. The coordinates are truncated to integer values.
  
  If the character is a line delimiter, the returned coordinates indicate a point just beyond the
  last visible character in the line. If the specified index is greater than the index of the last
  character in the control, the returned coordinates indicate the position just past the last
  character in the control.
Parameters
  CharIndex - Specifies the zero-based index of the character.
Return value
  \Return value is of type TPoint, and contains the client area coordinates of the character.

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.FindText
Summary
  Searches a given range in the text for a target string.
Description
  Use FindText to search a range of text in the rich edit control for the string specified by the
  SearchStr parameter. Only the text in the range starting at the position StartPos and continuing
  through the next Length positions will be searched.
  
  Use FindText rather than programmatically searching through the text of the control, to keep from
  being thrown off by the encoding of rich text characteristics.
  
  Use Options to specify whether to
  
  * Search only for whole words that match the search string.
  * Perform a case-sensitive or case-insensitive search operation.
  * Search backward or forward.
  * Select the found text, and scroll it into view.
Parameters
  SearchStr - Specifies the string to find.
  StartPos  - Indicates the beginning of the range of text that should be searched, where 0 is the   
            first character in the text.
  Length    - Indicates the length of the text that should be searched.
  Options   - Specifies the parameters of the search operation.
Return value
  \Returns the position of the search string, where 0 is the position of the first character in the rich edit control (as opposed to the first position
  n the search range). If the search string does not appear in the indicated range, FindText returns
  -1.
See Also
  TJvCustomRichEdit.CanFindNext, TJvCustomRichEdit.FindDialog

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.FindNext
Summary
  Searches again for the string specified by the user in the Find Text or Replace Text dialog.
Description
  Call \FindNext to search for the next string - specified by the user in the Find Text or Replace
  Text dialog - in the text of the rich edit control.
  
  For example, you can call this method when the user presses a 'Find Next' menu item. You can check
  CanFindNext, to check whether a find next operation can be performed. Note that if a Replace Text
  dialog is displayed, calling \FindNext doesn't perform a replace operation, it just searches for
  the next string. Also note that if the user closes the dialog, a find next operation can still be
  performed.
Return value
  \Returns true if the search text could be found, otherwise returns false.
See Also
  TJvCustomRichEdit.CanFindNext, TJvCustomRichEdit.FindDialog, TJvCustomRichEdit.FindText,
  TJvCustomRichEdit.ReplaceDialog,

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.FindDialog
Summary
  Displays the Find Text dialog box.
Description
  Call FindDialog to display the Find Text dialog box, that prompts the user for a search string. If
  the user presses the Find Next button, a search for the entered search string is performed. If the
  search string is found the rich edit control selects the found string. If the search string is
  <I>not</I> found an OnTextNotFound event is fired. If the user closes the dialog an
  OnCloseFindDialog is fired.
  Note
  If HideSelection is set to true (as is the default), you won't see the highlighted string, because
  the Find Text dialog will have the focus. You might want to set HideSelection to false before
  calling
  FindDialog, and set it to its old value in an OnCloseFindDialog event handler.
Parameters
  SearchStr - Default search string that appears in the edit box when the dialog opens.
Return value
  \Returns a reference to the created Find Text dialog.
See Also
  TJvCustomRichEdit.CanFindNext, TJvCustomRichEdit.FindText, TJvCustomRichEdit.ReplaceDialog

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.Filter
Summary
  Returns the file masks of the registered converters.
Description
  Call Filter to retrieve a file mask of the files that can be imported or exported by the registered
  converters. For example, you can use the return value of a Filter call to set the \Filter property
  of a TOpenDialog component.
Parameters
  AKind - Indicates whether to retrieve a file mask for an import operation or an export operation.
Return value
  Returns the file masks of the registered converters.
See Also
  TJvCustomRichEdit.RegisterConversionFormat

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.DefaultConverter
Summary
  Specifies the TJvConversion object that is used to convert between native file format and the
  internal format of a rich text control when working with files that do not have a registered
  extension.
Description
  Use DefaultConverter to specify the type of conversion to use when streaming text to or from files
  that do not have a registered extension. If DefaultConverter is not set, TJvCustomRichEdit uses
  TJvConversion, which performs no actual conversion. TJvCustomRichEdit encodes text attributes in
  rich-text format (RTF); thus, unrecognized file extensions lead to no conversion, which works for
  files that contain plain text or any subset of RTF format.
  
  To support streaming to or from files that encode rich text characteristics in some other format,
  register a conversion format with the file extension used by those files. Use DefaultConverter only
  to change the conversion that is used for unrecognized file extensions.
  Note
  Use the Lines property to stream the text to or from a file.
See Also
  TJvCustomRichEdit.Lines, TJvCustomRichEdit.RegisterConversionFormat,
  TJvCustomRichEdit.RegisterMSTextConverters

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.CanPaste
Summary
  Indicates whether the rich edit control can paste.
Description
  \Read CanPaste to determine whether the control can paste any format currently on the clipboard.

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.CanRedo
Summary
  Indicates whether there are any actions in the control's \redo queue.
Description
  If CanRedo is true, there are actions in the control's \redo queue. If CanRedo is false, the \redo
  queue is empty.
  
  To \redo the most recent undo operation, call Redo.
See Also
  <DELPHILINK TCustomMemo.Undo>

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.ClearUndo
Summary
  Empties all undo and \redo buffers.
Description
  Call ClearUndo to empty all undo and \redo buffers.
See Also
  <DELPHILINK TCustomMemo.CanUndo>, <DELPHILINK TCustomMemo.Undo>

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.CloseActiveObject
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.DefAttributes
Summary
  Describes the rich text characteristics of the default font for the rich edit control.
Description
  See Delphi help for more info.
  
  DefAttributes is a TJvTextAttributes object, that works the same as the VCL's TTextAttributes
  object, and introduces some more properties. See TJvTextAttributes for an overview of these new
  properties.
See Also
  TJvCustomRichEdit.SelAttributes, TJvCustomRichEdit.WordAttributes, TJvTextAttributes

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.CanFindNext
Summary
  Indicates whether the performed search can be repeated.
Description
  \Read CanFindNext to determine whether the search, initiated by a call to FindDialog, can be
  repeated. For example, you can use CanFindNext to disable or enable a 'Find Next' menu item.
See Also
  TJvCustomRichEdit.FindText

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.AutoVerbMenu
Summary
  Indicates whether to automatically display a verb menu when the user right-clicks an object.
Description
  Set AutoVerbMenu to true, to automatically display a menu listing the verbs available for an object
  if the user right-clicks or otherwise invokes a popup menu for that object in the rich edit control.
  
  If the user selects a verb from the popup menu, the rich edit control executes the action
  associated with that verb.
See Also
  TJvCustomRichEdit.AllowObjects

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.AutoURLDetect
Summary
  Specifies whether the auto URL detection is turned on in the rich edit control.
Description
  Use AutoURLDetect to turn the auto URL detection on or off in the rich edit control.
  
  When auto URL detection is on, the rich edit control is constantly checking typed text for a valid
  URL. The control recognizes URLs that start with these prefixes:
  
  * http:
  * file:
  * mailto:
  * ftp:
  * https:
  * gopher:
  * nntp:
  * prospero:
  * telnet:
  * news:
  * wais:
  * outlook:
  
  The control also recognizes standard path names that start with \.
  
  You can not set the Link property to true of specific text when AutoURLDetect is set to true.
  Note
  RichEdit 2.0.
See Also
  TJvCustomRichEdit.OnURLClick

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.AllowObjects
Summary
  Specifies whether the rich edit control can include embedded COM objects.
Description
  Use AllowObjects to specify whether the rich edit control can include embedded Component Object
  Model (COM) objects.
See Also
  TJvCustomRichEdit.AllowInPlace, TJvCustomRichEdit.Title

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.AutoAdvancedTypography
Summary
  Specifies whether to automatically turn on AdvancedTypography when needed.
Description
  If AutoAdvancedTypography is true, AdvancedTypography is turned on in the following situations:
  
  * Property <LINK TJvParaAttributes.TabAlignment, TabAlignment> of <LINK TJvCustomRichEdit.Paragraph,
    Paragraph> is set to a value other than taOrdinary.
  * Property <LINK TJvParaAttributes.TabLeader, TabLeader> of <LINK TJvCustomRichEdit.Paragraph,
    Paragraph> is set to a value other than tlNone.
  * Property <LINK TJvParaAttributes.Alignment, Alignment> of <LINK TJvCustomRichEdit.Paragraph,
    Paragraph> is set to paJustify.
  Note
  RichEdit 3.0
See Also
  TJvCustomRichEdit.AdvancedTypography

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.AllowInPlace
Summary
  Specifies whether to support in-place activation of objects.
Description
  Set AllowInPlace to true to support in-place activation of objects.
  
  In-place activation allows an object within a container application to be edited without leaving the application. For instance, in a rich edit control's document you might 
  ant to open a spreadsheet and a little window opens up allowing you to edit the numerical cells.
  In-Place Activation bring editing tools into the container instead of having to return to the
  editor to modify the object.
See Also
  TJvCustomRichEdit.AllowObjects

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.AddFormatText@string@TFontStyles@string@TColor@Integer
<COMBINE TJvCustomRichEdit.AddFormatText@string@TFont>

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.AdvancedTypography
Summary
  Specifies whether the advanced typography option for line breaking and display is on.
Description
  Rich Edit 3.0 can use an advanced typography option for line breaking and display. This elegant
  option was added primarily to facilitate handling complex scripts (bidirectional, Indic, and Thai).
  In addition, a number of improvements occur for simple scripts. Examples are:
  
  * Center, right, decimal tabs (See <LINK TJvParaAttributes.TabLeader, TabLeader> and <LINK
    TJvParaAttributes.TabAlignment, TabAlignment>).
  * Fully justified text (See <LINK TJvParaAttributes.Alignment, Alignment>).
  * Underline averaging, which provides a uniform underline even when adjacent text runs have
  different   font sizes.
  Note
  RichEdit 3.0
See Also
  TJvCustomRichEdit.AutoAdvancedTypography

----------------------------------------------------------------------------------------------------
@@TJvConversionTextKind.ctkRTF
RTF.

----------------------------------------------------------------------------------------------------
@@TJvConversionTextKind.ctkBothPreferText
Plain text or RTF, but prefer plain text.

----------------------------------------------------------------------------------------------------
@@TJvConversionTextKind.ctkBothPreferRTF
Plain text or RTF, but prefer RTF.

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit
Summary
  Base type for rich edit controls such as TJvRichEdit.
Description
  TJvCustomRichEdit introduces new properties and methods to expand the capabilities of TCustomMemo
  for rich text.
See Also
  TJvRichEdit

----------------------------------------------------------------------------------------------------
@@TJvCustomRichEdit.AddFormatText@string@TFont
Summary
  Appends formatted text.
Description
  Call AddFormatText to append formatted text to the content of the rich edit control.
  Note
  This procedure does not reset the attributes after the call, i.e if you change the text color it
  will remain that color until you change it again.
Parameters
  S          - Specifies the string to insert.
  AFont      - Specifies the font to use. If AFont = nil, then the current attributes at the
  insertion               point are used.
  FontStyle  - Description for this parameter
  FontName   - Description for this parameter
  FontColor  - Description for this parameter
  FontHeight - Description for this parameter
See Also
  TJvCustomRichEdit.InsertGraphic, TJvCustomRichEdit.InsertFormatText

----------------------------------------------------------------------------------------------------
@@TJvConversionTextKind.ctkText
Plain text.

----------------------------------------------------------------------------------------------------
@@TJvConversionKind.ckImport
Import operation.

----------------------------------------------------------------------------------------------------
@@TJvConversionKind.ckExport
Export operation.

----------------------------------------------------------------------------------------------------
@@TJvConversionTextKind
<TITLE TJvConversionTextKind type>
Summary
  Enumerates kinds of preferred source or target formats of the content of a rich edit for converters.
Description
  The TJvConversionTextKind type is used to indicate the preferred source or target of the content of
  a rich edit for converters. For example, some converters can only import or export a specific
  format to
  RTF, others only to plain text etc.
See Also
  TJvConversion.TextKind

----------------------------------------------------------------------------------------------------
@@TJvConversion.UserCancel
Summary
  Returns whether the user has canceled the conversion.
Description
  TJvRichEdit will call UserCancel to determine whether the user has canceled the conversion.
Return value
  Returns true if the user canceled the conversion, false otherwise.
See Also
  TJvConversion.Error, TJvConversion.ErrorStr

----------------------------------------------------------------------------------------------------
@@TJvConversionKind
<TITLE TJvConversionKind type>
Summary
  Enumerates conversion operations.
Description
  Use the TJvConversionKind type to specify a specific conversion operation, either import or export.

----------------------------------------------------------------------------------------------------
@@TJvConversion.TextKind
Summary
  Returns the preferred source or target format of the rich edit content.
Description
  TJvRichEdit calls TextKind to determine what format the converter prefers the content of the rich
  edit to be.
Return value
  Returns the preferred source or target format of the rich edit content.

----------------------------------------------------------------------------------------------------
@@TJvConversion.PercentDone
Summary
  Indicates the current progress percentage of the conversion process.
Description
  Read PercentDone to determine the current progress percentage of the conversion process.
See Also
  TJvConversion.OnProgress

----------------------------------------------------------------------------------------------------
@@TJvConversion.Retry
Summary
  Returns whether the conversion process can be retried.
Description
  TJvRichEdit calls Retry after a failed import or export process. If the converter indicates that
  the import or export process can be retried (by returning true) the rich edit control will start the
  import or export process once again, but now switches the source or target format of its content
  from
  RTF to plaintext or vice versa.
  
  For example if a plain text file is imported as a RTF file, an error will occur. Retrying to import
  the file but now as plain text will then succeed.
  
  As implemented in TJvConversion, Retry always returns false. Override this method in a descendant
  class to allow retrying of a conversion process.
Return value
  Returns true if the current conversion process can be retried, false otherwise.

----------------------------------------------------------------------------------------------------
@@TJvConversion.Open@TStream@TJvConversionKind
<COMBINE TJvConversion.Open@string@TJvConversionKind>

----------------------------------------------------------------------------------------------------
@@TJvConversion.ParentWindow
Summary
  Indicates the window used as a parent window for the converter.
Description
  Read ParentWindow to determine the window that is used as a parent window for the converter.
  
  Call <LINK TJvConversion.Init, Init> to set ParentWindow.
See Also
  TJvConversion.Init

----------------------------------------------------------------------------------------------------
@@TJvConversion.Open@string@TJvConversionKind
Summary
  Starts the conversion operation.
Description
  A TJvRichEdit control calls Open to start a conversion operation, either import or export as
  specified by the AKind parameter. This gives the converter a chance to open the source file or
  create the destination file, for example.
  
  Following a successful call to Open will be multiple calls to either ConvertRead or ConvertWrite.
Parameters
  AFileName - The file to import or export.
  Stream    - The stream to import or export.
  AKind     - Indicates whether to import or export the file or stream.
Return value
  Returns true on success, false on failure. If a converter returns false, the conversion operation
  is aborted.
See Also
  TJvConversion.Done, TJvConversion.Init

----------------------------------------------------------------------------------------------------
@@TJvConversion.IsFormatCorrect@TStream
<COMBINE TJvConversion.IsFormatCorrect@string>

----------------------------------------------------------------------------------------------------
@@TJvConversion.OnProgress
Summary
  Occurs when the converter is importing or exporting.
Description
  For certain descendants of TJvConversion, OnProgress occurs during import or export operations.
  OnProgress allows applications to provide feedback to the user about the progress of the slow
  process.
  
  Component writers can generate OnProgress events for new descendants of TJvConversion by calling
  the protected DoProgress method. These events are propagated to the TJvRichEdit control.
See Also
  TJvConversion.PercentDone, TJvCustomRichEdit.OnConversionProgress

----------------------------------------------------------------------------------------------------
@@TJvConversion.IsFormatCorrect@string
Summary
  Returns whether the converter can import a specific file or stream.
Description
  Call IsFormatCorrect to determine whether the converter can import the file specified by AFileName
  or the stream specified by AStream.
  
  TJvRichEdit will call IsFormatCorrect to determine whether the converter recognizes and can convert
  the contents of a file or stream.
  
  As implemented in TJvConversion, IsFormatCorrect always returns true. Override this method in a
  descendant class to check files or streams before the actual import operation.
Parameters
  AFileName - The file to import.
  AStream   - The stream to import.
Return value
  Returns true if the converter can import the specified file or stream, false otherwise.
See Also
  TJvConversion.CanHandle

----------------------------------------------------------------------------------------------------
@@TJvConversion.Init
Summary
  Initializes the converter.
Description
  Call Init to initialize the converter.
  
  TJvRichEdit calls the Init method of a converter before any other method to permit the converter to
  perform any necessary global initialization.
  
  A TJvRichEdit control guarantees that method Done is called after procedure Init is called.
Parameters
  AParentWindow - A handle to the top-level client window of the application to be used as a parent  
                 window for the converter. For example, after displaying and closing a dialog box, a
                   converter should reset the focus to this window.
See Also
  TJvConversion.Done

----------------------------------------------------------------------------------------------------
@@TJvConversion.Filter
Summary
  Returns the file mask of the converter.
Description
  Call Filter to retrieve a file mask of the files that can be imported or exported by the converter.
  For example, you can use the return value of a Filter call to set the \Filter property of a
  TOpenDialog component.
  
  As implemented in TJvConversion, Filter always returns an empty string. Override this method in a
  descendant class to return a meaningful value.
Return value
  Returns the file masks of the registered converters.

----------------------------------------------------------------------------------------------------
@@TJvConversion.Error
Summary
  Returns whether an error occurred during the conversion.
Description
  Error returns whether an error occurred during the conversion. The ErrorStr method describes the
  error.
  
  As implemented in TJvConversion, Error always returns false. Override this method in a descendant
  class to return a meaningful value.
Return value
  Returns true if an error occurred during the conversion, otherwise false.
See Also
  TJvConversion.ErrorStr, TJvConversion.UserCancel

----------------------------------------------------------------------------------------------------
@@TJvConversion.ErrorStr
Summary
  Returns text describing the error that occurred during the conversion.
Description
  Call ErrorStr to obtain the error message text describing the error that occurred during the
  conversion. Call Error to determine whether an error occurred.
  
  TJvRichEdit uses this method to raise an exception after a failed conversion.
  
  As implemented in TJvConversion, ErrorStr always returns the empty string. Override this method in
  a descendant class to return a meaningful value.
Return value
  Returns text describing the error that occurred during the conversion.
See Also
  TJvConversion.Error, TJvConversion.UserCancel

----------------------------------------------------------------------------------------------------
@@TJvConversion.ConvertWrite
Summary
  Writes BufSize bytes to the export destination from the memory buffer pointed to by Buffer.
Description
  A TJvRichEdit control calls ConvertWrite multiple times during an export operation. Each time this
  method is called the converter should read the data in Buffer, convert it, and write it to the
  destination file or stream.
Parameters
  Buffer  - A buffer to read from. The buffer contains data from the control that the converter
  writes            to some storage.
  BufSize - Size of Buffer.
Return value
  Returns the number of bytes actually read from Buffer.
See Also
  TJvConversion.ConvertRead

----------------------------------------------------------------------------------------------------
@@TJvConversion.Done
Summary
  Finalizes the converter.
Description
  Call Done to finalize the converter.
  
  TJvRichEdit calls Done after a conversion operation is finished, to permit the converter to perform
  any necessary finalization.
  
  A TJvRichEdit control guarantees that method Done is called after procedure Init is called.
See Also
  TJvConversion.Init

----------------------------------------------------------------------------------------------------
@@TJvConversion.CanHandle@TJvConversionKind
<COMBINE TJvConversion.CanHandle@string@TJvConversionKind>

----------------------------------------------------------------------------------------------------
@@TJvConversion.ConvertRead
Summary
  Reads BufSize bytes from the import source into the memory buffer pointed to by Buffer.
Description
  A TJvRichEdit control calls ConvertRead multiple times during an import operation. Each time this
  method is called the converter should read a chunk of the source file or stream, convert it, and
  put the converted data in Buffer.
Parameters
  Buffer  - A buffer to write to. The converter fills the buffer with data to transfer into the rich 
            edit control.
  BufSize - Size of Buffer.
Return value
  Returns the number of bytes actually stored in Buffer.
See Also
  TJvConversion.ConvertWrite

----------------------------------------------------------------------------------------------------
@@TJvConversion.CanHandle@string@TJvConversionKind
Summary
  Returns whether the converter can import or export files.
Description
  Call CanHandle to determine whether the converter can import or export files or streams, or whether
  the converter can import or export files with an extension as specified by AExtension.
  
  TJvRichEdit will call CanHandle to determine whether the converter can either import or export
  files and streams, and whether it can import or export files with a particular extension.
  
  As implemented in TJvConversion, CanHandle always returns true. Override this method in a
  descendant class to indicate that the converter can only operate on files with a particular
  extension.
Parameters
  AExtension - The extension of the file to import or export. The extension must be in lowercase.
  AKind      - Indicates whether to import or export.
Return value
  Returns true if the converter can handle this extension, false otherwise.
See Also
  TJvConversion.IsFormatCorrect

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caBackColor
The BackColor property.

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caDisabled
The Disabled property.

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caWeight
??

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caSubscript
The SubscriptStyle property.

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caRevAuthor
The RevAuthorIndex property.

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttributes
<TITLE TJvConsistentAttributes type> <COMBINE TJvConsistentAttribute>

----------------------------------------------------------------------------------------------------
@@TJvConversion
Summary
  Converts rich text data or plain text from one encoding format to another.
Description
  Write a TJvConversion descendant to convert rich text data or plain text from one specific encoding
  format to another. Register the object with a call to <LINK
  TJvCustomRichEdit.RegisterConversionFormat, RegisterConversionFormat>. Registered conversion
  objects are used by TJvRichEdit when either the LoadFromFile, LoadFromStream, SaveToFile or
  SaveToStream method of its <LINK TJvCustomRichEdit.Lines, Lines> property called.
  
  A TJvRichEdit control will call the methods of a conversion object in the following order:
  
  * <LINK TJvConversion.Init, Init>, to initialize the converter.
  * CanHandle, to determine whether the converter can handle a specific extension.
  * IsFormatCorrect, to determine whether the converter can handle a specific file or stream. (only
  for   import operations) * Open
  * Multiple <LINK TJvConversion.ConvertRead, ConvertRead> or <LINK TJvConversion.ConvertWrite,
  ConvertWrite> calls.
  * Retry, if an \error occurred, followed again by multiple ConvertRead or ConvertWrite calls.
  * Done, to finalize the converter.
  
  The following objects are descendants of TJvConversion:
  <TABLE>
  Class                Function
  -------------------  -------------------------------------------------------
  TJvRTFConversion     Reads or writes rich text data.
  TJvTextConversion    Reads or writes plain text.
  TJvStreamConversion  Base class for stream converters.
  TJvOEMConversion     Converts rich text data from and to OEM formatted text.
  TJvMSTextConversion  Wrapper for a MS Text conversion dll.
  </TABLE>

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caOffset
The Offset property.

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caHidden
The Hidden property.

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caCharset
Description for caCharset

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caLink
The Link property.

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caProtected
The Protected property.

----------------------------------------------------------------------------------------------------
@@THeadingStyle
<TITLE THeadingStyle type>
Summary
  Enumerates styles for paragraphs.
Description
  Use the THeadingStyle type to specify a specific built-in character and paragraph style for a
  paragraph.
See Also
  TJvParaAttributes.HeadingStyle

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute
<TITLE TJvConsistentAttribute type>
Summary
  Identifies specific properties of a TJvTextAttributes object.
Description
  The TJvConsistentAttribute type is used to identify a specific property of a TJvTextAttributes
  object.
  
  TJvConsistentAttributes is a set of TJvConsistentAttribute values.

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caBold
The Style property, specifically the fsBold value.

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caColor
The Color property.

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caFace
The Name property.

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caItalic
The Style property, specifically the fsItalic value.

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caSize
The Size property.

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caStrikeOut
The Style property, specifically the fsStrikeOut value.

----------------------------------------------------------------------------------------------------
@@TJvConsistentAttribute.caUnderline
The Style property, specifically the fsUnderline value.

----------------------------------------------------------------------------------------------------
@@RichEditVersion
<TITLE RichEditVersion variable>
Summary
  Indicates the rich edit controls version.
Description
  \Read the RichEditVersion variable to determine the rich edit controls version on the current
  system.
  
  The following list describes which versions of Rich Edit are included in which releases of
  Microsoft windows:
  <TABLE>
  Windows XP SP1  Includes Rich Edit 4.1, Rich Edit 3.0, and a Rich Edit 1.0 emulator.
  Windows XP      Includes Rich Edit 3.0 with a Rich Edit 1.0 emulator.
  Windows Me      Includes Rich Edit 1.0 and 3.0.
  Windows 2000    Includes Rich Edit 3.0 with a Rich Edit 1.0 emulator.
  Windows NT 4.0  Includes Rich Edit 1.0 and 2.0.
  Windows 98      Includes Rich Edit 1.0 and 2.0.
  Windows 95      Includes only Rich Edit 1.0; however, Riched20.dll is compatible with
                    Windows 95 and may be installed by an application that requires it.
  </TABLE>
  
  But there are more versions of the Rich Edit, for example v4.0 that is included in Microsoft Visual
  Studio .NET.
  Note
  TJvRichEdit does <I>not</I> support Rich Edit 4.1, which is a unicode only version.

----------------------------------------------------------------------------------------------------
@@BitmapToRTF
<TITLE BitmapToRTF procedure>
Summary
  Converts a bitmap to rich text format.
Description
  Use the BitmapToRTF or BitmapToRTF2 procedures to insert bitmaps in a rich edit control.
  BitmapToRTF2 returns true if the bitmap is written to stream as RTF, or false if an error occurred.
  
  For example, to replace the selected text with a bitmap, do the following:
  <CODE>
      Stream := TMemoryStream.Create;
      try
        BitmapToRTF(SomeBitmap, Stream);
        Stream.Position := 0;
  
        JvRichEdit1.StreamFormat := sfRichText;
        JvRichEdit1.StreamMode := [smSelection, smPlainRtf];
        JvRichEdit1.Lines.LoadFromStream(Stream);
      finally
        Stream.Free;
      end; </CODE>
  
  * If you stream out the RTF content of the rich edit control, the bitmaps are <I>not</I> included.
    Use <LINK TJvCustomRichEdit.InsertGraphic, InsertGraphic> if you want the bitmaps to be included
  in
    the streamed out RTF data.
  * <LINK TJvRichEdit.AllowObjects> must be set to true.
  * BitmapToRTF is the fastest, <LINK TJvCustomRichEdit.InsertGraphic, InsertGraphic> the slowest.
Parameters
  ABitmap - The bitmap to convert.
  AStream - Stream where to save the RTF data to.
See Also
  TJvRichEdit, TJvCustomRichEdit.InsertGraphic

----------------------------------------------------------------------------------------------------
@@BitmapToRTF2
<TITLE BitmapToRTF2 function> <COMBINE BitmapToRTF>

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.Underline
Summary
  Write here a summary (1 line)
Description
  Write here a description
See Also
  List here other properties, methods (comma seperated)
  Remove the 'See Also' section if there are no references

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.UnderlineColor
Summary
  Determines in which color the text is underlined.
Description
  Use UnderlineColor to specify in which color the text is underlined. Use UnderlineType to specify
  how and whether the text is underlined.
  Note
  If you stream out the text as RTF, underlined text with a color other than ucBlack is streamed out
  as <I>non</I> underlined text.
See Also
  TJvTextAttributes.UnderlineType

----------------------------------------------------------------------------------------------------
@@TJvTextAttributes.UnderlineType
Summary
  Determines whether and how the text is underlined.
Description
  Use UnderlineType to specify how and whether the text is underlined. Use UnderlineColor to specify
  in which color the text is underlined.
See Also
  TJvTextAttributes.UnderlineColor

----------------------------------------------------------------------------------------------------
@@TJvTextConversion
Summary
  Reads or writes plain text.
Description
  The TJvTextConversion is an "empty" converter used to read or write to text files. Empty means that
  TJvTextConversion does not perform any conversion of the plain text it imports or exports.

----------------------------------------------------------------------------------------------------
@@TLineSpacingRule
<TITLE TLineSpacingRule type>
Summary
  Enumerates types of line spacing.
Description
  The TLineSpacingRule type is used to specify a type of line spacing.

----------------------------------------------------------------------------------------------------
@@TLineSpacingRule.lsSingle
Single spacing.

----------------------------------------------------------------------------------------------------
@@TLineSpacingRule.lsOneAndHalf
One-and-a-half spacing.

----------------------------------------------------------------------------------------------------
@@TLineSpacingRule.lsDouble
Double spacing.

----------------------------------------------------------------------------------------------------
@@TLineSpacingRule.lsSpecifiedOrMore
Property <LINK TJvParaAttributes.LineSpacing, LineSpacing> of a TJvCustomRichEdit specifies the spacing from one line to the next, in points; however, if <LINK TJvParaAttributes.LineSpacing,
LineSpacing> specifies a value that is less than single spacing, the control displays single-spaced text.

----------------------------------------------------------------------------------------------------
@@TLineSpacingRule.lsSpecified
Property <LINK TJvParaAttributes.LineSpacing, LineSpacing> of a TJvCustomRichEdit specifies the spacing from one line to the next, in points. The control uses the exact spacing specified, even if <LINK TJvParaAttributes.LineSpacing, LineSpacing> specifies a value that is less than single spacing.

----------------------------------------------------------------------------------------------------
@@TLineSpacingRule.lsMultiple
Property <LINK TJvParaAttributes.LineSpacing, LineSpacing> of a TJvCustomRichEdit specifies the spacing, in lines, from one line to the next; thus, setting <LINK TJvParaAttributes.LineSpacing,
LineSpacing> to 1 produces single-spaced text, 2 is double spaced, 3 is triple spaced, and so on.

----------------------------------------------------------------------------------------------------
@@TParaAlignment
<TITLE TParaAlignment type>
Summary
  Enumerates kinds of paragraph alignments.
Description
  The TParaAlignment type is used to specify how a paragraph is aligned in a rich edit control.

----------------------------------------------------------------------------------------------------
@@TParaAlignment.paLeftJustify
Paragraphs are aligned with the left margin.

----------------------------------------------------------------------------------------------------
@@TParaAlignment.paRightJustify
Paragraphs are aligned with the right margin.

----------------------------------------------------------------------------------------------------
@@TParaAlignment.paCenter
Paragraphs are centered.

----------------------------------------------------------------------------------------------------
@@TParaAlignment.paJustify
Paragraphs are justified. Rich edit controls earlier than Rich Edit 3.0 display the text aligned with the left margin.

----------------------------------------------------------------------------------------------------
@@TRichDropEffect
<TITLE TRichDropEffect type>
Summary
  Enumerates effects of a drag-drop operation.
Description
  Use the TRichDropEffect type to specify an effect of a drag-drop operation.
See Also
  TJvCustomRichEdit.OnDragAllowed, TJvCustomRichEdit.OnGetDragDropEffect

----------------------------------------------------------------------------------------------------
@@TRichDropEffect.rdeCopy
A copy operation

----------------------------------------------------------------------------------------------------
@@TRichDropEffect.rdeMove
A move operation

----------------------------------------------------------------------------------------------------
@@TRichDropEffect.rdeLink
A link from the dropped data to the original data would be established.

----------------------------------------------------------------------------------------------------
@@TRichDropEffect.rdeScroll
A drag scroll operation is about to occur or is occurring in the target.

----------------------------------------------------------------------------------------------------
@@TRichDropEffects
<TITLE TRichDropEffects type> <COMBINE TRichDropEffect>

----------------------------------------------------------------------------------------------------
@@TRichEditDragAllowedEvent
<TITLE TRichEditDragAllowedEvent type> <COMBINE TJvCustomRichEdit.OnDragAllowed>

----------------------------------------------------------------------------------------------------
@@TRichEditFindCloseEvent
<TITLE TRichEditFindCloseEvent type> <COMBINE TJvCustomRichEdit.OnCloseFindDialog>

----------------------------------------------------------------------------------------------------
@@TRichEditFindErrorEvent
<TITLE TRichEditFindErrorEvent type> <COMBINE TJvCustomRichEdit.OnTextNotFound>

----------------------------------------------------------------------------------------------------
@@TRichEditGetDragDropEffectEvent
<TITLE TRichEditGetDragDropEffectEvent type> <COMBINE TJvCustomRichEdit.OnGetDragDropEffect>

----------------------------------------------------------------------------------------------------
@@TRichEditProgressEvent
<TITLE TRichEditProgressEvent type> <COMBINE TJvCustomRichEdit.OnConversionProgress>

----------------------------------------------------------------------------------------------------
@@TRichEditProtectChangeEx
<TITLE TRichEditProtectChangeEx type> <COMBINE TJvCustomRichEdit.OnProtectChangeEx>

----------------------------------------------------------------------------------------------------
@@TRichEditQueryAcceptData
<TITLE TRichEditQueryAcceptData type> <COMBINE TJvCustomRichEdit.OnQueryAcceptData>

----------------------------------------------------------------------------------------------------
@@TRichEditURLClickEvent
<TITLE TRichEditURLClickEvent type> <COMBINE TJvCustomRichEdit.OnURLClick>

##@@TRichEditVersion
##<TITLE TRichEditVersion type>
##Summary
##  Represents different kinds of versions for rich edit controls.
##Description
##  The TRichEditVersion type represents different kinds of versions for rich edit controls, that are
##  supported by TJvRichEdit. It ranges from 1 to 4, representing the original specification for rich
##  edit controls 1.0, to version 4.0.
##Note
##  The Rich Edit 4.1. specification is <I>not</I> included in the TRichEditVersion type, because v4.1
##  only supports unicode controls, which TJvRichEdit is not.
##See Also
##  RichEditVersion, TJvRichEdit

----------------------------------------------------------------------------------------------------
@@TRichLangOption
<TITLE TRichLangOption type>
Summary
  Enumerates language options.
Description
  The TRichLangOption is used to specify a specific language option.
  
  TRichLangOptions is a set of TRichLangOption values.
See Also
  TJvCustomRichEdit.LangOptions

----------------------------------------------------------------------------------------------------
@@TRichLangOption.rlAutoKeyboard
Automatically changes the keyboard layout when the user explicitly changes to a different font, or when the user explicitly changes the insertion point to a new location in the text.

----------------------------------------------------------------------------------------------------
@@TRichLangOption.rlAutoFont
Automatically changes fonts when the user explicitly changes to a different keyboard layout.

----------------------------------------------------------------------------------------------------
@@TRichLangOption.rlImeCancelComplete
Determines how the control uses the composition string of an IME if the user cancels it. If this flag is set, the control discards the composition string. If this flag is not set, the control uses the composition string as the result string.

----------------------------------------------------------------------------------------------------
@@TRichLangOption.rlImeAlwaysSendNotify
\Controls how Rich Edit notifies the client during IME composition: If this flag is not set, No
EN_CHANGE or EN_SELCHANGE notifications during undetermined state. Send notification when final string comes in. (default) If this flag is set, Send EN_CHANGE and EN_SELCHANGE events during undetermined state.

----------------------------------------------------------------------------------------------------
@@TRichLangOptions
<TITLE TRichLangOptions type> <COMBINE TRichLangOption>

----------------------------------------------------------------------------------------------------
@@TRichSearchType
<TITLE TRichSearchType type>
Summary
  Specifies parameters for a search operation.
Description
  Use the TRichSearchType type to specify parameters for a search operation.
  
  TRichSearchTypes is a set of TRichSearchType values.
See Also
  TJvCustomRichEdit.FindText

----------------------------------------------------------------------------------------------------
@@TRichSearchType.stWholeWord
Searches only for whole words that match the search string.

----------------------------------------------------------------------------------------------------
@@TRichSearchType.stMatchCase
The search operation is case-sensitive. If not set, the search operation is case-insensitive.

----------------------------------------------------------------------------------------------------
@@TRichSearchType.stBackward
<B>Rich Edit 2.0 and later:</B> If set, the search is from the end of the current selection to the end of the document. If not set, the search is from the end of the current selection to the beginning of the document. <B>Rich Edit 1.0:</B> The stBackward flag is ignored. The search is always from the end of the current selection to the end of the document.

----------------------------------------------------------------------------------------------------
@@TRichSearchType.stSetSelection
Selects the found text, and scrolls it into view.

----------------------------------------------------------------------------------------------------
@@TRichSearchTypes
<TITLE TRichSearchTypes type> <COMBINE TRichSearchType>

----------------------------------------------------------------------------------------------------
@@TRichSelection
<TITLE TRichSelection type>
Summary
  Enumerates types of selections.
Description
  The TRichSelection is used to specify a specific selection type for a rich edit control.
  
  TRichSelectionType is a set of TRichSelection values.
See Also
  TJvCustomRichEdit.SelectionType

----------------------------------------------------------------------------------------------------
@@TRichSelection.stText
Text.

----------------------------------------------------------------------------------------------------
@@TRichSelection.stObject
At least one Component Object Model (COM) object.

----------------------------------------------------------------------------------------------------
@@TRichSelection.stMultiChar
More than one character of text.

----------------------------------------------------------------------------------------------------
@@TRichSelection.stMultiObject
More than one COM object.

----------------------------------------------------------------------------------------------------
@@TRichSelectionType
<TITLE TRichSelectionType type> <COMBINE TRichSelection>

----------------------------------------------------------------------------------------------------
@@TRichStreamFormat
<TITLE TRichStreamFormat type>
Summary
  Enumerates data formats.
Description
  Use the TRichStreamFormat type to specify a specific data format.
See Also
  TJvCustomRichEdit.StreamFormat, TJvCustomRichEdit.StreamMode

----------------------------------------------------------------------------------------------------
@@TRichStreamFormat.sfDefault
Either Rich Text \Format or Text.

----------------------------------------------------------------------------------------------------
@@TRichStreamFormat.sfRichText
Rich Text \Format (RTF).

----------------------------------------------------------------------------------------------------
@@TRichStreamFormat.sfPlainText
Text.

----------------------------------------------------------------------------------------------------
@@TRichStreamMode
<TITLE TRichStreamMode type>
Summary
  Enumerates options for streaming text in and out.
Description
  Use the TRichStreamMode type to specify options for streaming text in and out.
  
  TRichStreamModes is a set of TRichStreamMode values.
See Also
  TJvCustomRichEdit.StreamFormat, TJvCustomRichEdit.StreamMode

----------------------------------------------------------------------------------------------------
@@TRichStreamMode.smSelection
If specified, when loading a stream, the data stream replaces the contents of the current selection, and when saving to a stream, the rich edit control streams out only the contents of the current selection.

If <I>not</I> specified, when loading a stream, the data stream replaces the entire contents of the control, and when saving to a stream, the control streams out the entire contents.

----------------------------------------------------------------------------------------------------
@@TRichStreamMode.smPlainRtf
If specified only keywords common to all languages are streamed in and out. Language-specific RTF keywords in are ignored. If not specified, all keywords are streamed in and out. This flag is ignored if the format of the text is not RTF. You can set the format of the text with property <LINK
TJvCustomRichEdit.StreamFormat, StreamFormat>.

----------------------------------------------------------------------------------------------------
@@TRichStreamMode.smNoObjects
Streams the text out as RTF with spaces in place of Component Object Model (COM) objects. Useful if an application stores COM objects itself, as RTF representation of COM objects is not very compact.
The control word, \objattph, followed by a space denotes the object position. This flag is ignored if
the format of the text is not RTF. You can set the format of the text with property <LINK
TJvCustomRichEdit.StreamFormat, StreamFormat>.

----------------------------------------------------------------------------------------------------
@@TRichStreamMode.smUnicode
Rich Edit 2.0 and later: Indicates that the text that is streamed in or out should be treated as unicode text. This flag is ignored if the format of the text is not plain text. You can set the format of the text with property <LINK TJvCustomRichEdit.StreamFormat, StreamFormat>.

----------------------------------------------------------------------------------------------------
@@TRichStreamModes
<TITLE TRichStreamModes type> <COMBINE TRichStreamMode>

----------------------------------------------------------------------------------------------------
@@TSubscriptStyle
<TITLE TSubscriptStyle type>
Summary
  Identifies styles for characters.
Description
  Use the TSubscriptStyle type to specify a style for characters, either normal, subscript or
  superscript.
See Also
  TJvTextAttributes.SubscriptStyle

----------------------------------------------------------------------------------------------------
@@TSubscriptStyle.ssNone
Normal style.

----------------------------------------------------------------------------------------------------
@@TSubscriptStyle.ssSubscript
Subscript style

----------------------------------------------------------------------------------------------------
@@TSubscriptStyle.ssSuperscript
Superscript style.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor
<TITLE TUnderlineColor type>
Summary
  Enumerates colors for underlines.
Description
  Use the TUnderlineColor type to specify a specific color used to underline text.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucBlack
Black.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucBlue
Blue.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucAqua
Aqua.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucLime
Lime.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucFuchsia
Fuchsia.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucRed
Red.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucYellow
Yellow.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucWhite
White.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucNavy
Navy.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucTeal
Teal.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucGreen
Green.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucPurple
Purple.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucMaroon
Maroon.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucOlive
Olive.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucGray
Gray.

----------------------------------------------------------------------------------------------------
@@TUnderlineColor.ucSilver
Silver.

----------------------------------------------------------------------------------------------------
@@TUnderlineType
<TITLE TUnderlineType type>
Summary
  Represents kinds of underline types.
Description
  The TUnderlineType type is used to specify whether and how text is underlined in a rich edit
  control.
See Also
  TJvTextAttributes.UnderlineType

----------------------------------------------------------------------------------------------------
@@TUnderlineType.utNone
No underline. This is the default.

----------------------------------------------------------------------------------------------------
@@TUnderlineType.utSolid
Solid underlined text.

----------------------------------------------------------------------------------------------------
@@TUnderlineType.utWord
Underline words only. The rich edit control displays the text with a solid underline.

----------------------------------------------------------------------------------------------------
@@TUnderlineType.utDouble
Double-underlined text. The rich edit control displays the text with a solid underline.

----------------------------------------------------------------------------------------------------
@@TUnderlineType.utDotted
Dotted underlined text. For versions earlier than Rich Edit 3.0, text is displayed with a solid underline.

----------------------------------------------------------------------------------------------------
@@TUnderlineType.utDash
Dashed underlined text.

----------------------------------------------------------------------------------------------------
@@TUnderlineType.utDashDot
Dash-dot underlined text.

----------------------------------------------------------------------------------------------------
@@TUnderlineType.utDashDotDot
Dash-dot-dot underlined text.

----------------------------------------------------------------------------------------------------
@@TUnderlineType.utWave
Waved underlined text.

----------------------------------------------------------------------------------------------------
@@TUnderlineType.utThick
Thick underlined text

----------------------------------------------------------------------------------------------------
@@TUndoName
<TITLE TUndoName type>
Summary
  Represents types of rich edit control actions that can be undone or redone.
Description
  The TUndoName type represents types of rich edit control actions that can be undone or redone.
See Also
  TJvCustomRichEdit.RedoName, TJvCustomRichEdit.UndoName

----------------------------------------------------------------------------------------------------
@@TUndoName.unUnknown
The type of undo action is unknown.

----------------------------------------------------------------------------------------------------
@@TUndoName.unTyping
Typing operation.

----------------------------------------------------------------------------------------------------
@@TUndoName.unDelete
Delete operation.

----------------------------------------------------------------------------------------------------
@@TUndoName.unDragDrop
Drag and drop operation.

----------------------------------------------------------------------------------------------------
@@TUndoName.unCut
Cut operation.

----------------------------------------------------------------------------------------------------
@@TUndoName.unPaste
Paste operation.

