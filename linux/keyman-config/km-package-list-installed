#!/usr/bin/python3

import argparse
import logging
import os
from keyman_config import __version__

def main():
    parser = argparse.ArgumentParser(description='Show installed Keyman keyboards with name, version, id and description.')
    parser.add_argument('-s', "--short", help='short format of name, version, id', action="store_true")
    parser.add_argument('--version', action='version', version='%(prog)s version '+__version__)
    parser.add_argument('-v', action='store_true', help='verbose logging')
    parser.add_argument('-vv', action='store_true', help='very verbose logging')

    args = parser.parse_args()
    if args.v:
        logging.basicConfig(level=logging.INFO, format='%(levelname)s:%(message)s')
    elif args.vv:
        logging.basicConfig(level=logging.DEBUG, format='%(levelname)s:%(message)s')
    else:
        logging.basicConfig(format='%(levelname)s:%(message)s')

    from keyman_config.list_installed_kmp import get_installed_kmp

    installed_kmp = get_installed_kmp()
    print("--- Installed keyboards ---")
    for kmp in sorted(installed_kmp):
        print(installed_kmp[kmp]['name'] + ", version:", installed_kmp[kmp]['version'] + ", id:", kmp)
        if not args.short:
            if installed_kmp[kmp]['version'] != installed_kmp[kmp]['kmpversion']:
                print("Version mismatch. Installed keyboard is %s. Website says it is %s." % (installed_kmp[kmp]['kmpversion'], installed_kmp[kmp]['version']))
            if installed_kmp[kmp]['name'] != installed_kmp[kmp]['kmpname']:
                print("Name mismatch. Installed keyboard is %s. Website says it is %s." % (installed_kmp[kmp]['name'], installed_kmp[kmp]['kmpname']))

            if installed_kmp[kmp]['description']:
                print(installed_kmp[kmp]['description'])
            else:
                print("No description")
            print(os.linesep)


if __name__ == "__main__":
    main()
