!include ..\..\Defines.mak

##
## In this file, $VERSION and $RELEASE will be replaced by mkver. These are not
## Make variables, but mkver variables.
##

# In dev environments, we'll hack the tier to alpha; CI sets this for us in real builds.
!ifndef TIER
TIER=alpha
!endif

# We use different directories so that heat generates
# different identifiers for the various folders
KEYMAN_WIX_TEMP_XML=$(TEMP)\keyman_wix_build\xml
KEYMAN_WIX_TEMP_CEF=$(TEMP)\keyman_wix_build\cef
KEYMAN_WIX_TEMP_TEMPLATES=$(TEMP)\keyman_wix_build\templates
KEYMAN_WIX_TEMP_MODELCOMPILER=$(TEMP)\keyman_wix_build\ModelCompiler

KEYMAN_DEVELOPER_TEMPLATES_ROOT=$(ROOT)\src\developer\kmconvert\data
KEYMAN_MODELCOMPILER_ROOT=$(KEYMAN_ROOT)\developer\js

copykmdev: makeinstaller
    -mkdir $(ROOT)\release\$VERSION
    copy /Y $(ROOT)\src\developer\inst\keymandeveloper.msi $(ROOT)\release\$VERSION\keymandeveloper.msi
    copy /Y $(ROOT)\src\developer\inst\keymandeveloper-$VERSION.exe $(ROOT)\release\$VERSION\keymandeveloper-$VERSION.exe

test-releaseexists:
    if exist $(ROOT)\release\$VERSION\keymandeveloper*.msi echo. & echo Release $VERSION already exists. Delete it or update src\version.txt and try again & exit 1

candle: heat-cef heat-xml heat-templates heat-model-compiler
    $(WIXCANDLE) -dVERSION=$VERSION -dRELEASE=$RELEASE kmdev.wxs
    $(WIXCANDLE) -dVERSION=$VERSION -dRELEASE=$RELEASE -dXmlSourceDir=$(ROOT)\src\developer\TIKE\xml xml.wxs
    $(WIXCANDLE) -dVERSION=$VERSION -dRELEASE=$RELEASE -dCefSourceDir=$(KEYMAN_CEF4DELPHI_ROOT) cef.wxs
    $(WIXCANDLE) -dVERSION=$VERSION -dRELEASE=$RELEASE -dTemplatesSourceDir=$(KEYMAN_DEVELOPER_TEMPLATES_ROOT) templates.wxs
    $(WIXCANDLE) -dVERSION=$VERSION -dRELEASE=$RELEASE -dModelCompilerSourceDir=$(KEYMAN_WIX_TEMP_MODELCOMPILER) kmlmc.wxs

clean-heat: clean-heat-model-compiler

heat-xml:
    # We copy the files to a temp folder in order to exclude thumbs.db, .vs, etc from harvesting
    -rmdir /s/q $(KEYMAN_WIX_TEMP_XML)
    mkdir $(KEYMAN_WIX_TEMP_XML)
    xcopy $(ROOT)\src\developer\TIKE\xml\* $(KEYMAN_WIX_TEMP_XML)\ /s
    -del /f /s /q $(KEYMAN_WIX_TEMP_XML)\Thumbs.db
    -rmdir /s/q $(KEYMAN_WIX_TEMP_XML)\app\node_modules
    -for /f %i in ('dir /a:d /s /b $(KEYMAN_WIX_TEMP_XML)\.vs') do rd /s /q %i
    $(WIXHEAT) dir $(KEYMAN_WIX_TEMP_XML) -o xml.wxs -ag -cg XML -dr INSTALLDIR -var var.XmlSourceDir -wx -nologo
    # When we candle/light build, we can grab the source files from the proper root so go ahead and delete the temp folder again
    -rmdir /s/q $(KEYMAN_WIX_TEMP_XML)

heat-templates:
    # We copy the files to a temp folder in order to exclude .git and README.md from harvesting
    -rmdir /s/q $(KEYMAN_WIX_TEMP_TEMPLATES)
    mkdir $(KEYMAN_WIX_TEMP_TEMPLATES)
    xcopy $(KEYMAN_DEVELOPER_TEMPLATES_ROOT)\* $(KEYMAN_WIX_TEMP_TEMPLATES)\ /s
    $(WIXHEAT) dir $(KEYMAN_WIX_TEMP_TEMPLATES) -o templates.wxs -ag -cg Templates -dr dirProjects -var var.TemplatesSourceDir -wx -nologo
    # When we candle/light build, we can grab the source files from the proper root so go ahead and delete the temp folder again
    -rmdir /s/q $(KEYMAN_WIX_TEMP_TEMPLATES)

heat-cef:
    # We copy the files to a temp folder in order to exclude .git and README.md from harvesting
    -rmdir /s/q $(KEYMAN_WIX_TEMP_CEF)
    mkdir $(KEYMAN_WIX_TEMP_CEF)
    xcopy $(KEYMAN_CEF4DELPHI_ROOT)\* $(KEYMAN_WIX_TEMP_CEF)\ /s
    $(WIXHEAT) dir $(KEYMAN_WIX_TEMP_CEF) -o cef.wxs -ag -cg CEF -dr INSTALLDIR -var var.CefSourceDir -wx -nologo
    # When we candle/light build, we can grab the source files from the proper root so go ahead and delete the temp folder again
    -rmdir /s/q $(KEYMAN_WIX_TEMP_CEF)

heat-model-compiler:
    # Build kmlmc
    cd $(KEYMAN_MODELCOMPILER_ROOT)

!ifdef GIT_BASH_FOR_KEYMAN
    $(GIT_BASH_FOR_KEYMAN) build.sh -version "$VERSION" -tier "$(TIER)"
!else
    start /wait .\build.sh -version "$VERSION" -tier "$(TIER)"
!endif
    # While we could use npm-bundle or similar, this gives us more control on the set of
    # files we want to distribute with the Keyman Developer installer. For users on other
    # operating systems, node.js is a dependency and the compiler can be installed with
    # `npm install @keymanapp/lexical-model-compiler`.

    # We copy the files to a temp folder in order to exclude thumbs.db, .vs, etc from harvesting
    -rmdir /s/q $(KEYMAN_WIX_TEMP_MODELCOMPILER)
    mkdir $(KEYMAN_WIX_TEMP_MODELCOMPILER)
    xcopy $(KEYMAN_MODELCOMPILER_ROOT)\* $(KEYMAN_WIX_TEMP_MODELCOMPILER)\ /s

    # Remove files we don't want to harvest; build a product node_modules folder
    cd $(KEYMAN_WIX_TEMP_MODELCOMPILER)

    # Clear out the node_modules folder while keeping any pre-established npm links.
!ifdef GIT_BASH_FOR_KEYMAN
    $(GIT_BASH_FOR_KEYMAN) $(KEYMAN_ROOT)\resources\package-utils.sh clean-external-deps
!else
    start /wait $(KEYMAN_ROOT)\resources\package-utils.sh clean-external-deps
!endif

    npm install --production

    # We don't need source for the compiler or the unit tests
    -rmdir /s/q $(KEYMAN_WIX_TEMP_MODELCOMPILER)\source
    -rmdir /s/q $(KEYMAN_WIX_TEMP_MODELCOMPILER)\tests

    # We don't need another binary copy of node
    -rmdir /s/q $(KEYMAN_WIX_TEMP_MODELCOMPILER)\node_modules\node

    # We don't need the build script
    -del $(KEYMAN_WIX_TEMP_MODELCOMPILER)\build.sh

    # Build the .wxs file
    cd $(ROOT)\src\developer\inst
    $(WIXHEAT) dir $(KEYMAN_WIX_TEMP_MODELCOMPILER) -o kmlmc.wxs -ag -cg ModelCompiler -dr INSTALLDIR -var var.ModelCompilerSourceDir -wx -nologo

clean-heat-model-compiler:
    # the production build generates files that are not in source, e.g. .ps1 scripts
    # When we candle/light build, we can grab the source files from the proper root so go ahead and delete the temp folder again
    -rmdir /s/q $(KEYMAN_WIX_TEMP_MODELCOMPILER)

makeinstaller:
    cd $(ROOT)\src\developer\inst
    echo [Setup] > setup.inf
    echo Version=$VERSION >> setup.inf
    echo MSIFileName=keymandeveloper.msi >> setup.inf
    echo Title=Keyman Developer $RELEASE >>setup.inf
    $(WZZIP) setup.zip keymandeveloper.msi setup.inf
    copy /b $(ROOT)\bin\developer\setup.exe + setup.zip keymandeveloper-$VERSION.exe
    $(SIGNCODE) /d "Keyman Developer" keymandeveloper-$VERSION.exe
