//*************************************************************
//                          EwbBehaviorsComp                  *
//                                                            *
//                     Freeware Component                     *
//                     For Delphi 5 to XE                     *
//                            by                              *
//                     Eran Bodankin                          *
//      Developing Team:                                      *
//          Serge Voloshenyuk (SergeV@bsalsa.com)             *
//          Eran Bodankin (bsalsa) -(bsalsa@gmail.com)        *
//                                                            *
//       Documentation and updated versions:                  *
//                                                            *
//               http://www.bsalsa.com                        *
//*************************************************************
{LICENSE:
THIS SOFTWARE IS PROVIDED TO YOU "AS IS" WITHOUT WARRANTY OF ANY KIND,
EITHER EXPRESSED OR IMPLIED INCLUDING BUT NOT LIMITED TO THE APPLIED
WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
YOU ASSUME THE ENTIRE RISK AS TO THE ACCURACY AND THE USE OF THE SOFTWARE
AND ALL OTHER RISK ARISING OUT OF THE USE OR PERFORMANCE OF THIS SOFTWARE
AND DOCUMENTATION. BSALSA PRODUCTIONS DOES NOT WARRANT THAT THE SOFTWARE IS ERROR-FREE
OR WILL OPERATE WITHOUT INTERRUPTION. THE SOFTWARE IS NOT DESIGNED, INTENDED
OR LICENSED FOR USE IN HAZARDOUS ENVIRONMENTS REQUIRING FAIL-SAFE CONTROLS,
INCLUDING WITHOUT LIMITATION, THE DESIGN, CONSTRUCTION, MAINTENANCE OR
OPERATION OF NUCLEAR FACILITIES, AIRCRAFT NAVIGATION OR COMMUNICATION SYSTEMS,
AIR TRAFFIC CONTROL, AND LIFE SUPPORT OR WEAPONS SYSTEMS. BSALSA PRODUCTIONS SPECIFICALLY
DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTY OF FITNESS FOR SUCH PURPOSE.

You may use/ change/ modify the component under 3 conditions:
1. In your website, add a link to "http://www.bsalsa.com"
2. In your application, add credits to "Embedded Web Browser"
3. Mail me  (bsalsa@gmail.com) any code change in the unit  for the benefit
   of the other users.
4. Please, consider donation in our web site!
{*******************************************************************************}

{**********************************
 ***         IMPORTANT          ***
 **********************************
This file has been modified from it's original because TLIBIMP did not
 import the file correctly.
 The command line used to import this file was as follows:
 The installed version of IE for this import was IE 6.0.2600.0000
 tlibimp -Hs- -Hr- -Fe- \WINNT\SYSTEM32\mshtml.tlb
 }
//$Id: Mshtml_Ewb.pas,v 1.2.2.1 2006/11/29 22:13:01 sergev Exp $

unit MSHTML_EWB;

{$I EWB.inc}
{$IFDEF DELPHI6_UP}
{$WARN UNIT_PLATFORM OFF}
{$ENDIF}
// ************************************************************************ //
// WARNING
// -------
// The types declared in this file were generated from data read from a
// Type Library. If this type library is explicitly or indirectly (via
// another type library referring to this type library) re-imported, or the
// 'Refresh' command of the Type Library Editor activated while editing the
// Type Library, the contents of this file will be regenerated and all
// manual modifications will be lost.
// ************************************************************************ //

// PASTLWTR : 1.2
// File generated on 8/9/2002 3:26:08 PM from Type Library described below.

// ************************************************************************  //
// Type Lib: \WINNT\SYSTEM32\mshtml.tlb (1)
// LIBID: {3050F1C5-98B5-11CF-BB82-00AA00BDCE0B}
// LCID: 0
// Helpfile:
// HelpString: Microsoft HTML Object Library
// DepndLst:
//   (1) v2.0 stdole, (C:\WINNT\System32\stdole2.tlb)
// Errors:
//   Hint: Member 'type' of 'IHTMLEventObj' changed to 'type_'
//   Hint: Parameter 'String' of IHTMLElement.toString changed to 'String_'
//   Hint: Parameter 'String' of IHTMLStyle.toString changed to 'String_'
//   Hint: Parameter 'String' of IHTMLDOMTextNode.toString changed to 'String_'
//   Hint: Enum Member 'htmlInputImage' of '_htmlInput' changed to 'htmlInputImage_'
//   Hint: Parameter 'String' of IHTMLElementCollection.toString changed to 'String_'
//   Hint: Member 'type' of 'IHTMLStyleSheet' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLStyleSheet' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLLinkElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLLinkElement' changed to 'type_'
//   Hint: Parameter 'Unit' of IHTMLTxtRange.expand changed to 'Unit_'
//   Hint: Parameter 'Unit' of IHTMLTxtRange.move changed to 'Unit_'
//   Hint: Parameter 'Unit' of IHTMLTxtRange.moveStart changed to 'Unit_'
//   Hint: Parameter 'Unit' of IHTMLTxtRange.moveEnd changed to 'Unit_'
//   Hint: Parameter 'String' of IHTMLTxtRange.findText changed to 'String_'
//   Hint: Member 'type' of 'IHTMLAnchorElement2' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLAnchorElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLUListElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLUListElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLOListElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLOListElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLLIElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLLIElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLSelectElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLSelectElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLSelectionObject' changed to 'type_'
//   Hint: Member 'label' of 'IHTMLOptionElement3' changed to 'label_'
//   Hint: Member 'label' of 'DispHTMLOptionElement' changed to 'label_'
//   Hint: Member 'type' of 'IHTMLInputElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputHiddenElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputTextElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputFileElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLOptionButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputImage' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLInputElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLTextAreaElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLTextAreaElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLRichtextElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLButtonElement' changed to 'type_'
//   Hint: Parameter 'String' of IOmNavigator.toString changed to 'String_'
//   Hint: Parameter 'String' of IHTMLLocation.toString changed to 'String_'
//   Hint: Member 'repeat' of 'IHTMLEventObj2' changed to 'repeat_'
//   Hint: Member 'type' of 'IHTMLEventObj2' changed to 'type_'
//   Hint: Member 'repeat' of 'DispCEventObj' changed to 'repeat_'
//   Hint: Member 'type' of 'DispCEventObj' changed to 'type_'
//   Hint: Parameter 'String' of IHTMLDocument2.toString changed to 'String_'
//   Hint: Parameter 'String' of IHTMLWindow2.toString changed to 'String_'
//   Hint: Member 'implementation' of 'IHTMLDocument5' changed to 'implementation_'
//   Hint: Member 'implementation' of 'DispHTMLDocument' changed to 'implementation_'
//   Hint: Member 'type' of 'IHTMLScriptElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLScriptElement' changed to 'type_'
//   Hint: Member 'object' of 'IHTMLObjectElement' changed to 'object_'
//   Hint: Member 'type' of 'IHTMLObjectElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLParamElement' changed to 'type_'
//   Hint: Member 'object' of 'DispHTMLObjectElement' changed to 'object_'
//   Hint: Member 'type' of 'DispHTMLObjectElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLParamElement' changed to 'type_'
//   Hint: Parameter 'object' of IHTMLOptionsHolder.isApartmentModel changed to 'object_'
//   Hint: Member 'type' of 'IHTMLStyleElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLStyleElement' changed to 'type_'
//   Hint: Parameter 'String' of IHTMLDialog.toString changed to 'String_'
//   Hint: Member 'type' of 'DispIHTMLInputButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'DispIHTMLInputTextElement' changed to 'type_'
//   Hint: Member 'type' of 'DispIHTMLInputFileElement' changed to 'type_'
//   Hint: Member 'type' of 'DispIHTMLOptionButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'DispIHTMLInputImage' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLEventObj' changed to 'type_'
//   Hint: Enum Member 'htmlInputImage' of '_htmlInput' changed to 'htmlInputImage_'
//   Hint: Member 'type' of 'IHTMLStyleSheet' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLStyleSheet' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLLinkElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLLinkElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLAnchorElement2' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLAnchorElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLUListElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLUListElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLOListElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLOListElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLLIElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLLIElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLSelectElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLSelectElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLSelectionObject' changed to 'type_'
//   Hint: Member 'label' of 'IHTMLOptionElement3' changed to 'label_'
//   Hint: Member 'label' of 'DispHTMLOptionElement' changed to 'label_'
//   Hint: Member 'type' of 'IHTMLInputElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputHiddenElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputTextElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputFileElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLOptionButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLInputImage' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLInputElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLTextAreaElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLTextAreaElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLRichtextElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLButtonElement' changed to 'type_'
//   Hint: Member 'repeat' of 'IHTMLEventObj2' changed to 'repeat_'
//   Hint: Member 'type' of 'IHTMLEventObj2' changed to 'type_'
//   Hint: Member 'repeat' of 'DispCEventObj' changed to 'repeat_'
//   Hint: Member 'type' of 'DispCEventObj' changed to 'type_'
//   Hint: Member 'implementation' of 'IHTMLDocument5' changed to 'implementation_'
//   Hint: Member 'implementation' of 'DispHTMLDocument' changed to 'implementation_'
//   Hint: Member 'type' of 'IHTMLScriptElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLScriptElement' changed to 'type_'
//   Hint: Member 'object' of 'IHTMLObjectElement' changed to 'object_'
//   Hint: Member 'type' of 'IHTMLObjectElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLParamElement' changed to 'type_'
//   Hint: Member 'object' of 'DispHTMLObjectElement' changed to 'object_'
//   Hint: Member 'type' of 'DispHTMLObjectElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLParamElement' changed to 'type_'
//   Hint: Member 'type' of 'IHTMLStyleElement' changed to 'type_'
//   Hint: Member 'type' of 'DispHTMLStyleElement' changed to 'type_'
//   Hint: Member 'type' of 'DispIHTMLInputButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'DispIHTMLInputTextElement' changed to 'type_'
//   Hint: Member 'type' of 'DispIHTMLInputFileElement' changed to 'type_'
//   Hint: Member 'type' of 'DispIHTMLOptionButtonElement' changed to 'type_'
//   Hint: Member 'type' of 'DispIHTMLInputImage' changed to 'type_'
//   Error creating palette bitmap of (TScriptlet) : Error reading control bitmap
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers.

{$WRITEABLECONST ON}

{$IFDEF DELPHI6_UP}
{$VARPROPSETTER ON}
{$WARN SYMBOL_PLATFORM OFF}
{$ENDIF}
{ $TYPEDADDRESS OFF}// Unit must be compiled without type-checked pointers.
{ $WARN UNIT_PLATFORM OFF}

{ $VARPROPSETTER ON}// You need to download and install the second D6 patch in order for this to compile.
{ $ENDIF}
{ $TYPEDADDRESS OFF}// Unit must be compiled without type-checked pointers.
{ $WRITEABLECONST ON}

interface

uses Windows, ActiveX, Imm;

// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:
//   Type Libraries     : LIBID_xxxx
//   DISPInterfaces     : DIID_xxxx
//   Non-DISP interfaces: IID_xxxx
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  MSHTMLMajorVersion = 4;
  MSHTMLMinorVersion = 0;

  LIBID_MSHTML: TGUID = '{3050F1C5-98B5-11CF-BB82-00AA00BDCE0B}';

  IID_IHTMLEventObj: TGUID = '{3050F32D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElement: TGUID = '{3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyle: TGUID = '{3050F25E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFiltersCollection: TGUID = '{3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSite: TGUID = '{3050F427-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehavior: TGUID = '{3050F425-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorFactory: TGUID = '{3050F429-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSiteOM: TGUID = '{3050F489-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorRender: TGUID = '{3050F4AA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSiteRender: TGUID = '{3050F4A7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyle2: TGUID = '{3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyle3: TGUID = '{3050F656-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyle4: TGUID = '{3050F816-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRuleStyle: TGUID = '{3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRuleStyle2: TGUID = '{3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRuleStyle3: TGUID = '{3050F657-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRuleStyle4: TGUID = '{3050F817-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyle: TGUID = '{3050F55A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyle: TGUID = '{3050F285-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLRuleStyle: TGUID = '{3050F55C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLRuleStyle: TGUID = '{3050F3D0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRenderStyle: TGUID = '{3050F6AE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLRenderStyle: TGUID = '{3050F58B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLRenderStyle: TGUID = '{3050F6AA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCurrentStyle: TGUID = '{3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCurrentStyle2: TGUID = '{3050F658-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCurrentStyle3: TGUID = '{3050F818-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLCurrentStyle: TGUID = '{3050F557-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLCurrentStyle: TGUID = '{3050F3DC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRect: TGUID = '{3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRectCollection: TGUID = '{3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMNode: TGUID = '{3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMNode2: TGUID = '{3050F80B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMAttribute: TGUID = '{3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMAttribute2: TGUID = '{3050F810-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMTextNode: TGUID = '{3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMTextNode2: TGUID = '{3050F809-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMImplementation: TGUID = '{3050F80D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDOMAttribute: TGUID = '{3050F564-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDOMAttribute: TGUID = '{3050F4B2-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDOMTextNode: TGUID = '{3050F565-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDOMTextNode: TGUID = '{3050F4BA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDOMImplementation: TGUID = '{3050F58F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDOMImplementation: TGUID = '{3050F80E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAttributeCollection: TGUID = '{3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAttributeCollection2: TGUID = '{3050F80A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMChildrenCollection: TGUID = '{3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAttributeCollection: TGUID = '{3050F56C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAttributeCollection: TGUID = '{3050F4CC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMChildrenCollection: TGUID = '{3050F577-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMChildrenCollection: TGUID = '{3050F5AA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLElementEvents2: TGUID = '{3050F60F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLElementEvents: TGUID = '{3050F33C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElementCollection: TGUID = '{3050F21F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElement2: TGUID = '{3050F434-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElement3: TGUID = '{3050F673-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElement4: TGUID = '{3050F80F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElementRender: TGUID = '{3050F669-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLUniqueName: TGUID = '{3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDatabinding: TGUID = '{3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDocument: TGUID = '{626FC520-A41E-11CF-A731-00A0C9082637}';
  IID_IHTMLElementDefaults: TGUID = '{3050F6C9-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDefaults: TGUID = '{3050F58C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDefaults: TGUID = '{3050F6C8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCDefaultDispatch: TGUID = '{3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCPropertyBehavior: TGUID = '{3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCMethodBehavior: TGUID = '{3050F631-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCEventBehavior: TGUID = '{3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCAttachBehavior: TGUID = '{3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCAttachBehavior2: TGUID = '{3050F7EB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCDescBehavior: TGUID = '{3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCDefaultDispatch: TGUID = '{3050F573-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCDefaultDispatch: TGUID = '{3050F4FC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCPropertyBehavior: TGUID = '{3050F57F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCPropertyBehavior: TGUID = '{3050F5DE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCMethodBehavior: TGUID = '{3050F587-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCMethodBehavior: TGUID = '{3050F630-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCEventBehavior: TGUID = '{3050F574-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCEventBehavior: TGUID = '{3050F4FE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCAttachBehavior: TGUID = '{3050F583-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCAttachBehavior: TGUID = '{3050F5F5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCDescBehavior: TGUID = '{3050F57E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCDescBehavior: TGUID = '{3050F5DD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLUrnCollection: TGUID = '{3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLUrnCollection: TGUID = '{3050F580-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLGenericElement: TGUID = '{3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLGenericElement: TGUID = '{3050F563-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLGenericElement: TGUID = '{3050F4B8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetRule: TGUID = '{3050F357-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetRulesCollection: TGUID = '{3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheetRule: TGUID = '{3050F3CE-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheetRulesCollection: TGUID = '{3050F3CD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetPage: TGUID = '{3050F7EE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetPagesCollection: TGUID = '{3050F7F0-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheetPage: TGUID = '{3050F7EF-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheetPagesCollection: TGUID = '{3050F7F1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetsCollection: TGUID = '{3050F37E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheet: TGUID = '{3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheet2: TGUID = '{3050F3D1-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyleSheet: TGUID = '{3050F58D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheet: TGUID = '{3050F2E4-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheetsCollection: TGUID = '{3050F37F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLLinkElementEvents2: TGUID = '{3050F61D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLLinkElementEvents: TGUID = '{3050F3CC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLinkElement: TGUID = '{3050F205-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLinkElement2: TGUID = '{3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLinkElement3: TGUID = '{3050F81E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLLinkElement: TGUID = '{3050F524-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLLinkElement: TGUID = '{3050F277-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTxtRange: TGUID = '{3050F220-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTextRangeMetrics: TGUID = '{3050F40B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTextRangeMetrics2: TGUID = '{3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTxtRangeCollection: TGUID = '{3050F7ED-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLFormElementEvents2: TGUID = '{3050F614-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLFormElementEvents: TGUID = '{3050F364-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFormElement: TGUID = '{3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFormElement2: TGUID = '{3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFormElement3: TGUID = '{3050F836-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSubmitData: TGUID = '{3050F645-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFormElement: TGUID = '{3050F510-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFormElement: TGUID = '{3050F251-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLControlElementEvents2: TGUID = '{3050F612-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLControlElementEvents: TGUID = '{3050F4EA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLControlElement: TGUID = '{3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTextElement: TGUID = '{3050F218-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTextElement: TGUID = '{3050F537-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTextElement: TGUID = '{3050F26A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLTextContainerEvents2: TGUID = '{3050F624-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLTextContainerEvents: TGUID = '{1FF6AA72-5842-11CF-A707-00AA00C0098D}';
  IID_IHTMLTextContainer: TGUID = '{3050F230-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLControlRange: TGUID = '{3050F29C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLControlRange2: TGUID = '{3050F65E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLImgEvents2: TGUID = '{3050F616-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLImgEvents: TGUID = '{3050F25B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLImgElement: TGUID = '{3050F240-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLImgElement2: TGUID = '{3050F826-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLImageElementFactory: TGUID = '{3050F38E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLImg: TGUID = '{3050F51C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLImg: TGUID = '{3050F241-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLImageElementFactory: TGUID = '{3050F38F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBodyElement: TGUID = '{3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBodyElement2: TGUID = '{3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBody: TGUID = '{3050F507-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBody: TGUID = '{3050F24A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFontElement: TGUID = '{3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFontElement: TGUID = '{3050F512-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFontElement: TGUID = '{3050F27B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLAnchorEvents2: TGUID = '{3050F610-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLAnchorEvents: TGUID = '{3050F29D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAnchorElement: TGUID = '{3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAnchorElement2: TGUID = '{3050F825-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAnchorElement: TGUID = '{3050F502-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAnchorElement: TGUID = '{3050F248-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLLabelEvents2: TGUID = '{3050F61C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLLabelEvents: TGUID = '{3050F329-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLabelElement: TGUID = '{3050F32A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLabelElement2: TGUID = '{3050F832-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLLabelElement: TGUID = '{3050F522-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLLabelElement: TGUID = '{3050F32B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLListElement: TGUID = '{3050F20E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLListElement2: TGUID = '{3050F822-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLListElement: TGUID = '{3050F525-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLListElement: TGUID = '{3050F272-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLUListElement: TGUID = '{3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLUListElement: TGUID = '{3050F538-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLUListElement: TGUID = '{3050F269-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOListElement: TGUID = '{3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLOListElement: TGUID = '{3050F52A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLOListElement: TGUID = '{3050F270-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLIElement: TGUID = '{3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLLIElement: TGUID = '{3050F523-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLLIElement: TGUID = '{3050F273-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBlockElement: TGUID = '{3050F208-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBlockElement2: TGUID = '{3050F823-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBlockElement: TGUID = '{3050F506-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBlockElement: TGUID = '{3050F281-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDivElement: TGUID = '{3050F200-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDivElement: TGUID = '{3050F50C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDivElement: TGUID = '{3050F27E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDDElement: TGUID = '{3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDDElement: TGUID = '{3050F50B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDDElement: TGUID = '{3050F27F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDTElement: TGUID = '{3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDTElement: TGUID = '{3050F50D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDTElement: TGUID = '{3050F27C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBRElement: TGUID = '{3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBRElement: TGUID = '{3050F53A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBRElement: TGUID = '{3050F280-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDListElement: TGUID = '{3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDListElement: TGUID = '{3050F53B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDListElement: TGUID = '{3050F27D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLHRElement: TGUID = '{3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLHRElement: TGUID = '{3050F53D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLHRElement: TGUID = '{3050F252-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLParaElement: TGUID = '{3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLParaElement: TGUID = '{3050F52C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLParaElement: TGUID = '{3050F26F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElementCollection2: TGUID = '{3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElementCollection3: TGUID = '{3050F835-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLElementCollection: TGUID = '{3050F56B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLElementCollection: TGUID = '{3050F4CB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLHeaderElement: TGUID = '{3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLHeaderElement: TGUID = '{3050F515-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLHeaderElement: TGUID = '{3050F27A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLSelectElementEvents2: TGUID = '{3050F622-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLSelectElementEvents: TGUID = '{3050F302-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectElement: TGUID = '{3050F244-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectElement2: TGUID = '{3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectElement4: TGUID = '{3050F838-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLSelectElement: TGUID = '{3050F531-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLSelectElement: TGUID = '{3050F245-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectionObject: TGUID = '{3050F25A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectionObject2: TGUID = '{3050F7EC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionElement: TGUID = '{3050F211-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionElement3: TGUID = '{3050F820-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionElementFactory: TGUID = '{3050F38C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLOptionElement: TGUID = '{3050F52B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLOptionElement: TGUID = '{3050F24D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLOptionElementFactory: TGUID = '{3050F38D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLButtonElementEvents2: TGUID = '{3050F617-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLButtonElementEvents: TGUID = '{3050F2B3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputTextElementEvents2: TGUID = '{3050F618-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLOptionButtonElementEvents2: TGUID = '{3050F619-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputFileElementEvents2: TGUID = '{3050F61A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputImageEvents2: TGUID = '{3050F61B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputTextElementEvents: TGUID = '{3050F2A7-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLOptionButtonElementEvents: TGUID = '{3050F2BD-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputFileElementEvents: TGUID = '{3050F2AF-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputImageEvents: TGUID = '{3050F2C3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputElement: TGUID = '{3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputElement2: TGUID = '{3050F821-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputButtonElement: TGUID = '{3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputHiddenElement: TGUID = '{3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputTextElement: TGUID = '{3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputFileElement: TGUID = '{3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionButtonElement: TGUID = '{3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputImage: TGUID = '{3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLInputElement: TGUID = '{3050F57D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLInputElement: TGUID = '{3050F5D8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTextAreaElement: TGUID = '{3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTextAreaElement: TGUID = '{3050F521-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTextAreaElement: TGUID = '{3050F2AC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLRichtextElement: TGUID = '{3050F54D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLRichtextElement: TGUID = '{3050F2DF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLButtonElement: TGUID = '{3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLButtonElement: TGUID = '{3050F51F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLButtonElement: TGUID = '{3050F2C6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLMarqueeElementEvents2: TGUID = '{3050F61F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLMarqueeElementEvents: TGUID = '{3050F2B8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMarqueeElement: TGUID = '{3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLMarqueeElement: TGUID = '{3050F527-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLMarqueeElement: TGUID = '{3050F2B9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLHtmlElement: TGUID = '{3050F81C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLHeadElement: TGUID = '{3050F81D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTitleElement: TGUID = '{3050F322-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMetaElement: TGUID = '{3050F203-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMetaElement2: TGUID = '{3050F81F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBaseElement: TGUID = '{3050F204-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLIsIndexElement: TGUID = '{3050F206-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLIsIndexElement2: TGUID = '{3050F82F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLNextIdElement: TGUID = '{3050F207-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLHtmlElement: TGUID = '{3050F560-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLHtmlElement: TGUID = '{3050F491-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLHeadElement: TGUID = '{3050F561-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLHeadElement: TGUID = '{3050F493-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTitleElement: TGUID = '{3050F516-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTitleElement: TGUID = '{3050F284-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLMetaElement: TGUID = '{3050F517-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLMetaElement: TGUID = '{3050F275-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBaseElement: TGUID = '{3050F518-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBaseElement: TGUID = '{3050F276-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLIsIndexElement: TGUID = '{3050F519-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLIsIndexElement: TGUID = '{3050F278-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLNextIdElement: TGUID = '{3050F51A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLNextIdElement: TGUID = '{3050F279-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBaseFontElement: TGUID = '{3050F202-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBaseFontElement: TGUID = '{3050F504-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBaseFontElement: TGUID = '{3050F282-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLUnknownElement: TGUID = '{3050F209-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLUnknownElement: TGUID = '{3050F539-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLUnknownElement: TGUID = '{3050F268-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IOmHistory: TGUID = '{FECEAAA2-8405-11CF-8BA1-00AA00476DA6}';
  IID_IHTMLMimeTypesCollection: TGUID = '{3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPluginsCollection: TGUID = '{3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOpsProfile: TGUID = '{3050F401-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IOmNavigator: TGUID = '{FECEAAA5-8405-11CF-8BA1-00AA00476DA6}';
  IID_IHTMLLocation: TGUID = '{163BB1E0-6E00-11CF-837A-48DC04C10000}';
  CLASS_HTMLHistory: TGUID = '{FECEAAA3-8405-11CF-8BA1-00AA00476DA6}';
  CLASS_CMimeTypes: TGUID = '{3050F3FE-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_CPlugins: TGUID = '{3050F3FF-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_COpsProfile: TGUID = '{3050F402-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLNavigator: TGUID = '{FECEAAA6-8405-11CF-8BA1-00AA00476DA6}';
  CLASS_HTMLLocation: TGUID = '{163BB1E1-6E00-11CF-837A-48DC04C10000}';
  IID_IHTMLBookmarkCollection: TGUID = '{3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDataTransfer: TGUID = '{3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEventObj2: TGUID = '{3050F48B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEventObj3: TGUID = '{3050F680-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEventObj4: TGUID = '{3050F814-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispCEventObj: TGUID = '{3050F558-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_CEventObj: TGUID = '{3050F48A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLWindowEvents2: TGUID = '{3050F625-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLWindowEvents: TGUID = '{96A0A4E0-D062-11CF-94B6-00AA0060275C}';
  IID_IHTMLDocument2: TGUID = '{332C4425-26CB-11D0-B483-00C04FD90119}';
  IID_IHTMLFramesCollection2: TGUID = '{332C4426-26CB-11D0-B483-00C04FD90119}';
  IID_IHTMLWindow2: TGUID = '{332C4427-26CB-11D0-B483-00C04FD90119}';
  IID_IHTMLScreen: TGUID = '{3050F35C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLWindow3: TGUID = '{3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameBase: TGUID = '{3050F311-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLScreen2: TGUID = '{3050F84A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLWindow4: TGUID = '{3050F6CF-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_FramesCollection: TGUID = '{3050F7F6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLScreen: TGUID = '{3050F591-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLScreen: TGUID = '{3050F35D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLWindow2: TGUID = '{3050F55D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLWindow2: TGUID = '{D48A6EC6-6A4A-11CF-94A7-444553540000}';
  DIID_DispHTMLWindowProxy: TGUID = '{3050F55E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLWindowProxy: TGUID = '{3050F391-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLDocumentEvents2: TGUID = '{3050F613-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLDocumentEvents: TGUID = '{3050F260-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDocument3: TGUID = '{3050F485-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDocument4: TGUID = '{3050F69A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDocument5: TGUID = '{3050F80C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDocument: TGUID = '{3050F55F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDocument: TGUID = '{25336920-03F9-11CF-8FD0-00AA00686F13}';
  DIID_DWebBridgeEvents: TGUID = '{A6D897FF-0A95-11D1-B0BA-006008166E11}';
  IID_IWebBridge: TGUID = '{AE24FDAD-03C6-11D1-8B76-0080C744F389}';
  IID_IWBScriptControl: TGUID = '{A5170870-0CF8-11D1-8B91-0080C744F389}';
  CLASS_Scriptlet: TGUID = '{AE24FDAE-03C6-11D1-8B76-0080C744F389}';
  IID_IHTMLEmbedElement: TGUID = '{3050F25F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLEmbed: TGUID = '{3050F52E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLEmbed: TGUID = '{3050F25D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLMapEvents2: TGUID = '{3050F61E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLMapEvents: TGUID = '{3050F3BA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAreasCollection: TGUID = '{3050F383-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAreasCollection2: TGUID = '{3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAreasCollection3: TGUID = '{3050F837-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMapElement: TGUID = '{3050F266-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAreasCollection: TGUID = '{3050F56A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAreasCollection: TGUID = '{3050F4CA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLMapElement: TGUID = '{3050F526-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLMapElement: TGUID = '{3050F271-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLAreaEvents2: TGUID = '{3050F611-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLAreaEvents: TGUID = '{3050F366-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAreaElement: TGUID = '{3050F265-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAreaElement: TGUID = '{3050F503-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAreaElement: TGUID = '{3050F283-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCaption: TGUID = '{3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableCaption: TGUID = '{3050F508-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableCaption: TGUID = '{3050F2EC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCommentElement: TGUID = '{3050F20C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCommentElement2: TGUID = '{3050F813-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLCommentElement: TGUID = '{3050F50A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLCommentElement: TGUID = '{3050F317-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPhraseElement: TGUID = '{3050F20A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPhraseElement2: TGUID = '{3050F824-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSpanElement: TGUID = '{3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLPhraseElement: TGUID = '{3050F52D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLPhraseElement: TGUID = '{3050F26E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLSpanElement: TGUID = '{3050F548-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLSpanElement: TGUID = '{3050F3F5-98B4-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLTableEvents2: TGUID = '{3050F623-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLTableEvents: TGUID = '{3050F407-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableSection: TGUID = '{3050F23B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTable: TGUID = '{3050F21E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTable2: TGUID = '{3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTable3: TGUID = '{3050F829-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCol: TGUID = '{3050F23A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCol2: TGUID = '{3050F82A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableSection2: TGUID = '{3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableSection3: TGUID = '{3050F82B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableRow: TGUID = '{3050F23C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableRow2: TGUID = '{3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableRow3: TGUID = '{3050F82C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableRowMetrics: TGUID = '{3050F413-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCell: TGUID = '{3050F23D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCell2: TGUID = '{3050F82D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTable: TGUID = '{3050F532-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTable: TGUID = '{3050F26B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableCol: TGUID = '{3050F533-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableCol: TGUID = '{3050F26C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableSection: TGUID = '{3050F534-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableSection: TGUID = '{3050F2E9-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableRow: TGUID = '{3050F535-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableRow: TGUID = '{3050F26D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableCell: TGUID = '{3050F536-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableCell: TGUID = '{3050F246-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLScriptEvents2: TGUID = '{3050F621-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLScriptEvents: TGUID = '{3050F3E2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLScriptElement: TGUID = '{3050F28B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLScriptElement2: TGUID = '{3050F828-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLScriptElement: TGUID = '{3050F530-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLScriptElement: TGUID = '{3050F28C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLNoShowElement: TGUID = '{3050F38A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLNoShowElement: TGUID = '{3050F528-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLNoShowElement: TGUID = '{3050F38B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLObjectElementEvents2: TGUID = '{3050F620-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLObjectElementEvents: TGUID = '{3050F3C4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLObjectElement: TGUID = '{3050F24F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLObjectElement2: TGUID = '{3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLObjectElement3: TGUID = '{3050F827-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLParamElement: TGUID = '{3050F83D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLObjectElement: TGUID = '{3050F529-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLObjectElement: TGUID = '{3050F24E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLParamElement: TGUID = '{3050F590-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLParamElement: TGUID = '{3050F83E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLFrameSiteEvents2: TGUID = '{3050F7FF-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLFrameSiteEvents: TGUID = '{3050F800-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameBase2: TGUID = '{3050F6DB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameBase3: TGUID = '{3050F82E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFrameBase: TGUID = '{3050F541-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFrameBase: TGUID = '{3050F312-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameElement: TGUID = '{3050F313-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameElement2: TGUID = '{3050F7F5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFrameElement: TGUID = '{3050F513-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFrameElement: TGUID = '{3050F314-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLIFrameElement: TGUID = '{3050F315-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLIFrameElement2: TGUID = '{3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLIFrame: TGUID = '{3050F51B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLIFrame: TGUID = '{3050F316-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDivPosition: TGUID = '{3050F212-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFieldSetElement: TGUID = '{3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFieldSetElement2: TGUID = '{3050F833-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLegendElement: TGUID = '{3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLegendElement2: TGUID = '{3050F834-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDivPosition: TGUID = '{3050F50F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDivPosition: TGUID = '{3050F249-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFieldSetElement: TGUID = '{3050F545-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFieldSetElement: TGUID = '{3050F3E8-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLLegendElement: TGUID = '{3050F546-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLLegendElement: TGUID = '{3050F3E9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSpanFlow: TGUID = '{3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLSpanFlow: TGUID = '{3050F544-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLSpanFlow: TGUID = '{3050F3E6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameSetElement: TGUID = '{3050F319-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameSetElement2: TGUID = '{3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFrameSetSite: TGUID = '{3050F514-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFrameSetSite: TGUID = '{3050F31A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBGsound: TGUID = '{3050F369-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBGsound: TGUID = '{3050F53C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBGsound: TGUID = '{3050F370-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFontNamesCollection: TGUID = '{3050F376-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFontSizesCollection: TGUID = '{3050F377-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionsHolder: TGUID = '{3050F378-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLStyleElementEvents2: TGUID = '{3050F615-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLStyleElementEvents: TGUID = '{3050F3CB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleElement: TGUID = '{3050F375-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyleElement: TGUID = '{3050F511-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleElement: TGUID = '{3050F37D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleFontFace: TGUID = '{3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleFontFace: TGUID = '{3050F3D4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ICSSFilterSite: TGUID = '{3050F3ED-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupPointer: TGUID = '{3050F49F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupContainer: TGUID = '{3050F5F9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupContainer2: TGUID = '{3050F648-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLChangeSink: TGUID = '{3050F64A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLChangeLog: TGUID = '{3050F649-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IActiveIMMApp: TGUID = '{08C0E040-62D1-11D1-9326-0060B067B86E}';
  IID_IEnumRegisterWordA: TGUID = '{08C03412-F96B-11D0-A475-00AA006BCC59}';
  IID_IEnumRegisterWordW: TGUID = '{4955DD31-B159-11D0-8FCF-00AA006BCC59}';
  IID_IEnumInputContext: TGUID = '{09B5EAB0-F997-11D1-93D4-0060B067B86E}';
  IID_ISegmentList: TGUID = '{3050F605-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISegmentListIterator: TGUID = '{3050F692-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISegment: TGUID = '{3050F683-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCaret: TGUID = '{3050F604-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDisplayPointer: TGUID = '{3050F69E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ILineInfo: TGUID = '{3050F7E2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementSegment: TGUID = '{3050F68F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHighlightSegment: TGUID = '{3050F690-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHighlightRenderingServices: TGUID = '{3050F606-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDisplayServices: TGUID = '{3050F69D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLComputedStyle: TGUID = '{3050F6C3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHtmlDlgSafeHelper: TGUID = '{3050F81A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IBlockFormats: TGUID = '{3050F830-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IFontNames: TGUID = '{3050F839-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ICSSFilter: TGUID = '{3050F3EC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISecureUrlHost: TGUID = '{C81984C4-74C8-11D2-BAA9-00C04FC2040E}';
  IID_IMarkupServices: TGUID = '{3050F4A0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupServices2: TGUID = '{3050F682-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLChangePlayback: TGUID = '{3050F6E0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupPointer2: TGUID = '{3050F675-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupTextFrags: TGUID = '{3050F5FA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IXMLGenericParse: TGUID = '{E4E23071-4D07-11D2-AE76-0080C73BC199}';
  IID_IHTMLEditHost: TGUID = '{3050F6A0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEditHost2: TGUID = '{3050F848-98B5-11CF-BB82-00AA00BDCE0D}';
  IID_ISequenceNumber: TGUID = '{3050F6C1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IIMEServices: TGUID = '{3050F6CA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISelectionServicesListener: TGUID = '{3050F699-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISelectionServices: TGUID = '{3050F684-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEditDesigner: TGUID = '{3050F662-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEditServices: TGUID = '{3050F663-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEditServices2: TGUID = '{3050F812-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HtmlDlgSafeHelper: TGUID = '{3050F819-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_BlockFormats: TGUID = '{3050F831-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_FontNames: TGUID = '{3050F83A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLNamespaceEvents: TGUID = '{3050F6BD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLNamespace: TGUID = '{3050F6BB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLNamespaceCollection: TGUID = '{3050F6B8-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLNamespace: TGUID = '{3050F6BC-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLNamespaceCollection: TGUID = '{3050F6B9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPainter: TGUID = '{3050F6A6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPaintSite: TGUID = '{3050F6A7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPainterEventInfo: TGUID = '{3050F6DF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPainterOverlay: TGUID = '{3050F7E3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLIPrintCollection: TGUID = '{3050F6B5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IEnumPrivacyRecords: TGUID = '{3050F844-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDialog: TGUID = '{3050F216-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDialog2: TGUID = '{3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDialog3: TGUID = '{3050F388-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLModelessInit: TGUID = '{3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_ThreadDialogProcParam: TGUID = '{3050F5EB-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDialog: TGUID = '{3050F28A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPopup: TGUID = '{3050F666-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLPopup: TGUID = '{3050F589-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLPopup: TGUID = '{3050F667-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAppBehavior: TGUID = '{3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAppBehavior2: TGUID = '{3050F5C9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAppBehavior3: TGUID = '{3050F5CD-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAppBehavior: TGUID = '{3050F57C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAppBehavior: TGUID = '{3050F5CB-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_OldHTMLDocument: TGUID = '{D48A6EC9-6A4A-11CF-94A7-444553540000}';
  CLASS_OldHTMLFormElement: TGUID = '{0D04D285-6BEC-11CF-8B97-00AA00476DA6}';
  DIID_DispIHTMLInputButtonElement: TGUID = '{3050F51E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLInputButtonElement: TGUID = '{3050F2B4-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispIHTMLInputTextElement: TGUID = '{3050F520-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLInputTextElement: TGUID = '{3050F2AB-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispIHTMLInputFileElement: TGUID = '{3050F542-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLInputFileElement: TGUID = '{3050F2AE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispIHTMLOptionButtonElement: TGUID = '{3050F509-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLOptionButtonElement: TGUID = '{3050F2BE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispIHTMLInputImage: TGUID = '{3050F51D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_htmlInputImage: TGUID = '{3050F2C4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementNamespace: TGUID = '{3050F671-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementNamespaceTable: TGUID = '{3050F670-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementNamespaceFactory: TGUID = '{3050F672-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementNamespaceFactory2: TGUID = '{3050F805-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementNamespaceFactoryCallback: TGUID = '{3050F7FD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSiteOM2: TGUID = '{3050F659-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorCategory: TGUID = '{3050F4ED-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSiteCategory: TGUID = '{3050F4EE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IEnumUnknown: TGUID = '{00000100-0000-0000-C000-000000000046}';
  IID_IElementBehaviorSubmit: TGUID = '{3050F646-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorFocus: TGUID = '{3050F6B6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorLayout: TGUID = '{3050F6BA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorLayout2: TGUID = '{3050F846-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSiteLayout: TGUID = '{3050F6B7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSiteLayout2: TGUID = '{3050F847-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHostBehaviorInit: TGUID = '{3050F842-98B5-11CF-BB82-00AA00BDCE0B}';

// *********************************************************************//
// Declaration of Enumerations defined in Type Library
// *********************************************************************//
// Constants for enum _htmlDesignMode
type
  _htmlDesignMode = TOleEnum;
const
  htmlDesignModeInherit = $FFFFFFFE;
  htmlDesignModeOn = $FFFFFFFF;
  htmlDesignModeOff = $00000000;
  htmlDesignMode_Max = $7FFFFFFF;

// Constants for enum _htmlZOrder
type
  _htmlZOrder = TOleEnum;
const
  htmlZOrderFront = $00000000;
  htmlZOrderBack = $00000001;
  htmlZOrder_Max = $7FFFFFFF;

// Constants for enum _htmlClear
type
  _htmlClear = TOleEnum;
const
  htmlClearNotSet = $00000000;
  htmlClearAll = $00000001;
  htmlClearLeft = $00000002;
  htmlClearRight = $00000003;
  htmlClearBoth = $00000004;
  htmlClearNone = $00000005;
  htmlClear_Max = $7FFFFFFF;

// Constants for enum _htmlControlAlign
type
  _htmlControlAlign = TOleEnum;
const
  htmlControlAlignNotSet = $00000000;
  htmlControlAlignLeft = $00000001;
  htmlControlAlignCenter = $00000002;
  htmlControlAlignRight = $00000003;
  htmlControlAlignTextTop = $00000004;
  htmlControlAlignAbsMiddle = $00000005;
  htmlControlAlignBaseline = $00000006;
  htmlControlAlignAbsBottom = $00000007;
  htmlControlAlignBottom = $00000008;
  htmlControlAlignMiddle = $00000009;
  htmlControlAlignTop = $0000000A;
  htmlControlAlign_Max = $7FFFFFFF;

// Constants for enum _htmlBlockAlign
type
  _htmlBlockAlign = TOleEnum;
const
  htmlBlockAlignNotSet = $00000000;
  htmlBlockAlignLeft = $00000001;
  htmlBlockAlignCenter = $00000002;
  htmlBlockAlignRight = $00000003;
  htmlBlockAlignJustify = $00000004;
  htmlBlockAlign_Max = $7FFFFFFF;

// Constants for enum _htmlReadyState
type
  _htmlReadyState = TOleEnum;
const
  htmlReadyStateuninitialized = $00000000;
  htmlReadyStateloading = $00000001;
  htmlReadyStateloaded = $00000002;
  htmlReadyStateinteractive = $00000003;
  htmlReadyStatecomplete = $00000004;
  htmlReadyState_Max = $7FFFFFFF;

// Constants for enum _htmlLoop
type
  _htmlLoop = TOleEnum;
const
  htmlLoopLoopInfinite = $FFFFFFFF;
  htmlLoop_Max = $7FFFFFFF;

// Constants for enum _mediaType
type
  _mediaType = TOleEnum;
const
  mediaTypeNotSet = $00000000;
  mediaTypeAll = $000001FF;
  mediaTypeAural = $00000001;
  mediaTypeBraille = $00000002;
  mediaTypeEmbossed = $00000004;
  mediaTypeHandheld = $00000008;
  mediaTypePrint = $00000010;
  mediaTypeProjection = $00000020;
  mediaTypeScreen = $00000040;
  mediaTypeTty = $00000080;
  mediaTypeTv = $00000100;
  mediaType_Max = $7FFFFFFF;

// Constants for enum _styleTextTransform
type
  _styleTextTransform = TOleEnum;
const
  styleTextTransformNotSet = $00000000;
  styleTextTransformCapitalize = $00000001;
  styleTextTransformLowercase = $00000002;
  styleTextTransformUppercase = $00000003;
  styleTextTransformNone = $00000004;
  styleTextTransform_Max = $7FFFFFFF;

// Constants for enum _styleDataRepeat
type
  _styleDataRepeat = TOleEnum;
const
  styleDataRepeatNone = $00000000;
  styleDataRepeatInner = $00000001;
  styleDataRepeat_Max = $7FFFFFFF;

// Constants for enum _styleOverflow
type
  _styleOverflow = TOleEnum;
const
  styleOverflowNotSet = $00000000;
  styleOverflowAuto = $00000001;
  styleOverflowHidden = $00000002;
  styleOverflowVisible = $00000003;
  styleOverflowScroll = $00000004;
  styleOverflow_Max = $7FFFFFFF;

// Constants for enum _styleTableLayout
type
  _styleTableLayout = TOleEnum;
const
  styleTableLayoutNotSet = $00000000;
  styleTableLayoutAuto = $00000001;
  styleTableLayoutFixed = $00000002;
  styleTableLayout_Max = $7FFFFFFF;

// Constants for enum _styleBorderCollapse
type
  _styleBorderCollapse = TOleEnum;
const
  styleBorderCollapseNotSet = $00000000;
  styleBorderCollapseSeparate = $00000001;
  styleBorderCollapseCollapse = $00000002;
  styleBorderCollapse_Max = $7FFFFFFF;

// Constants for enum _styleFontStyle
type
  _styleFontStyle = TOleEnum;
const
  styleFontStyleNotSet = $00000000;
  styleFontStyleItalic = $00000001;
  styleFontStyleOblique = $00000002;
  styleFontStyleNormal = $00000003;
  styleFontStyle_Max = $7FFFFFFF;

// Constants for enum _styleFontVariant
type
  _styleFontVariant = TOleEnum;
const
  styleFontVariantNotSet = $00000000;
  styleFontVariantSmallCaps = $00000001;
  styleFontVariantNormal = $00000002;
  styleFontVariant_Max = $7FFFFFFF;

// Constants for enum _styleBackgroundRepeat
type
  _styleBackgroundRepeat = TOleEnum;
const
  styleBackgroundRepeatRepeat = $00000000;
  styleBackgroundRepeatRepeatX = $00000001;
  styleBackgroundRepeatRepeatY = $00000002;
  styleBackgroundRepeatNoRepeat = $00000003;
  styleBackgroundRepeatNotSet = $00000004;
  styleBackgroundRepeat_Max = $7FFFFFFF;

// Constants for enum _styleBackgroundAttachment
type
  _styleBackgroundAttachment = TOleEnum;
const
  styleBackgroundAttachmentFixed = $00000000;
  styleBackgroundAttachmentScroll = $00000001;
  styleBackgroundAttachmentNotSet = $00000002;
  styleBackgroundAttachment_Max = $7FFFFFFF;

// Constants for enum _styleVerticalAlign
type
  _styleVerticalAlign = TOleEnum;
const
  styleVerticalAlignAuto = $00000000;
  styleVerticalAlignBaseline = $00000001;
  styleVerticalAlignSub = $00000002;
  styleVerticalAlignSuper = $00000003;
  styleVerticalAlignTop = $00000004;
  styleVerticalAlignTextTop = $00000005;
  styleVerticalAlignMiddle = $00000006;
  styleVerticalAlignBottom = $00000007;
  styleVerticalAlignTextBottom = $00000008;
  styleVerticalAlignInherit = $00000009;
  styleVerticalAlignNotSet = $0000000A;
  styleVerticalAlign_Max = $7FFFFFFF;

// Constants for enum _styleFontWeight
type
  _styleFontWeight = TOleEnum;
const
  styleFontWeightNotSet = $00000000;
  styleFontWeight100 = $00000001;
  styleFontWeight200 = $00000002;
  styleFontWeight300 = $00000003;
  styleFontWeight400 = $00000004;
  styleFontWeight500 = $00000005;
  styleFontWeight600 = $00000006;
  styleFontWeight700 = $00000007;
  styleFontWeight800 = $00000008;
  styleFontWeight900 = $00000009;
  styleFontWeightNormal = $0000000A;
  styleFontWeightBold = $0000000B;
  styleFontWeightBolder = $0000000C;
  styleFontWeightLighter = $0000000D;
  styleFontWeight_Max = $7FFFFFFF;

// Constants for enum _styleBackgroundPositionX
type
  _styleBackgroundPositionX = TOleEnum;
const
  styleBackgroundPositionXNotSet = $00000000;
  styleBackgroundPositionXLeft = $00000001;
  styleBackgroundPositionXCenter = $00000002;
  styleBackgroundPositionXRight = $00000003;
  styleBackgroundPositionX_Max = $7FFFFFFF;

// Constants for enum _styleBackgroundPositionY
type
  _styleBackgroundPositionY = TOleEnum;
const
  styleBackgroundPositionYNotSet = $00000000;
  styleBackgroundPositionYTop = $00000001;
  styleBackgroundPositionYCenter = $00000002;
  styleBackgroundPositionYBottom = $00000003;
  styleBackgroundPositionY_Max = $7FFFFFFF;

// Constants for enum _styleFontSize
type
  _styleFontSize = TOleEnum;
const
  styleFontSizeXXSmall = $00000000;
  styleFontSizeXSmall = $00000001;
  styleFontSizeSmall = $00000002;
  styleFontSizeMedium = $00000003;
  styleFontSizeLarge = $00000004;
  styleFontSizeXLarge = $00000005;
  styleFontSizeXXLarge = $00000006;
  styleFontSizeSmaller = $00000007;
  styleFontSizeLarger = $00000008;
  styleFontSize_Max = $7FFFFFFF;

// Constants for enum _styleAuto
type
  _styleAuto = TOleEnum;
const
  styleAutoAuto = $00000000;
  styleAuto_Max = $7FFFFFFF;

// Constants for enum _styleNormal
type
  _styleNormal = TOleEnum;
const
  styleNormalNormal = $00000000;
  styleNormal_Max = $7FFFFFFF;

// Constants for enum _styleBorderWidth
type
  _styleBorderWidth = TOleEnum;
const
  styleBorderWidthThin = $00000000;
  styleBorderWidthMedium = $00000001;
  styleBorderWidthThick = $00000002;
  styleBorderWidth_Max = $7FFFFFFF;

// Constants for enum _stylePosition
type
  _stylePosition = TOleEnum;
const
  stylePositionNotSet = $00000000;
  stylePositionstatic = $00000001;
  stylePositionrelative = $00000002;
  stylePositionabsolute = $00000003;
  stylePositionfixed = $00000004;
  stylePosition_Max = $7FFFFFFF;

// Constants for enum _styleBorderStyle
type
  _styleBorderStyle = TOleEnum;
const
  styleBorderStyleNotSet = $00000000;
  styleBorderStyleDotted = $00000001;
  styleBorderStyleDashed = $00000002;
  styleBorderStyleSolid = $00000003;
  styleBorderStyleDouble = $00000004;
  styleBorderStyleGroove = $00000005;
  styleBorderStyleRidge = $00000006;
  styleBorderStyleInset = $00000007;
  styleBorderStyleOutset = $00000008;
  styleBorderStyleWindowInset = $00000009;
  styleBorderStyleNone = $0000000A;
  styleBorderStyle_Max = $7FFFFFFF;

// Constants for enum _styleStyleFloat
type
  _styleStyleFloat = TOleEnum;
const
  styleStyleFloatNotSet = $00000000;
  styleStyleFloatLeft = $00000001;
  styleStyleFloatRight = $00000002;
  styleStyleFloatNone = $00000003;
  styleStyleFloat_Max = $7FFFFFFF;

// Constants for enum _styleDisplay
type
  _styleDisplay = TOleEnum;
const
  styleDisplayNotSet = $00000000;
  styleDisplayBlock = $00000001;
  styleDisplayInline = $00000002;
  styleDisplayListItem = $00000003;
  styleDisplayNone = $00000004;
  styleDisplayTableHeaderGroup = $00000005;
  styleDisplayTableFooterGroup = $00000006;
  styleDisplayInlineBlock = $00000007;
  styleDisplay_Max = $7FFFFFFF;

// Constants for enum _styleVisibility
type
  _styleVisibility = TOleEnum;
const
  styleVisibilityNotSet = $00000000;
  styleVisibilityInherit = $00000001;
  styleVisibilityVisible = $00000002;
  styleVisibilityHidden = $00000003;
  styleVisibility_Max = $7FFFFFFF;

// Constants for enum _styleListStyleType
type
  _styleListStyleType = TOleEnum;
const
  styleListStyleTypeNotSet = $00000000;
  styleListStyleTypeDisc = $00000001;
  styleListStyleTypeCircle = $00000002;
  styleListStyleTypeSquare = $00000003;
  styleListStyleTypeDecimal = $00000004;
  styleListStyleTypeLowerRoman = $00000005;
  styleListStyleTypeUpperRoman = $00000006;
  styleListStyleTypeLowerAlpha = $00000007;
  styleListStyleTypeUpperAlpha = $00000008;
  styleListStyleTypeNone = $00000009;
  styleListStyleType_Max = $7FFFFFFF;

// Constants for enum _styleListStylePosition
type
  _styleListStylePosition = TOleEnum;
const
  styleListStylePositionNotSet = $00000000;
  styleListStylePositionInside = $00000001;
  styleListStylePositionOutSide = $00000002;
  styleListStylePosition_Max = $7FFFFFFF;

// Constants for enum _styleWhiteSpace
type
  _styleWhiteSpace = TOleEnum;
const
  styleWhiteSpaceNotSet = $00000000;
  styleWhiteSpaceNormal = $00000001;
  styleWhiteSpacePre = $00000002;
  styleWhiteSpaceNowrap = $00000003;
  styleWhiteSpace_Max = $7FFFFFFF;

// Constants for enum _stylePageBreak
type
  _stylePageBreak = TOleEnum;
const
  stylePageBreakNotSet = $00000000;
  stylePageBreakAuto = $00000001;
  stylePageBreakAlways = $00000002;
  stylePageBreakLeft = $00000003;
  stylePageBreakRight = $00000004;
  stylePageBreak_Max = $7FFFFFFF;

// Constants for enum _styleCursor
type
  _styleCursor = TOleEnum;
const
  styleCursorAuto = $00000000;
  styleCursorCrosshair = $00000001;
  styleCursorDefault = $00000002;
  styleCursorHand = $00000003;
  styleCursorMove = $00000004;
  styleCursorE_resize = $00000005;
  styleCursorNe_resize = $00000006;
  styleCursorNw_resize = $00000007;
  styleCursorN_resize = $00000008;
  styleCursorSe_resize = $00000009;
  styleCursorSw_resize = $0000000A;
  styleCursorS_resize = $0000000B;
  styleCursorW_resize = $0000000C;
  styleCursorText = $0000000D;
  styleCursorWait = $0000000E;
  styleCursorHelp = $0000000F;
  styleCursorPointer = $00000010;
  styleCursorProgress = $00000011;
  styleCursorNot_allowed = $00000012;
  styleCursorNo_drop = $00000013;
  styleCursorVertical_text = $00000014;
  styleCursorall_scroll = $00000015;
  styleCursorcol_resize = $00000016;
  styleCursorrow_resize = $00000017;
  styleCursorcustom = $00000018;
  styleCursorNotSet = $00000019;
  styleCursor_Max = $7FFFFFFF;

// Constants for enum _styleDir
type
  _styleDir = TOleEnum;
const
  styleDirNotSet = $00000000;
  styleDirLeftToRight = $00000001;
  styleDirRightToLeft = $00000002;
  styleDirInherit = $00000003;
  styleDir_Max = $7FFFFFFF;

// Constants for enum _styleBidi
type
  _styleBidi = TOleEnum;
const
  styleBidiNotSet = $00000000;
  styleBidiNormal = $00000001;
  styleBidiEmbed = $00000002;
  styleBidiOverride = $00000003;
  styleBidiInherit = $00000004;
  styleBidi_Max = $7FFFFFFF;

// Constants for enum _styleImeMode
type
  _styleImeMode = TOleEnum;
const
  styleImeModeAuto = $00000000;
  styleImeModeActive = $00000001;
  styleImeModeInactive = $00000002;
  styleImeModeDisabled = $00000003;
  styleImeModeNotSet = $00000004;
  styleImeMode_Max = $7FFFFFFF;

// Constants for enum _styleRubyAlign
type
  _styleRubyAlign = TOleEnum;
const
  styleRubyAlignNotSet = $00000000;
  styleRubyAlignAuto = $00000001;
  styleRubyAlignLeft = $00000002;
  styleRubyAlignCenter = $00000003;
  styleRubyAlignRight = $00000004;
  styleRubyAlignDistributeLetter = $00000005;
  styleRubyAlignDistributeSpace = $00000006;
  styleRubyAlignLineEdge = $00000007;
  styleRubyAlign_Max = $7FFFFFFF;

// Constants for enum _styleRubyPosition
type
  _styleRubyPosition = TOleEnum;
const
  styleRubyPositionNotSet = $00000000;
  styleRubyPositionAbove = $00000001;
  styleRubyPositionInline = $00000002;
  styleRubyPosition_Max = $7FFFFFFF;

// Constants for enum _styleRubyOverhang
type
  _styleRubyOverhang = TOleEnum;
const
  styleRubyOverhangNotSet = $00000000;
  styleRubyOverhangAuto = $00000001;
  styleRubyOverhangWhitespace = $00000002;
  styleRubyOverhangNone = $00000003;
  styleRubyOverhang_Max = $7FFFFFFF;

// Constants for enum _styleLayoutGridChar
type
  _styleLayoutGridChar = TOleEnum;
const
  styleLayoutGridCharNotSet = $00000000;
  styleLayoutGridCharAuto = $00000001;
  styleLayoutGridCharNone = $00000002;
  styleLayoutGridChar_Max = $7FFFFFFF;

// Constants for enum _styleLayoutGridLine
type
  _styleLayoutGridLine = TOleEnum;
const
  styleLayoutGridLineNotSet = $00000000;
  styleLayoutGridLineAuto = $00000001;
  styleLayoutGridLineNone = $00000002;
  styleLayoutGridLine_Max = $7FFFFFFF;

// Constants for enum _styleLayoutGridMode
type
  _styleLayoutGridMode = TOleEnum;
const
  styleLayoutGridModeNotSet = $00000000;
  styleLayoutGridModeChar = $00000001;
  styleLayoutGridModeLine = $00000002;
  styleLayoutGridModeBoth = $00000003;
  styleLayoutGridModeNone = $00000004;
  styleLayoutGridMode_Max = $7FFFFFFF;

// Constants for enum _styleLayoutGridType
type
  _styleLayoutGridType = TOleEnum;
const
  styleLayoutGridTypeNotSet = $00000000;
  styleLayoutGridTypeLoose = $00000001;
  styleLayoutGridTypeStrict = $00000002;
  styleLayoutGridTypeFixed = $00000003;
  styleLayoutGridType_Max = $7FFFFFFF;

// Constants for enum _styleLineBreak
type
  _styleLineBreak = TOleEnum;
const
  styleLineBreakNotSet = $00000000;
  styleLineBreakNormal = $00000001;
  styleLineBreakStrict = $00000002;
  styleLineBreak_Max = $7FFFFFFF;

// Constants for enum _styleWordBreak
type
  _styleWordBreak = TOleEnum;
const
  styleWordBreakNotSet = $00000000;
  styleWordBreakNormal = $00000001;
  styleWordBreakBreakAll = $00000002;
  styleWordBreakKeepAll = $00000003;
  styleWordBreak_Max = $7FFFFFFF;

// Constants for enum _styleWordWrap
type
  _styleWordWrap = TOleEnum;
const
  styleWordWrapNotSet = $00000000;
  styleWordWrapOff = $00000001;
  styleWordWrapOn = $00000002;
  styleWordWrap_Max = $7FFFFFFF;

// Constants for enum _styleTextJustify
type
  _styleTextJustify = TOleEnum;
const
  styleTextJustifyNotSet = $00000000;
  styleTextJustifyInterWord = $00000001;
  styleTextJustifyNewspaper = $00000002;
  styleTextJustifyDistribute = $00000003;
  styleTextJustifyDistributeAllLines = $00000004;
  styleTextJustifyInterIdeograph = $00000005;
  styleTextJustifyInterCluster = $00000006;
  styleTextJustifyKashida = $00000007;
  styleTextJustifyAuto = $00000008;
  styleTextJustify_Max = $7FFFFFFF;

// Constants for enum _styleTextAlignLast
type
  _styleTextAlignLast = TOleEnum;
const
  styleTextAlignLastNotSet = $00000000;
  styleTextAlignLastLeft = $00000001;
  styleTextAlignLastCenter = $00000002;
  styleTextAlignLastRight = $00000003;
  styleTextAlignLastJustify = $00000004;
  styleTextAlignLastAuto = $00000005;
  styleTextAlignLast_Max = $7FFFFFFF;

// Constants for enum _styleTextJustifyTrim
type
  _styleTextJustifyTrim = TOleEnum;
const
  styleTextJustifyTrimNotSet = $00000000;
  styleTextJustifyTrimNone = $00000001;
  styleTextJustifyTrimPunctuation = $00000002;
  styleTextJustifyTrimPunctAndKana = $00000003;
  styleTextJustifyTrim_Max = $7FFFFFFF;

// Constants for enum _styleAccelerator
type
  _styleAccelerator = TOleEnum;
const
  styleAcceleratorFalse = $00000000;
  styleAcceleratorTrue = $00000001;
  styleAccelerator_Max = $7FFFFFFF;

// Constants for enum _styleLayoutFlow
type
  _styleLayoutFlow = TOleEnum;
const
  styleLayoutFlowHorizontal = $00000000;
  styleLayoutFlowVerticalIdeographic = $00000001;
  styleLayoutFlowNotSet = $00000002;
  styleLayoutFlow_Max = $7FFFFFFF;

// Constants for enum _styleWritingMode
type
  _styleWritingMode = TOleEnum;
const
  styleWritingModeLrtb = $00000000;
  styleWritingModeTbrl = $00000001;
  styleWritingModeNotSet = $00000002;
  styleWritingMode_Max = $7FFFFFFF;

// Constants for enum _styleBool
type
  _styleBool = TOleEnum;
const
  styleBoolFalse = $00000000;
  styleBoolTrue = $00000001;
  styleBool_Max = $7FFFFFFF;

// Constants for enum _styleTextUnderlinePosition
type
  _styleTextUnderlinePosition = TOleEnum;
const
  styleTextUnderlinePositionBelow = $00000000;
  styleTextUnderlinePositionAbove = $00000001;
  styleTextUnderlinePositionAuto = $00000002;
  styleTextUnderlinePositionNotSet = $00000003;
  styleTextUnderlinePosition_Max = $7FFFFFFF;

// Constants for enum _styleTextOverflow
type
  _styleTextOverflow = TOleEnum;
const
  styleTextOverflowClip = $00000000;
  styleTextOverflowEllipsis = $00000001;
  styleTextOverflowNotSet = $00000002;
  styleTextOverflow_Max = $7FFFFFFF;

// Constants for enum _styleTextLineThroughStyle
type
  _styleTextLineThroughStyle = TOleEnum;
const
  styleTextLineThroughStyleUndefined = $00000000;
  styleTextLineThroughStyleSingle = $00000001;
  styleTextLineThroughStyleDouble = $00000002;
  styleTextLineThroughStyle_Max = $7FFFFFFF;

// Constants for enum _styleTextUnderlineStyle
type
  _styleTextUnderlineStyle = TOleEnum;
const
  styleTextUnderlineStyleUndefined = $00000000;
  styleTextUnderlineStyleSingle = $00000001;
  styleTextUnderlineStyleDouble = $00000002;
  styleTextUnderlineStyleWords = $00000003;
  styleTextUnderlineStyleDotted = $00000004;
  styleTextUnderlineStyleThick = $00000005;
  styleTextUnderlineStyleDash = $00000006;
  styleTextUnderlineStyleDotDash = $00000007;
  styleTextUnderlineStyleDotDotDash = $00000008;
  styleTextUnderlineStyleWave = $00000009;
  styleTextUnderlineStyleSingleAccounting = $0000000A;
  styleTextUnderlineStyleDoubleAccounting = $0000000B;
  styleTextUnderlineStyleThickDash = $0000000C;
  styleTextUnderlineStyle_Max = $7FFFFFFF;

// Constants for enum _styleTextEffect
type
  _styleTextEffect = TOleEnum;
const
  styleTextEffectNone = $00000000;
  styleTextEffectEmboss = $00000001;
  styleTextEffectEngrave = $00000002;
  styleTextEffectOutline = $00000003;
  styleTextEffect_Max = $7FFFFFFF;

// Constants for enum _styleDefaultTextSelection
type
  _styleDefaultTextSelection = TOleEnum;
const
  styleDefaultTextSelectionFalse = $00000000;
  styleDefaultTextSelectionTrue = $00000001;
  styleDefaultTextSelection_Max = $7FFFFFFF;

// Constants for enum _styleTextDecoration
type
  _styleTextDecoration = TOleEnum;
const
  styleTextDecorationNone = $00000000;
  styleTextDecorationUnderline = $00000001;
  styleTextDecorationOverline = $00000002;
  styleTextDecorationLineThrough = $00000003;
  styleTextDecorationBlink = $00000004;
  styleTextDecoration_Max = $7FFFFFFF;

// Constants for enum _textDecoration
type
  _textDecoration = TOleEnum;
const
  textDecorationNone = $00000000;
  textDecorationUnderline = $00000001;
  textDecorationOverline = $00000002;
  textDecorationLineThrough = $00000003;
  textDecorationBlink = $00000004;
  textDecoration_Max = $7FFFFFFF;

// Constants for enum _htmlListType
type
  _htmlListType = TOleEnum;
const
  htmlListTypeNotSet = $00000000;
  htmlListTypeLargeAlpha = $00000001;
  htmlListTypeSmallAlpha = $00000002;
  htmlListTypeLargeRoman = $00000003;
  htmlListTypeSmallRoman = $00000004;
  htmlListTypeNumbers = $00000005;
  htmlListTypeDisc = $00000006;
  htmlListTypeCircle = $00000007;
  htmlListTypeSquare = $00000008;
  htmlListType_Max = $7FFFFFFF;

// Constants for enum _htmlMethod
type
  _htmlMethod = TOleEnum;
const
  htmlMethodNotSet = $00000000;
  htmlMethodGet = $00000001;
  htmlMethodPost = $00000002;
  htmlMethod_Max = $7FFFFFFF;

// Constants for enum _htmlWrap
type
  _htmlWrap = TOleEnum;
const
  htmlWrapOff = $00000001;
  htmlWrapSoft = $00000002;
  htmlWrapHard = $00000003;
  htmlWrap_Max = $7FFFFFFF;

// Constants for enum _htmlDir
type
  _htmlDir = TOleEnum;
const
  htmlDirNotSet = $00000000;
  htmlDirLeftToRight = $00000001;
  htmlDirRightToLeft = $00000002;
  htmlDir_Max = $7FFFFFFF;

// Constants for enum _htmlEditable
type
  _htmlEditable = TOleEnum;
const
  htmlEditableInherit = $00000000;
  htmlEditableTrue = $00000001;
  htmlEditableFalse = $00000002;
  htmlEditable_Max = $7FFFFFFF;

// Constants for enum _htmlInput
type
  _htmlInput = TOleEnum;
const
  htmlInputNotSet = $00000000;
  htmlInputButton = $00000001;
  htmlInputCheckbox = $00000002;
  htmlInputFile = $00000003;
  htmlInputHidden = $00000004;
  htmlInputImage_ = $00000005;
  htmlInputPassword = $00000006;
  htmlInputRadio = $00000007;
  htmlInputReset = $00000008;
  htmlInputSelectOne = $00000009;
  htmlInputSelectMultiple = $0000000A;
  htmlInputSubmit = $0000000B;
  htmlInputText = $0000000C;
  htmlInputTextarea = $0000000D;
  htmlInputRichtext = $0000000E;
  htmlInput_Max = $7FFFFFFF;

// Constants for enum _htmlEncoding
type
  _htmlEncoding = TOleEnum;
const
  htmlEncodingURL = $00000000;
  htmlEncodingMultipart = $00000001;
  htmlEncodingText = $00000002;
  htmlEncoding_Max = $7FFFFFFF;

// Constants for enum _htmlAdjacency
type
  _htmlAdjacency = TOleEnum;
const
  htmlAdjacencyBeforeBegin = $00000001;
  htmlAdjacencyAfterBegin = $00000002;
  htmlAdjacencyBeforeEnd = $00000003;
  htmlAdjacencyAfterEnd = $00000004;
  htmlAdjacency_Max = $7FFFFFFF;

// Constants for enum _htmlTabIndex
type
  _htmlTabIndex = TOleEnum;
const
  htmlTabIndexNotSet = $FFFF8000;
  htmlTabIndex_Max = $7FFFFFFF;

// Constants for enum _htmlComponent
type
  _htmlComponent = TOleEnum;
const
  htmlComponentClient = $00000000;
  htmlComponentSbLeft = $00000001;
  htmlComponentSbPageLeft = $00000002;
  htmlComponentSbHThumb = $00000003;
  htmlComponentSbPageRight = $00000004;
  htmlComponentSbRight = $00000005;
  htmlComponentSbUp = $00000006;
  htmlComponentSbPageUp = $00000007;
  htmlComponentSbVThumb = $00000008;
  htmlComponentSbPageDown = $00000009;
  htmlComponentSbDown = $0000000A;
  htmlComponentSbLeft2 = $0000000B;
  htmlComponentSbPageLeft2 = $0000000C;
  htmlComponentSbRight2 = $0000000D;
  htmlComponentSbPageRight2 = $0000000E;
  htmlComponentSbUp2 = $0000000F;
  htmlComponentSbPageUp2 = $00000010;
  htmlComponentSbDown2 = $00000011;
  htmlComponentSbPageDown2 = $00000012;
  htmlComponentSbTop = $00000013;
  htmlComponentSbBottom = $00000014;
  htmlComponentOutside = $00000015;
  htmlComponentGHTopLeft = $00000016;
  htmlComponentGHLeft = $00000017;
  htmlComponentGHTop = $00000018;
  htmlComponentGHBottomLeft = $00000019;
  htmlComponentGHTopRight = $0000001A;
  htmlComponentGHBottom = $0000001B;
  htmlComponentGHRight = $0000001C;
  htmlComponentGHBottomRight = $0000001D;
  htmlComponent_Max = $7FFFFFFF;

// Constants for enum _htmlApplyLocation
type
  _htmlApplyLocation = TOleEnum;
const
  htmlApplyLocationInside = $00000000;
  htmlApplyLocationOutside = $00000001;
  htmlApplyLocation_Max = $7FFFFFFF;

// Constants for enum _htmlGlyphMode
type
  _htmlGlyphMode = TOleEnum;
const
  htmlGlyphModeNone = $00000000;
  htmlGlyphModeBegin = $00000001;
  htmlGlyphModeEnd = $00000002;
  htmlGlyphModeBoth = $00000003;
  htmlGlyphMode_Max = $7FFFFFFF;

// Constants for enum _htmlUnit
type
  _htmlUnit = TOleEnum;
const
  htmlUnitCharacter = $00000001;
  htmlUnitWord = $00000002;
  htmlUnitSentence = $00000003;
  htmlUnitTextEdit = $00000006;
  htmlUnit_Max = $7FFFFFFF;

// Constants for enum _htmlEndPoints
type
  _htmlEndPoints = TOleEnum;
const
  htmlEndPointsStartToStart = $00000001;
  htmlEndPointsStartToEnd = $00000002;
  htmlEndPointsEndToStart = $00000003;
  htmlEndPointsEndToEnd = $00000004;
  htmlEndPoints_Max = $7FFFFFFF;

// Constants for enum _htmlDirection
type
  _htmlDirection = TOleEnum;
const
  htmlDirectionForward = $0001869F;
  htmlDirectionBackward = $FFFE7961;
  htmlDirection_Max = $7FFFFFFF;

// Constants for enum _htmlStart
type
  _htmlStart = TOleEnum;
const
  htmlStartfileopen = $00000000;
  htmlStartmouseover = $00000001;
  htmlStart_Max = $7FFFFFFF;

// Constants for enum _bodyScroll
type
  _bodyScroll = TOleEnum;
const
  bodyScrollyes = $00000001;
  bodyScrollno = $00000002;
  bodyScrollauto = $00000004;
  bodyScrolldefault = $00000003;
  bodyScroll_Max = $7FFFFFFF;

// Constants for enum _htmlSelectType
type
  _htmlSelectType = TOleEnum;
const
  htmlSelectTypeSelectOne = $00000001;
  htmlSelectTypeSelectMultiple = $00000002;
  htmlSelectType_Max = $7FFFFFFF;

// Constants for enum _htmlSelection
type
  _htmlSelection = TOleEnum;
const
  htmlSelectionNone = $00000000;
  htmlSelectionText = $00000001;
  htmlSelectionControl = $00000002;
  htmlSelectionTable = $00000003;
  htmlSelection_Max = $7FFFFFFF;

// Constants for enum _htmlMarqueeBehavior
type
  _htmlMarqueeBehavior = TOleEnum;
const
  htmlMarqueeBehaviorscroll = $00000001;
  htmlMarqueeBehaviorslide = $00000002;
  htmlMarqueeBehavioralternate = $00000003;
  htmlMarqueeBehavior_Max = $7FFFFFFF;

// Constants for enum _htmlMarqueeDirection
type
  _htmlMarqueeDirection = TOleEnum;
const
  htmlMarqueeDirectionleft = $00000001;
  htmlMarqueeDirectionright = $00000003;
  htmlMarqueeDirectionup = $00000005;
  htmlMarqueeDirectiondown = $00000007;
  htmlMarqueeDirection_Max = $7FFFFFFF;

// Constants for enum _htmlPersistState
type
  _htmlPersistState = TOleEnum;
const
  htmlPersistStateNormal = $00000000;
  htmlPersistStateFavorite = $00000001;
  htmlPersistStateHistory = $00000002;
  htmlPersistStateSnapshot = $00000003;
  htmlPersistStateUserData = $00000004;
  htmlPersistState_Max = $7FFFFFFF;

// Constants for enum _htmlDropEffect
type
  _htmlDropEffect = TOleEnum;
const
  htmlDropEffectCopy = $00000000;
  htmlDropEffectLink = $00000001;
  htmlDropEffectMove = $00000002;
  htmlDropEffectNone = $00000003;
  htmlDropEffect_Max = $7FFFFFFF;

// Constants for enum _htmlEffectAllowed
type
  _htmlEffectAllowed = TOleEnum;
const
  htmlEffectAllowedCopy = $00000000;
  htmlEffectAllowedLink = $00000001;
  htmlEffectAllowedMove = $00000002;
  htmlEffectAllowedCopyLink = $00000003;
  htmlEffectAllowedCopyMove = $00000004;
  htmlEffectAllowedLinkMove = $00000005;
  htmlEffectAllowedAll = $00000006;
  htmlEffectAllowedNone = $00000007;
  htmlEffectAllowedUninitialized = $00000008;
  htmlEffectAllowed_Max = $7FFFFFFF;

// Constants for enum _htmlCompatMode
type
  _htmlCompatMode = TOleEnum;
const
  htmlCompatModeBackCompat = $00000000;
  htmlCompatModeCSS1Compat = $00000001;
  htmlCompatMode_Max = $7FFFFFFF;

// Constants for enum _BoolValue
type
  _BoolValue = TOleEnum;
const
//  True = $00000001;
//  False = $00000000;
  BoolValue_Max = $7FFFFFFF;

// Constants for enum _htmlCaptionAlign
type
  _htmlCaptionAlign = TOleEnum;
const
  htmlCaptionAlignNotSet = $00000000;
  htmlCaptionAlignLeft = $00000001;
  htmlCaptionAlignCenter = $00000002;
  htmlCaptionAlignRight = $00000003;
  htmlCaptionAlignJustify = $00000004;
  htmlCaptionAlignTop = $00000005;
  htmlCaptionAlignBottom = $00000006;
  htmlCaptionAlign_Max = $7FFFFFFF;

// Constants for enum _htmlCaptionVAlign
type
  _htmlCaptionVAlign = TOleEnum;
const
  htmlCaptionVAlignNotSet = $00000000;
  htmlCaptionVAlignTop = $00000001;
  htmlCaptionVAlignBottom = $00000002;
  htmlCaptionVAlign_Max = $7FFFFFFF;

// Constants for enum _htmlFrame
type
  _htmlFrame = TOleEnum;
const
  htmlFrameNotSet = $00000000;
  htmlFramevoid = $00000001;
  htmlFrameabove = $00000002;
  htmlFramebelow = $00000003;
  htmlFramehsides = $00000004;
  htmlFramelhs = $00000005;
  htmlFramerhs = $00000006;
  htmlFramevsides = $00000007;
  htmlFramebox = $00000008;
  htmlFrameborder = $00000009;
  htmlFrame_Max = $7FFFFFFF;

// Constants for enum _htmlRules
type
  _htmlRules = TOleEnum;
const
  htmlRulesNotSet = $00000000;
  htmlRulesnone = $00000001;
  htmlRulesgroups = $00000002;
  htmlRulesrows = $00000003;
  htmlRulescols = $00000004;
  htmlRulesall = $00000005;
  htmlRules_Max = $7FFFFFFF;

// Constants for enum _htmlCellAlign
type
  _htmlCellAlign = TOleEnum;
const
  htmlCellAlignNotSet = $00000000;
  htmlCellAlignLeft = $00000001;
  htmlCellAlignCenter = $00000002;
  htmlCellAlignRight = $00000003;
  htmlCellAlignMiddle = $00000002;
  htmlCellAlign_Max = $7FFFFFFF;

// Constants for enum _htmlCellVAlign
type
  _htmlCellVAlign = TOleEnum;
const
  htmlCellVAlignNotSet = $00000000;
  htmlCellVAlignTop = $00000001;
  htmlCellVAlignMiddle = $00000002;
  htmlCellVAlignBottom = $00000003;
  htmlCellVAlignBaseline = $00000004;
  htmlCellVAlignCenter = $00000002;
  htmlCellVAlign_Max = $7FFFFFFF;

// Constants for enum _frameScrolling
type
  _frameScrolling = TOleEnum;
const
  frameScrollingyes = $00000001;
  frameScrollingno = $00000002;
  frameScrollingauto = $00000004;
  frameScrolling_Max = $7FFFFFFF;

// Constants for enum _ELEMENT_CORNER
type
  _ELEMENT_CORNER = TOleEnum;
const
  ELEMENT_CORNER_NONE = $00000000;
  ELEMENT_CORNER_TOP = $00000001;
  ELEMENT_CORNER_LEFT = $00000002;
  ELEMENT_CORNER_BOTTOM = $00000003;
  ELEMENT_CORNER_RIGHT = $00000004;
  ELEMENT_CORNER_TOPLEFT = $00000005;
  ELEMENT_CORNER_TOPRIGHT = $00000006;
  ELEMENT_CORNER_BOTTOMLEFT = $00000007;
  ELEMENT_CORNER_BOTTOMRIGHT = $00000008;
  ELEMENT_CORNER_Max = $7FFFFFFF;

// Constants for enum _SECUREURLHOSTVALIDATE_FLAGS
type
  _SECUREURLHOSTVALIDATE_FLAGS = TOleEnum;
const
  SUHV_PROMPTBEFORENO = $00000001;
  SUHV_SILENTYES = $00000002;
  SUHV_UNSECURESOURCE = $00000004;
  SECUREURLHOSTVALIDATE_FLAGS_Max = $7FFFFFFF;

// Constants for enum _POINTER_GRAVITY
type
  _POINTER_GRAVITY = TOleEnum;
const
  POINTER_GRAVITY_Left = $00000000;
  POINTER_GRAVITY_Right = $00000001;
  POINTER_GRAVITY_Max = $7FFFFFFF;

// Constants for enum _ELEMENT_ADJACENCY
type
  _ELEMENT_ADJACENCY = TOleEnum;
const
  ELEM_ADJ_BeforeBegin = $00000000;
  ELEM_ADJ_AfterBegin = $00000001;
  ELEM_ADJ_BeforeEnd = $00000002;
  ELEM_ADJ_AfterEnd = $00000003;
  ELEMENT_ADJACENCY_Max = $7FFFFFFF;

// Constants for enum _MARKUP_CONTEXT_TYPE
type
  _MARKUP_CONTEXT_TYPE = TOleEnum;
const
  CONTEXT_TYPE_None = $00000000;
  CONTEXT_TYPE_Text = $00000001;
  CONTEXT_TYPE_EnterScope = $00000002;
  CONTEXT_TYPE_ExitScope = $00000003;
  CONTEXT_TYPE_NoScope = $00000004;
  MARKUP_CONTEXT_TYPE_Max = $7FFFFFFF;

// Constants for enum _FINDTEXT_FLAGS
type
  _FINDTEXT_FLAGS = TOleEnum;
const
  FINDTEXT_BACKWARDS = $00000001;
  FINDTEXT_WHOLEWORD = $00000002;
  FINDTEXT_MATCHCASE = $00000004;
  FINDTEXT_RAW = $00020000;
  FINDTEXT_MATCHDIAC = $20000000;
  FINDTEXT_MATCHKASHIDA = $40000000;
  FINDTEXT_MATCHALEFHAMZA = $80000000;
  FINDTEXT_FLAGS_Max = $7FFFFFFF;

// Constants for enum _MOVEUNIT_ACTION
type
  _MOVEUNIT_ACTION = TOleEnum;
const
  MOVEUNIT_PREVCHAR = $00000000;
  MOVEUNIT_NEXTCHAR = $00000001;
  MOVEUNIT_PREVCLUSTERBEGIN = $00000002;
  MOVEUNIT_NEXTCLUSTERBEGIN = $00000003;
  MOVEUNIT_PREVCLUSTEREND = $00000004;
  MOVEUNIT_NEXTCLUSTEREND = $00000005;
  MOVEUNIT_PREVWORDBEGIN = $00000006;
  MOVEUNIT_NEXTWORDBEGIN = $00000007;
  MOVEUNIT_PREVWORDEND = $00000008;
  MOVEUNIT_NEXTWORDEND = $00000009;
  MOVEUNIT_PREVPROOFWORD = $0000000A;
  MOVEUNIT_NEXTPROOFWORD = $0000000B;
  MOVEUNIT_NEXTURLBEGIN = $0000000C;
  MOVEUNIT_PREVURLBEGIN = $0000000D;
  MOVEUNIT_NEXTURLEND = $0000000E;
  MOVEUNIT_PREVURLEND = $0000000F;
  MOVEUNIT_PREVSENTENCE = $00000010;
  MOVEUNIT_NEXTSENTENCE = $00000011;
  MOVEUNIT_PREVBLOCK = $00000012;
  MOVEUNIT_NEXTBLOCK = $00000013;
  MOVEUNIT_ACTION_Max = $7FFFFFFF;

// Constants for enum _PARSE_FLAGS
type
  _PARSE_FLAGS = TOleEnum;
const
  PARSE_ABSOLUTIFYIE40URLS = $00000001;
  PARSE_FLAGS_Max = $7FFFFFFF;

// Constants for enum _ELEMENT_TAG_ID
type
  _ELEMENT_TAG_ID = TOleEnum;
const
  TAGID_NULL = $00000000;
  TAGID_UNKNOWN = $00000001;
  TAGID_A = $00000002;
  TAGID_ACRONYM = $00000003;
  TAGID_ADDRESS = $00000004;
  TAGID_APPLET = $00000005;
  TAGID_AREA = $00000006;
  TAGID_B = $00000007;
  TAGID_BASE = $00000008;
  TAGID_BASEFONT = $00000009;
  TAGID_BDO = $0000000A;
  TAGID_BGSOUND = $0000000B;
  TAGID_BIG = $0000000C;
  TAGID_BLINK = $0000000D;
  TAGID_BLOCKQUOTE = $0000000E;
  TAGID_BODY = $0000000F;
  TAGID_BR = $00000010;
  TAGID_BUTTON = $00000011;
  TAGID_CAPTION = $00000012;
  TAGID_CENTER = $00000013;
  TAGID_CITE = $00000014;
  TAGID_CODE = $00000015;
  TAGID_COL = $00000016;
  TAGID_COLGROUP = $00000017;
  TAGID_COMMENT = $00000018;
  TAGID_COMMENT_RAW = $00000019;
  TAGID_DD = $0000001A;
  TAGID_DEL = $0000001B;
  TAGID_DFN = $0000001C;
  TAGID_DIR = $0000001D;
  TAGID_DIV = $0000001E;
  TAGID_DL = $0000001F;
  TAGID_DT = $00000020;
  TAGID_EM = $00000021;
  TAGID_EMBED = $00000022;
  TAGID_FIELDSET = $00000023;
  TAGID_FONT = $00000024;
  TAGID_FORM = $00000025;
  TAGID_FRAME = $00000026;
  TAGID_FRAMESET = $00000027;
  TAGID_GENERIC = $00000028;
  TAGID_H1 = $00000029;
  TAGID_H2 = $0000002A;
  TAGID_H3 = $0000002B;
  TAGID_H4 = $0000002C;
  TAGID_H5 = $0000002D;
  TAGID_H6 = $0000002E;
  TAGID_HEAD = $0000002F;
  TAGID_HR = $00000030;
  TAGID_HTML = $00000031;
  TAGID_I = $00000032;
  TAGID_IFRAME = $00000033;
  TAGID_IMG = $00000034;
  TAGID_INPUT = $00000035;
  TAGID_INS = $00000036;
  TAGID_KBD = $00000037;
  TAGID_LABEL = $00000038;
  TAGID_LEGEND = $00000039;
  TAGID_LI = $0000003A;
  TAGID_LINK = $0000003B;
  TAGID_LISTING = $0000003C;
  TAGID_MAP = $0000003D;
  TAGID_MARQUEE = $0000003E;
  TAGID_MENU = $0000003F;
  TAGID_META = $00000040;
  TAGID_NEXTID = $00000041;
  TAGID_NOBR = $00000042;
  TAGID_NOEMBED = $00000043;
  TAGID_NOFRAMES = $00000044;
  TAGID_NOSCRIPT = $00000045;
  TAGID_OBJECT = $00000046;
  TAGID_OL = $00000047;
  TAGID_OPTION = $00000048;
  TAGID_P = $00000049;
  TAGID_PARAM = $0000004A;
  TAGID_PLAINTEXT = $0000004B;
  TAGID_PRE = $0000004C;
  TAGID_Q = $0000004D;
  TAGID_RP = $0000004E;
  TAGID_RT = $0000004F;
  TAGID_RUBY = $00000050;
  TAGID_S = $00000051;
  TAGID_SAMP = $00000052;
  TAGID_SCRIPT = $00000053;
  TAGID_SELECT = $00000054;
  TAGID_SMALL = $00000055;
  TAGID_SPAN = $00000056;
  TAGID_STRIKE = $00000057;
  TAGID_STRONG = $00000058;
  TAGID_STYLE = $00000059;
  TAGID_SUB = $0000005A;
  TAGID_SUP = $0000005B;
  TAGID_TABLE = $0000005C;
  TAGID_TBODY = $0000005D;
  TAGID_TC = $0000005E;
  TAGID_TD = $0000005F;
  TAGID_TEXTAREA = $00000060;
  TAGID_TFOOT = $00000061;
  TAGID_TH = $00000062;
  TAGID_THEAD = $00000063;
  TAGID_TITLE = $00000064;
  TAGID_TR = $00000065;
  TAGID_TT = $00000066;
  TAGID_U = $00000067;
  TAGID_UL = $00000068;
  TAGID_VAR = $00000069;
  TAGID_WBR = $0000006A;
  TAGID_XMP = $0000006B;
  TAGID_ROOT = $0000006C;
  TAGID_OPTGROUP = $0000006D;
  TAGID_COUNT = $0000006E;
  TAGID_LAST_PREDEFINED = $00002710;
  ELEMENT_TAG_ID_Max = $7FFFFFFF;

// Constants for enum _SELECTION_TYPE
type
  _SELECTION_TYPE = TOleEnum;
const
  SELECTION_TYPE_None = $00000000;
  SELECTION_TYPE_Caret = $00000001;
  SELECTION_TYPE_Text = $00000002;
  SELECTION_TYPE_Control = $00000003;
  SELECTION_TYPE_Max = $7FFFFFFF;

// Constants for enum _SAVE_SEGMENTS_FLAGS
type
  _SAVE_SEGMENTS_FLAGS = TOleEnum;
const
  SAVE_SEGMENTS_NoIE4SelectionCompat = $00000001;
  SAVE_SEGMENTS_FLAGS_Max = $7FFFFFFF;

// Constants for enum _CARET_DIRECTION
type
  _CARET_DIRECTION = TOleEnum;
const
  CARET_DIRECTION_INDETERMINATE = $00000000;
  CARET_DIRECTION_SAME = $00000001;
  CARET_DIRECTION_BACKWARD = $00000002;
  CARET_DIRECTION_FORWARD = $00000003;
  CARET_DIRECTION_Max = $7FFFFFFF;

// Constants for enum _LINE_DIRECTION
type
  _LINE_DIRECTION = TOleEnum;
const
  LINE_DIRECTION_RightToLeft = $00000001;
  LINE_DIRECTION_LeftToRight = $00000002;
  LINE_DIRECTION_Max = $7FFFFFFF;

// Constants for enum _HT_OPTIONS
type
  _HT_OPTIONS = TOleEnum;
const
  HT_OPT_AllowAfterEOL = $00000001;
  HT_OPTIONS_Max = $7FFFFFFF;

// Constants for enum _HT_RESULTS
type
  _HT_RESULTS = TOleEnum;
const
  HT_RESULTS_Glyph = $00000001;
  HT_RESULTS_Max = $7FFFFFFF;

// Constants for enum _DISPLAY_MOVEUNIT
type
  _DISPLAY_MOVEUNIT = TOleEnum;
const
  DISPLAY_MOVEUNIT_PreviousLine = $00000001;
  DISPLAY_MOVEUNIT_NextLine = $00000002;
  DISPLAY_MOVEUNIT_CurrentLineStart = $00000003;
  DISPLAY_MOVEUNIT_CurrentLineEnd = $00000004;
  DISPLAY_MOVEUNIT_TopOfWindow = $00000005;
  DISPLAY_MOVEUNIT_BottomOfWindow = $00000006;
  DISPLAY_MOVEUNIT_Max = $7FFFFFFF;

// Constants for enum _DISPLAY_GRAVITY
type
  _DISPLAY_GRAVITY = TOleEnum;
const
  DISPLAY_GRAVITY_PreviousLine = $00000001;
  DISPLAY_GRAVITY_NextLine = $00000002;
  DISPLAY_GRAVITY_Max = $7FFFFFFF;

// Constants for enum _DISPLAY_BREAK
type
  _DISPLAY_BREAK = TOleEnum;
const
  DISPLAY_BREAK_None = $00000000;
  DISPLAY_BREAK_Block = $00000001;
  DISPLAY_BREAK_Break = $00000002;
  DISPLAY_BREAK_Max = $7FFFFFFF;

// Constants for enum _COORD_SYSTEM
type
  _COORD_SYSTEM = TOleEnum;
const
  COORD_SYSTEM_GLOBAL = $00000000;
  COORD_SYSTEM_PARENT = $00000001;
  COORD_SYSTEM_CONTAINER = $00000002;
  COORD_SYSTEM_CONTENT = $00000003;
  COORD_SYSTEM_FRAME = $00000004;
  COORD_SYSTEM_Max = $7FFFFFFF;

// Constants for enum _HTML_PAINTER
type
  _HTML_PAINTER = TOleEnum;
const
  HTMLPAINTER_OPAQUE = $00000001;
  HTMLPAINTER_TRANSPARENT = $00000002;
  HTMLPAINTER_ALPHA = $00000004;
  HTMLPAINTER_COMPLEX = $00000008;
  HTMLPAINTER_OVERLAY = $00000010;
  HTMLPAINTER_HITTEST = $00000020;
  HTMLPAINTER_SURFACE = $00000100;
  HTMLPAINTER_3DSURFACE = $00000200;
  HTMLPAINTER_NOBAND = $00000400;
  HTMLPAINTER_NODC = $00001000;
  HTMLPAINTER_NOPHYSICALCLIP = $00002000;
  HTMLPAINTER_NOSAVEDC = $00004000;
  HTMLPAINTER_SUPPORTS_XFORM = $00008000;
  HTMLPAINTER_EXPAND = $00010000;
  HTMLPAINTER_NOSCROLLBITS = $00020000;
  HTML_PAINTER_Max = $7FFFFFFF;

// Constants for enum _HTML_PAINT_ZORDER
type
  _HTML_PAINT_ZORDER = TOleEnum;
const
  HTMLPAINT_ZORDER_NONE = $00000000;
  HTMLPAINT_ZORDER_REPLACE_ALL = $00000001;
  HTMLPAINT_ZORDER_REPLACE_CONTENT = $00000002;
  HTMLPAINT_ZORDER_REPLACE_BACKGROUND = $00000003;
  HTMLPAINT_ZORDER_BELOW_CONTENT = $00000004;
  HTMLPAINT_ZORDER_BELOW_FLOW = $00000005;
  HTMLPAINT_ZORDER_ABOVE_FLOW = $00000006;
  HTMLPAINT_ZORDER_ABOVE_CONTENT = $00000007;
  HTMLPAINT_ZORDER_WINDOW_TOP = $00000008;
  HTML_PAINT_ZORDER_Max = $7FFFFFFF;

// Constants for enum _HTML_PAINT_DRAW_FLAGS
type
  _HTML_PAINT_DRAW_FLAGS = TOleEnum;
const
  HTMLPAINT_DRAW_UPDATEREGION = $00000001;
  HTMLPAINT_DRAW_USE_XFORM = $00000002;
  HTML_PAINT_DRAW_FLAGS_Max = $7FFFFFFF;

// Constants for enum _HTML_PAINT_EVENT_FLAGS
type
  _HTML_PAINT_EVENT_FLAGS = TOleEnum;
const
  HTMLPAINT_EVENT_TARGET = $00000001;
  HTMLPAINT_EVENT_SETCURSOR = $00000002;
  HTML_PAINT_EVENT_FLAGS_Max = $7FFFFFFF;

// Constants for enum _HTML_PAINT_DRAW_INFO_FLAGS
type
  _HTML_PAINT_DRAW_INFO_FLAGS = TOleEnum;
const
  HTMLPAINT_DRAWINFO_VIEWPORT = $00000001;
  HTMLPAINT_DRAWINFO_UPDATEREGION = $00000002;
  HTMLPAINT_DRAWINFO_XFORM = $00000004;
  HTML_PAINT_DRAW_INFO_FLAGS_Max = $7FFFFFFF;

// Constants for enum _HTMLDlgFlag
type
  _HTMLDlgFlag = TOleEnum;
const
  HTMLDlgFlagNo = $00000000;
  HTMLDlgFlagOff = $00000000;
  HTMLDlgFlag0 = $00000000;
  HTMLDlgFlagYes = $00000001;
  HTMLDlgFlagOn = $00000001;
  HTMLDlgFlag1 = $00000001;
  HTMLDlgFlagNotSet = $FFFFFFFF;
  HTMLDlgFlag_Max = $7FFFFFFF;

// Constants for enum _HTMLDlgBorder
type
  _HTMLDlgBorder = TOleEnum;
const
  HTMLDlgBorderThin = $00000000;
  HTMLDlgBorderThick = $00040000;
  HTMLDlgBorder_Max = $7FFFFFFF;

// Constants for enum _HTMLDlgEdge
type
  _HTMLDlgEdge = TOleEnum;
const
  HTMLDlgEdgeSunken = $00000000;
  HTMLDlgEdgeRaised = $00000010;
  HTMLDlgEdge_Max = $7FFFFFFF;

// Constants for enum _HTMLDlgCenter
type
  _HTMLDlgCenter = TOleEnum;
const
  HTMLDlgCenterNo = $00000000;
  HTMLDlgCenterOff = $00000000;
  HTMLDlgCenter0 = $00000000;
  HTMLDlgCenterYes = $00000001;
  HTMLDlgCenterOn = $00000001;
  HTMLDlgCenter1 = $00000001;
  HTMLDlgCenterParent = $00000001;
  HTMLDlgCenterDesktop = $00000002;
  HTMLDlgCenter_Max = $7FFFFFFF;

// Constants for enum _HTMLAppFlag
type
  _HTMLAppFlag = TOleEnum;
const
  HTMLAppFlagNo = $00000000;
  HTMLAppFlagOff = $00000000;
  HTMLAppFlag0 = $00000000;
  HTMLAppFlagYes = $00000001;
  HTMLAppFlagOn = $00000001;
  HTMLAppFlag1 = $00000001;
  HTMLAppFlag_Max = $7FFFFFFF;

// Constants for enum _HTMLMinimizeFlag
type
  _HTMLMinimizeFlag = TOleEnum;
const
  HTMLMinimizeFlagNo = $00000000;
  HTMLMinimizeFlagYes = $00020000;
  HTMLMinimizeFlag_Max = $7FFFFFFF;

// Constants for enum _HTMLMaximizeFlag
type
  _HTMLMaximizeFlag = TOleEnum;
const
  HTMLMaximizeFlagNo = $00000000;
  HTMLMaximizeFlagYes = $00010000;
  HTMLMaximizeFlag_Max = $7FFFFFFF;

// Constants for enum _HTMLCaptionFlag
type
  _HTMLCaptionFlag = TOleEnum;
const
  HTMLCaptionFlagNo = $00000000;
  HTMLCaptionFlagYes = $00C00000;
  HTMLCaptionFlag_Max = $7FFFFFFF;

// Constants for enum _HTMLSysMenuFlag
type
  _HTMLSysMenuFlag = TOleEnum;
const
  HTMLSysMenuFlagNo = $00000000;
  HTMLSysMenuFlagYes = $00080000;
  HTMLSysMenuFlag_Max = $7FFFFFFF;

// Constants for enum _HTMLBorder
type
  _HTMLBorder = TOleEnum;
const
  HTMLBorderNone = $00000000;
  HTMLBorderThick = $00040000;
  HTMLBorderDialog = $00400000;
  HTMLBorderThin = $00800000;
  HTMLBorder_Max = $7FFFFFFF;

// Constants for enum _HTMLBorderStyle
type
  _HTMLBorderStyle = TOleEnum;
const
  HTMLBorderStyleNormal = $00000000;
  HTMLBorderStyleRaised = $00000100;
  HTMLBorderStyleSunken = $00000200;
  HTMLBorderStylecombined = $00000300;
  HTMLBorderStyleStatic = $00020000;
  HTMLBorderStyle_Max = $7FFFFFFF;

// Constants for enum _HTMLWindowState
type
  _HTMLWindowState = TOleEnum;
const
  HTMLWindowStateNormal = $00000001;
  HTMLWindowStateMaximize = $00000003;
  HTMLWindowStateMinimize = $00000006;
  HTMLWindowState_Max = $7FFFFFFF;

// Constants for enum _BEHAVIOR_EVENT
type
  _BEHAVIOR_EVENT = TOleEnum;
const
  BEHAVIOREVENT_FIRST = $00000000;
  BEHAVIOREVENT_CONTENTREADY = $00000000;
  BEHAVIOREVENT_DOCUMENTREADY = $00000001;
  BEHAVIOREVENT_APPLYSTYLE = $00000002;
  BEHAVIOREVENT_DOCUMENTCONTEXTCHANGE = $00000003;
  BEHAVIOREVENT_CONTENTSAVE = $00000004;
  BEHAVIOREVENT_LAST = $00000004;
  BEHAVIOR_EVENT_Max = $7FFFFFFF;

// Constants for enum _BEHAVIOR_EVENT_FLAGS
type
  _BEHAVIOR_EVENT_FLAGS = TOleEnum;
const
  BEHAVIOREVENTFLAGS_BUBBLE = $00000001;
  BEHAVIOREVENTFLAGS_STANDARDADDITIVE = $00000002;
  BEHAVIOR_EVENT_FLAGS_Max = $7FFFFFFF;

// Constants for enum _BEHAVIOR_RENDER_INFO
type
  _BEHAVIOR_RENDER_INFO = TOleEnum;
const
  BEHAVIORRENDERINFO_BEFOREBACKGROUND = $00000001;
  BEHAVIORRENDERINFO_AFTERBACKGROUND = $00000002;
  BEHAVIORRENDERINFO_BEFORECONTENT = $00000004;
  BEHAVIORRENDERINFO_AFTERCONTENT = $00000008;
  BEHAVIORRENDERINFO_AFTERFOREGROUND = $00000020;
  BEHAVIORRENDERINFO_ABOVECONTENT = $00000028;
  BEHAVIORRENDERINFO_ALLLAYERS = $000000FF;
  BEHAVIORRENDERINFO_DISABLEBACKGROUND = $00000100;
  BEHAVIORRENDERINFO_DISABLENEGATIVEZ = $00000200;
  BEHAVIORRENDERINFO_DISABLECONTENT = $00000400;
  BEHAVIORRENDERINFO_DISABLEPOSITIVEZ = $00000800;
  BEHAVIORRENDERINFO_DISABLEALLLAYERS = $00000F00;
  BEHAVIORRENDERINFO_HITTESTING = $00001000;
  BEHAVIORRENDERINFO_SURFACE = $00100000;
  BEHAVIORRENDERINFO_3DSURFACE = $00200000;
  BEHAVIOR_RENDER_INFO_Max = $7FFFFFFF;

// Constants for enum _BEHAVIOR_RELATION
type
  _BEHAVIOR_RELATION = TOleEnum;
const
  BEHAVIOR_FIRSTRELATION = $00000000;
  BEHAVIOR_SAMEELEMENT = $00000000;
  BEHAVIOR_PARENT = $00000001;
  BEHAVIOR_CHILD = $00000002;
  BEHAVIOR_SIBLING = $00000003;
  BEHAVIOR_LASTRELATION = $00000003;
  BEHAVIOR_RELATION_Max = $7FFFFFFF;

// Constants for enum _BEHAVIOR_LAYOUT_INFO
type
  _BEHAVIOR_LAYOUT_INFO = TOleEnum;
const
  BEHAVIORLAYOUTINFO_FULLDELEGATION = $00000001;
  BEHAVIORLAYOUTINFO_MODIFYNATURAL = $00000002;
  BEHAVIORLAYOUTINFO_MAPSIZE = $00000004;
  BEHAVIOR_LAYOUT_INFO_Max = $7FFFFFFF;

// Constants for enum _BEHAVIOR_LAYOUT_MODE
type
  _BEHAVIOR_LAYOUT_MODE = TOleEnum;
const
  BEHAVIORLAYOUTMODE_NATURAL = $00000001;
  BEHAVIORLAYOUTMODE_MINWIDTH = $00000002;
  BEHAVIORLAYOUTMODE_MAXWIDTH = $00000004;
  BEHAVIORLAYOUTMODE_MEDIA_RESOLUTION = $00004000;
  BEHAVIORLAYOUTMODE_FINAL_PERCENT = $00008000;
  BEHAVIOR_LAYOUT_MODE_Max = $7FFFFFFF;

// Constants for enum _ELEMENTDESCRIPTOR_FLAGS
type
  _ELEMENTDESCRIPTOR_FLAGS = TOleEnum;
const
  ELEMENTDESCRIPTORFLAGS_LITERAL = $00000001;
  ELEMENTDESCRIPTORFLAGS_NESTED_LITERAL = $00000002;
  ELEMENTDESCRIPTOR_FLAGS_Max = $7FFFFFFF;

// Constants for enum _ELEMENTNAMESPACE_FLAGS
type
  _ELEMENTNAMESPACE_FLAGS = TOleEnum;
const
  ELEMENTNAMESPACEFLAGS_ALLOWANYTAG = $00000001;
  ELEMENTNAMESPACEFLAGS_QUERYFORUNKNOWNTAGS = $00000002;
  ELEMENTNAMESPACE_FLAGS_Max = $7FFFFFFF;

type
// *********************************************************************//
// Forward declaration of types defined in TypeLibrary
// *********************************************************************//
  IHTMLEventObj = interface;
  IHTMLEventObjDisp = dispinterface;
  IHTMLElement = interface;
  IHTMLElementDisp = dispinterface;
  IHTMLStyle = interface;
  IHTMLStyleDisp = dispinterface;
  IHTMLFiltersCollection = interface;
  IHTMLFiltersCollectionDisp = dispinterface;
  IElementBehaviorSite = interface;
  IElementBehavior = interface;
  IElementBehaviorFactory = interface;
  IElementBehaviorSiteOM = interface;
  IElementBehaviorRender = interface;
  IElementBehaviorSiteRender = interface;
  IHTMLStyle2 = interface;
  IHTMLStyle2Disp = dispinterface;
  IHTMLStyle3 = interface;
  IHTMLStyle3Disp = dispinterface;
  IHTMLStyle4 = interface;
  IHTMLStyle4Disp = dispinterface;
  IHTMLRuleStyle = interface;
  IHTMLRuleStyleDisp = dispinterface;
  IHTMLRuleStyle2 = interface;
  IHTMLRuleStyle2Disp = dispinterface;
  IHTMLRuleStyle3 = interface;
  IHTMLRuleStyle3Disp = dispinterface;
  IHTMLRuleStyle4 = interface;
  IHTMLRuleStyle4Disp = dispinterface;
  DispHTMLStyle = dispinterface;
  DispHTMLRuleStyle = dispinterface;
  IHTMLRenderStyle = interface;
  IHTMLRenderStyleDisp = dispinterface;
  DispHTMLRenderStyle = dispinterface;
  IHTMLCurrentStyle = interface;
  IHTMLCurrentStyleDisp = dispinterface;
  IHTMLCurrentStyle2 = interface;
  IHTMLCurrentStyle2Disp = dispinterface;
  IHTMLCurrentStyle3 = interface;
  IHTMLCurrentStyle3Disp = dispinterface;
  DispHTMLCurrentStyle = dispinterface;
  IHTMLRect = interface;
  IHTMLRectDisp = dispinterface;
  IHTMLRectCollection = interface;
  IHTMLRectCollectionDisp = dispinterface;
  IHTMLDOMNode = interface;
  IHTMLDOMNodeDisp = dispinterface;
  IHTMLDOMNode2 = interface;
  IHTMLDOMNode2Disp = dispinterface;
  IHTMLDOMAttribute = interface;
  IHTMLDOMAttributeDisp = dispinterface;
  IHTMLDOMAttribute2 = interface;
  IHTMLDOMAttribute2Disp = dispinterface;
  IHTMLDOMTextNode = interface;
  IHTMLDOMTextNodeDisp = dispinterface;
  IHTMLDOMTextNode2 = interface;
  IHTMLDOMTextNode2Disp = dispinterface;
  IHTMLDOMImplementation = interface;
  IHTMLDOMImplementationDisp = dispinterface;
  DispHTMLDOMAttribute = dispinterface;
  DispHTMLDOMTextNode = dispinterface;
  DispHTMLDOMImplementation = dispinterface;
  IHTMLAttributeCollection = interface;
  IHTMLAttributeCollectionDisp = dispinterface;
  IHTMLAttributeCollection2 = interface;
  IHTMLAttributeCollection2Disp = dispinterface;
  IHTMLDOMChildrenCollection = interface;
  IHTMLDOMChildrenCollectionDisp = dispinterface;
  DispHTMLAttributeCollection = dispinterface;
  DispDOMChildrenCollection = dispinterface;
  HTMLElementEvents2 = dispinterface;
  HTMLElementEvents = dispinterface;
  IHTMLElementCollection = interface;
  IHTMLElementCollectionDisp = dispinterface;
  IHTMLElement2 = interface;
  IHTMLElement2Disp = dispinterface;
  IHTMLElement3 = interface;
  IHTMLElement3Disp = dispinterface;
  IHTMLElement4 = interface;
  IHTMLElement4Disp = dispinterface;
  IHTMLElementRender = interface;
  IHTMLUniqueName = interface;
  IHTMLUniqueNameDisp = dispinterface;
  IHTMLDatabinding = interface;
  IHTMLDatabindingDisp = dispinterface;
  IHTMLDocument = interface;
  IHTMLDocumentDisp = dispinterface;
  IHTMLElementDefaults = interface;
  IHTMLElementDefaultsDisp = dispinterface;
  DispHTMLDefaults = dispinterface;
  IHTCDefaultDispatch = interface;
  IHTCDefaultDispatchDisp = dispinterface;
  IHTCPropertyBehavior = interface;
  IHTCPropertyBehaviorDisp = dispinterface;
  IHTCMethodBehavior = interface;
  IHTCMethodBehaviorDisp = dispinterface;
  IHTCEventBehavior = interface;
  IHTCEventBehaviorDisp = dispinterface;
  IHTCAttachBehavior = interface;
  IHTCAttachBehaviorDisp = dispinterface;
  IHTCAttachBehavior2 = interface;
  IHTCAttachBehavior2Disp = dispinterface;
  IHTCDescBehavior = interface;
  IHTCDescBehaviorDisp = dispinterface;
  DispHTCDefaultDispatch = dispinterface;
  DispHTCPropertyBehavior = dispinterface;
  DispHTCMethodBehavior = dispinterface;
  DispHTCEventBehavior = dispinterface;
  DispHTCAttachBehavior = dispinterface;
  DispHTCDescBehavior = dispinterface;
  IHTMLUrnCollection = interface;
  IHTMLUrnCollectionDisp = dispinterface;
  IHTMLGenericElement = interface;
  IHTMLGenericElementDisp = dispinterface;
  DispHTMLGenericElement = dispinterface;
  IHTMLStyleSheetRule = interface;
  IHTMLStyleSheetRuleDisp = dispinterface;
  IHTMLStyleSheetRulesCollection = interface;
  IHTMLStyleSheetRulesCollectionDisp = dispinterface;
  IHTMLStyleSheetPage = interface;
  IHTMLStyleSheetPageDisp = dispinterface;
  IHTMLStyleSheetPagesCollection = interface;
  IHTMLStyleSheetPagesCollectionDisp = dispinterface;
  IHTMLStyleSheetsCollection = interface;
  IHTMLStyleSheetsCollectionDisp = dispinterface;
  IHTMLStyleSheet = interface;
  IHTMLStyleSheetDisp = dispinterface;
  IHTMLStyleSheet2 = interface;
  IHTMLStyleSheet2Disp = dispinterface;
  DispHTMLStyleSheet = dispinterface;
  HTMLLinkElementEvents2 = dispinterface;
  HTMLLinkElementEvents = dispinterface;
  IHTMLLinkElement = interface;
  IHTMLLinkElementDisp = dispinterface;
  IHTMLLinkElement2 = interface;
  IHTMLLinkElement2Disp = dispinterface;
  IHTMLLinkElement3 = interface;
  IHTMLLinkElement3Disp = dispinterface;
  DispHTMLLinkElement = dispinterface;
  IHTMLTxtRange = interface;
  IHTMLTxtRangeDisp = dispinterface;
  IHTMLTextRangeMetrics = interface;
  IHTMLTextRangeMetricsDisp = dispinterface;
  IHTMLTextRangeMetrics2 = interface;
  IHTMLTextRangeMetrics2Disp = dispinterface;
  IHTMLTxtRangeCollection = interface;
  IHTMLTxtRangeCollectionDisp = dispinterface;
  HTMLFormElementEvents2 = dispinterface;
  HTMLFormElementEvents = dispinterface;
  IHTMLFormElement = interface;
  IHTMLFormElementDisp = dispinterface;
  IHTMLFormElement2 = interface;
  IHTMLFormElement2Disp = dispinterface;
  IHTMLFormElement3 = interface;
  IHTMLFormElement3Disp = dispinterface;
  IHTMLSubmitData = interface;
  IHTMLSubmitDataDisp = dispinterface;
  DispHTMLFormElement = dispinterface;
  HTMLControlElementEvents2 = dispinterface;
  HTMLControlElementEvents = dispinterface;
  IHTMLControlElement = interface;
  IHTMLControlElementDisp = dispinterface;
  IHTMLTextElement = interface;
  IHTMLTextElementDisp = dispinterface;
  DispHTMLTextElement = dispinterface;
  HTMLTextContainerEvents2 = dispinterface;
  HTMLTextContainerEvents = dispinterface;
  IHTMLTextContainer = interface;
  IHTMLTextContainerDisp = dispinterface;
  IHTMLControlRange = interface;
  IHTMLControlRangeDisp = dispinterface;
  IHTMLControlRange2 = interface;
  IHTMLControlRange2Disp = dispinterface;
  HTMLImgEvents2 = dispinterface;
  HTMLImgEvents = dispinterface;
  IHTMLImgElement = interface;
  IHTMLImgElementDisp = dispinterface;
  IHTMLImgElement2 = interface;
  IHTMLImgElement2Disp = dispinterface;
  IHTMLImageElementFactory = interface;
  IHTMLImageElementFactoryDisp = dispinterface;
  DispHTMLImg = dispinterface;
  IHTMLBodyElement = interface;
  IHTMLBodyElementDisp = dispinterface;
  IHTMLBodyElement2 = interface;
  IHTMLBodyElement2Disp = dispinterface;
  DispHTMLBody = dispinterface;
  IHTMLFontElement = interface;
  IHTMLFontElementDisp = dispinterface;
  DispHTMLFontElement = dispinterface;
  HTMLAnchorEvents2 = dispinterface;
  HTMLAnchorEvents = dispinterface;
  IHTMLAnchorElement = interface;
  IHTMLAnchorElementDisp = dispinterface;
  IHTMLAnchorElement2 = interface;
  IHTMLAnchorElement2Disp = dispinterface;
  DispHTMLAnchorElement = dispinterface;
  HTMLLabelEvents2 = dispinterface;
  HTMLLabelEvents = dispinterface;
  IHTMLLabelElement = interface;
  IHTMLLabelElementDisp = dispinterface;
  IHTMLLabelElement2 = interface;
  IHTMLLabelElement2Disp = dispinterface;
  DispHTMLLabelElement = dispinterface;
  IHTMLListElement = interface;
  IHTMLListElementDisp = dispinterface;
  IHTMLListElement2 = interface;
  IHTMLListElement2Disp = dispinterface;
  DispHTMLListElement = dispinterface;
  IHTMLUListElement = interface;
  IHTMLUListElementDisp = dispinterface;
  DispHTMLUListElement = dispinterface;
  IHTMLOListElement = interface;
  IHTMLOListElementDisp = dispinterface;
  DispHTMLOListElement = dispinterface;
  IHTMLLIElement = interface;
  IHTMLLIElementDisp = dispinterface;
  DispHTMLLIElement = dispinterface;
  IHTMLBlockElement = interface;
  IHTMLBlockElementDisp = dispinterface;
  IHTMLBlockElement2 = interface;
  IHTMLBlockElement2Disp = dispinterface;
  DispHTMLBlockElement = dispinterface;
  IHTMLDivElement = interface;
  IHTMLDivElementDisp = dispinterface;
  DispHTMLDivElement = dispinterface;
  IHTMLDDElement = interface;
  IHTMLDDElementDisp = dispinterface;
  DispHTMLDDElement = dispinterface;
  IHTMLDTElement = interface;
  IHTMLDTElementDisp = dispinterface;
  DispHTMLDTElement = dispinterface;
  IHTMLBRElement = interface;
  IHTMLBRElementDisp = dispinterface;
  DispHTMLBRElement = dispinterface;
  IHTMLDListElement = interface;
  IHTMLDListElementDisp = dispinterface;
  DispHTMLDListElement = dispinterface;
  IHTMLHRElement = interface;
  IHTMLHRElementDisp = dispinterface;
  DispHTMLHRElement = dispinterface;
  IHTMLParaElement = interface;
  IHTMLParaElementDisp = dispinterface;
  DispHTMLParaElement = dispinterface;
  IHTMLElementCollection2 = interface;
  IHTMLElementCollection2Disp = dispinterface;
  IHTMLElementCollection3 = interface;
  IHTMLElementCollection3Disp = dispinterface;
  DispHTMLElementCollection = dispinterface;
  IHTMLHeaderElement = interface;
  IHTMLHeaderElementDisp = dispinterface;
  DispHTMLHeaderElement = dispinterface;
  HTMLSelectElementEvents2 = dispinterface;
  HTMLSelectElementEvents = dispinterface;
  IHTMLSelectElement = interface;
  IHTMLSelectElementDisp = dispinterface;
  IHTMLSelectElement2 = interface;
  IHTMLSelectElement2Disp = dispinterface;
  IHTMLSelectElement4 = interface;
  IHTMLSelectElement4Disp = dispinterface;
  DispHTMLSelectElement = dispinterface;
  IHTMLSelectionObject = interface;
  IHTMLSelectionObjectDisp = dispinterface;
  IHTMLSelectionObject2 = interface;
  IHTMLSelectionObject2Disp = dispinterface;
  IHTMLOptionElement = interface;
  IHTMLOptionElementDisp = dispinterface;
  IHTMLOptionElement3 = interface;
  IHTMLOptionElement3Disp = dispinterface;
  IHTMLOptionElementFactory = interface;
  IHTMLOptionElementFactoryDisp = dispinterface;
  DispHTMLOptionElement = dispinterface;
  HTMLButtonElementEvents2 = dispinterface;
  HTMLButtonElementEvents = dispinterface;
  HTMLInputTextElementEvents2 = dispinterface;
  HTMLOptionButtonElementEvents2 = dispinterface;
  HTMLInputFileElementEvents2 = dispinterface;
  HTMLInputImageEvents2 = dispinterface;
  HTMLInputTextElementEvents = dispinterface;
  HTMLOptionButtonElementEvents = dispinterface;
  HTMLInputFileElementEvents = dispinterface;
  HTMLInputImageEvents = dispinterface;
  IHTMLInputElement = interface;
  IHTMLInputElementDisp = dispinterface;
  IHTMLInputElement2 = interface;
  IHTMLInputElement2Disp = dispinterface;
  IHTMLInputButtonElement = interface;
  IHTMLInputButtonElementDisp = dispinterface;
  IHTMLInputHiddenElement = interface;
  IHTMLInputHiddenElementDisp = dispinterface;
  IHTMLInputTextElement = interface;
  IHTMLInputTextElementDisp = dispinterface;
  IHTMLInputFileElement = interface;
  IHTMLInputFileElementDisp = dispinterface;
  IHTMLOptionButtonElement = interface;
  IHTMLOptionButtonElementDisp = dispinterface;
  IHTMLInputImage = interface;
  IHTMLInputImageDisp = dispinterface;
  DispHTMLInputElement = dispinterface;
  IHTMLTextAreaElement = interface;
  IHTMLTextAreaElementDisp = dispinterface;
  DispHTMLTextAreaElement = dispinterface;
  DispHTMLRichtextElement = dispinterface;
  IHTMLButtonElement = interface;
  IHTMLButtonElementDisp = dispinterface;
  DispHTMLButtonElement = dispinterface;
  HTMLMarqueeElementEvents2 = dispinterface;
  HTMLMarqueeElementEvents = dispinterface;
  IHTMLMarqueeElement = interface;
  IHTMLMarqueeElementDisp = dispinterface;
  DispHTMLMarqueeElement = dispinterface;
  IHTMLHtmlElement = interface;
  IHTMLHtmlElementDisp = dispinterface;
  IHTMLHeadElement = interface;
  IHTMLHeadElementDisp = dispinterface;
  IHTMLTitleElement = interface;
  IHTMLTitleElementDisp = dispinterface;
  IHTMLMetaElement = interface;
  IHTMLMetaElementDisp = dispinterface;
  IHTMLMetaElement2 = interface;
  IHTMLMetaElement2Disp = dispinterface;
  IHTMLBaseElement = interface;
  IHTMLBaseElementDisp = dispinterface;
  IHTMLIsIndexElement = interface;
  IHTMLIsIndexElementDisp = dispinterface;
  IHTMLIsIndexElement2 = interface;
  IHTMLIsIndexElement2Disp = dispinterface;
  IHTMLNextIdElement = interface;
  IHTMLNextIdElementDisp = dispinterface;
  DispHTMLHtmlElement = dispinterface;
  DispHTMLHeadElement = dispinterface;
  DispHTMLTitleElement = dispinterface;
  DispHTMLMetaElement = dispinterface;
  DispHTMLBaseElement = dispinterface;
  DispHTMLIsIndexElement = dispinterface;
  DispHTMLNextIdElement = dispinterface;
  IHTMLBaseFontElement = interface;
  IHTMLBaseFontElementDisp = dispinterface;
  DispHTMLBaseFontElement = dispinterface;
  IHTMLUnknownElement = interface;
  IHTMLUnknownElementDisp = dispinterface;
  DispHTMLUnknownElement = dispinterface;
  IOmHistory = interface;
  IOmHistoryDisp = dispinterface;
  IHTMLMimeTypesCollection = interface;
  IHTMLMimeTypesCollectionDisp = dispinterface;
  IHTMLPluginsCollection = interface;
  IHTMLPluginsCollectionDisp = dispinterface;
  IHTMLOpsProfile = interface;
  IHTMLOpsProfileDisp = dispinterface;
  IOmNavigator = interface;
  IOmNavigatorDisp = dispinterface;
  IHTMLLocation = interface;
  IHTMLLocationDisp = dispinterface;
  IHTMLBookmarkCollection = interface;
  IHTMLBookmarkCollectionDisp = dispinterface;
  IHTMLDataTransfer = interface;
  IHTMLDataTransferDisp = dispinterface;
  IHTMLEventObj2 = interface;
  IHTMLEventObj2Disp = dispinterface;
  IHTMLEventObj3 = interface;
  IHTMLEventObj3Disp = dispinterface;
  IHTMLEventObj4 = interface;
  IHTMLEventObj4Disp = dispinterface;
  DispCEventObj = dispinterface;
  HTMLWindowEvents2 = dispinterface;
  HTMLWindowEvents = dispinterface;
  IHTMLDocument2 = interface;
  IHTMLDocument2Disp = dispinterface;
  IHTMLFramesCollection2 = interface;
  IHTMLFramesCollection2Disp = dispinterface;
  IHTMLWindow2 = interface;
  IHTMLWindow2Disp = dispinterface;
  IHTMLScreen = interface;
  IHTMLScreenDisp = dispinterface;
  IHTMLWindow3 = interface;
  IHTMLWindow3Disp = dispinterface;
  IHTMLFrameBase = interface;
  IHTMLFrameBaseDisp = dispinterface;
  IHTMLScreen2 = interface;
  IHTMLScreen2Disp = dispinterface;
  IHTMLWindow4 = interface;
  IHTMLWindow4Disp = dispinterface;
  DispHTMLScreen = dispinterface;
  DispHTMLWindow2 = dispinterface;
  DispHTMLWindowProxy = dispinterface;
  HTMLDocumentEvents2 = dispinterface;
  HTMLDocumentEvents = dispinterface;
  IHTMLDocument3 = interface;
  IHTMLDocument3Disp = dispinterface;
  IHTMLDocument4 = interface;
  IHTMLDocument4Disp = dispinterface;
  IHTMLDocument5 = interface;
  IHTMLDocument5Disp = dispinterface;
  DispHTMLDocument = dispinterface;
  DWebBridgeEvents = dispinterface;
  IWebBridge = interface;
  IWebBridgeDisp = dispinterface;
  IWBScriptControl = interface;
  IWBScriptControlDisp = dispinterface;
  IHTMLEmbedElement = interface;
  IHTMLEmbedElementDisp = dispinterface;
  DispHTMLEmbed = dispinterface;
  HTMLMapEvents2 = dispinterface;
  HTMLMapEvents = dispinterface;
  IHTMLAreasCollection = interface;
  IHTMLAreasCollectionDisp = dispinterface;
  IHTMLAreasCollection2 = interface;
  IHTMLAreasCollection2Disp = dispinterface;
  IHTMLAreasCollection3 = interface;
  IHTMLAreasCollection3Disp = dispinterface;
  IHTMLMapElement = interface;
  IHTMLMapElementDisp = dispinterface;
  DispHTMLAreasCollection = dispinterface;
  DispHTMLMapElement = dispinterface;
  HTMLAreaEvents2 = dispinterface;
  HTMLAreaEvents = dispinterface;
  IHTMLAreaElement = interface;
  IHTMLAreaElementDisp = dispinterface;
  DispHTMLAreaElement = dispinterface;
  IHTMLTableCaption = interface;
  IHTMLTableCaptionDisp = dispinterface;
  DispHTMLTableCaption = dispinterface;
  IHTMLCommentElement = interface;
  IHTMLCommentElementDisp = dispinterface;
  IHTMLCommentElement2 = interface;
  IHTMLCommentElement2Disp = dispinterface;
  DispHTMLCommentElement = dispinterface;
  IHTMLPhraseElement = interface;
  IHTMLPhraseElementDisp = dispinterface;
  IHTMLPhraseElement2 = interface;
  IHTMLPhraseElement2Disp = dispinterface;
  IHTMLSpanElement = interface;
  IHTMLSpanElementDisp = dispinterface;
  DispHTMLPhraseElement = dispinterface;
  DispHTMLSpanElement = dispinterface;
  HTMLTableEvents2 = dispinterface;
  HTMLTableEvents = dispinterface;
  IHTMLTableSection = interface;
  IHTMLTableSectionDisp = dispinterface;
  IHTMLTable = interface;
  IHTMLTableDisp = dispinterface;
  IHTMLTable2 = interface;
  IHTMLTable2Disp = dispinterface;
  IHTMLTable3 = interface;
  IHTMLTable3Disp = dispinterface;
  IHTMLTableCol = interface;
  IHTMLTableColDisp = dispinterface;
  IHTMLTableCol2 = interface;
  IHTMLTableCol2Disp = dispinterface;
  IHTMLTableSection2 = interface;
  IHTMLTableSection2Disp = dispinterface;
  IHTMLTableSection3 = interface;
  IHTMLTableSection3Disp = dispinterface;
  IHTMLTableRow = interface;
  IHTMLTableRowDisp = dispinterface;
  IHTMLTableRow2 = interface;
  IHTMLTableRow2Disp = dispinterface;
  IHTMLTableRow3 = interface;
  IHTMLTableRow3Disp = dispinterface;
  IHTMLTableRowMetrics = interface;
  IHTMLTableRowMetricsDisp = dispinterface;
  IHTMLTableCell = interface;
  IHTMLTableCellDisp = dispinterface;
  IHTMLTableCell2 = interface;
  IHTMLTableCell2Disp = dispinterface;
  DispHTMLTable = dispinterface;
  DispHTMLTableCol = dispinterface;
  DispHTMLTableSection = dispinterface;
  DispHTMLTableRow = dispinterface;
  DispHTMLTableCell = dispinterface;
  HTMLScriptEvents2 = dispinterface;
  HTMLScriptEvents = dispinterface;
  IHTMLScriptElement = interface;
  IHTMLScriptElementDisp = dispinterface;
  IHTMLScriptElement2 = interface;
  IHTMLScriptElement2Disp = dispinterface;
  DispHTMLScriptElement = dispinterface;
  IHTMLNoShowElement = interface;
  IHTMLNoShowElementDisp = dispinterface;
  DispHTMLNoShowElement = dispinterface;
  HTMLObjectElementEvents2 = dispinterface;
  HTMLObjectElementEvents = dispinterface;
  IHTMLObjectElement = interface;
  IHTMLObjectElementDisp = dispinterface;
  IHTMLObjectElement2 = interface;
  IHTMLObjectElement2Disp = dispinterface;
  IHTMLObjectElement3 = interface;
  IHTMLObjectElement3Disp = dispinterface;
  IHTMLParamElement = interface;
  IHTMLParamElementDisp = dispinterface;
  DispHTMLObjectElement = dispinterface;
  DispHTMLParamElement = dispinterface;
  HTMLFrameSiteEvents2 = dispinterface;
  HTMLFrameSiteEvents = dispinterface;
  IHTMLFrameBase2 = interface;
  IHTMLFrameBase2Disp = dispinterface;
  IHTMLFrameBase3 = interface;
  IHTMLFrameBase3Disp = dispinterface;
  DispHTMLFrameBase = dispinterface;
  IHTMLFrameElement = interface;
  IHTMLFrameElementDisp = dispinterface;
  IHTMLFrameElement2 = interface;
  IHTMLFrameElement2Disp = dispinterface;
  DispHTMLFrameElement = dispinterface;
  IHTMLIFrameElement = interface;
  IHTMLIFrameElementDisp = dispinterface;
  IHTMLIFrameElement2 = interface;
  IHTMLIFrameElement2Disp = dispinterface;
  DispHTMLIFrame = dispinterface;
  IHTMLDivPosition = interface;
  IHTMLDivPositionDisp = dispinterface;
  IHTMLFieldSetElement = interface;
  IHTMLFieldSetElementDisp = dispinterface;
  IHTMLFieldSetElement2 = interface;
  IHTMLFieldSetElement2Disp = dispinterface;
  IHTMLLegendElement = interface;
  IHTMLLegendElementDisp = dispinterface;
  IHTMLLegendElement2 = interface;
  IHTMLLegendElement2Disp = dispinterface;
  DispHTMLDivPosition = dispinterface;
  DispHTMLFieldSetElement = dispinterface;
  DispHTMLLegendElement = dispinterface;
  IHTMLSpanFlow = interface;
  IHTMLSpanFlowDisp = dispinterface;
  DispHTMLSpanFlow = dispinterface;
  IHTMLFrameSetElement = interface;
  IHTMLFrameSetElementDisp = dispinterface;
  IHTMLFrameSetElement2 = interface;
  IHTMLFrameSetElement2Disp = dispinterface;
  DispHTMLFrameSetSite = dispinterface;
  IHTMLBGsound = interface;
  IHTMLBGsoundDisp = dispinterface;
  DispHTMLBGsound = dispinterface;
  IHTMLFontNamesCollection = interface;
  IHTMLFontNamesCollectionDisp = dispinterface;
  IHTMLFontSizesCollection = interface;
  IHTMLFontSizesCollectionDisp = dispinterface;
  IHTMLOptionsHolder = interface;
  IHTMLOptionsHolderDisp = dispinterface;
  HTMLStyleElementEvents2 = dispinterface;
  HTMLStyleElementEvents = dispinterface;
  IHTMLStyleElement = interface;
  IHTMLStyleElementDisp = dispinterface;
  DispHTMLStyleElement = dispinterface;
  IHTMLStyleFontFace = interface;
  IHTMLStyleFontFaceDisp = dispinterface;
  ICSSFilterSite = interface;
  IMarkupPointer = interface;
  IMarkupContainer = interface;
  IMarkupContainer2 = interface;
  IHTMLChangeSink = interface;
  IHTMLChangeLog = interface;
  IActiveIMMApp = interface;
  IEnumRegisterWordA = interface;
  IEnumRegisterWordW = interface;
  IEnumInputContext = interface;
  ISegmentList = interface;
  ISegmentListIterator = interface;
  ISegment = interface;
  IHTMLCaret = interface;
  IDisplayPointer = interface;
  ILineInfo = interface;
  IElementSegment = interface;
  IHighlightSegment = interface;
  IHighlightRenderingServices = interface;
  IDisplayServices = interface;
  IHTMLComputedStyle = interface;
  IHtmlDlgSafeHelper = interface;
  IBlockFormats = interface;
  IFontNames = interface;
  ICSSFilter = interface;
  ISecureUrlHost = interface;
  IMarkupServices = interface;
  IMarkupServices2 = interface;
  IHTMLChangePlayback = interface;
  IMarkupPointer2 = interface;
  IMarkupTextFrags = interface;
  IXMLGenericParse = interface;
  IHTMLEditHost = interface;
  IHTMLEditHost2 = interface;
  ISequenceNumber = interface;
  IIMEServices = interface;
  ISelectionServicesListener = interface;
  ISelectionServices = interface;
  IHTMLEditDesigner = interface;
  IHTMLEditServices = interface;
  IHTMLEditServices2 = interface;
  HTMLNamespaceEvents = dispinterface;
  IHTMLNamespace = interface;
  IHTMLNamespaceDisp = dispinterface;
  IHTMLNamespaceCollection = interface;
  IHTMLNamespaceCollectionDisp = dispinterface;
  IHTMLPainter = interface;
  IHTMLPaintSite = interface;
  IHTMLPainterEventInfo = interface;
  IHTMLPainterOverlay = interface;
  IHTMLIPrintCollection = interface;
  IHTMLIPrintCollectionDisp = dispinterface;
  IEnumPrivacyRecords = interface;
  IHTMLDialog = interface;
  IHTMLDialogDisp = dispinterface;
  IHTMLDialog2 = interface;
  IHTMLDialog2Disp = dispinterface;
  IHTMLDialog3 = interface;
  IHTMLDialog3Disp = dispinterface;
  IHTMLModelessInit = interface;
  IHTMLModelessInitDisp = dispinterface;
  IHTMLPopup = interface;
  IHTMLPopupDisp = dispinterface;
  DispHTMLPopup = dispinterface;
  IHTMLAppBehavior = interface;
  IHTMLAppBehaviorDisp = dispinterface;
  IHTMLAppBehavior2 = interface;
  IHTMLAppBehavior2Disp = dispinterface;
  IHTMLAppBehavior3 = interface;
  IHTMLAppBehavior3Disp = dispinterface;
  DispHTMLAppBehavior = dispinterface;
  DispIHTMLInputButtonElement = dispinterface;
  DispIHTMLInputTextElement = dispinterface;
  DispIHTMLInputFileElement = dispinterface;
  DispIHTMLOptionButtonElement = dispinterface;
  DispIHTMLInputImage = dispinterface;
  IElementNamespace = interface;
  IElementNamespaceTable = interface;
  IElementNamespaceFactory = interface;
  IElementNamespaceFactory2 = interface;
  IElementNamespaceFactoryCallback = interface;
  IElementBehaviorSiteOM2 = interface;
  IElementBehaviorCategory = interface;
  IElementBehaviorSiteCategory = interface;
  IEnumUnknown = interface;
  IElementBehaviorSubmit = interface;
  IElementBehaviorFocus = interface;
  IElementBehaviorLayout = interface;
  IElementBehaviorLayout2 = interface;
  IElementBehaviorSiteLayout = interface;
  IElementBehaviorSiteLayout2 = interface;
  IHostBehaviorInit = interface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library
// (NOTE: Here we map each CoClass to its Default Interface)
// *********************************************************************//
  HTMLStyle = DispHTMLStyle;
  HTMLRuleStyle = DispHTMLRuleStyle;
  HTMLCurrentStyle = DispHTMLCurrentStyle;
  HTMLFiltersCollection = IHTMLFiltersCollection;
  HTMLDOMAttribute = DispHTMLDOMAttribute;
  HTMLDOMTextNode = DispHTMLDOMTextNode;
  HTMLAttributeCollection = DispHTMLAttributeCollection;
  DOMChildrenCollection = DispDOMChildrenCollection;
  HTCDefaultDispatch = DispHTCDefaultDispatch;
  HTCPropertyBehavior = DispHTCPropertyBehavior;
  HTCMethodBehavior = DispHTCMethodBehavior;
  HTCEventBehavior = DispHTCEventBehavior;
  HTCAttachBehavior = DispHTCAttachBehavior;
  HTCDescBehavior = DispHTCDescBehavior;
  HTMLUrnCollection = IHTMLUrnCollection;
  HTMLGenericElement = DispHTMLGenericElement;
  HTMLStyleSheetRule = IHTMLStyleSheetRule;
  HTMLStyleSheetRulesCollection = IHTMLStyleSheetRulesCollection;
  HTMLStyleSheet = IHTMLStyleSheet;
  HTMLStyleSheetsCollection = IHTMLStyleSheetsCollection;
  HTMLLinkElement = DispHTMLLinkElement;
  HTMLFormElement = DispHTMLFormElement;
  HTMLTextElement = DispHTMLTextElement;
  HTMLImg = DispHTMLImg;
  HTMLImageElementFactory = IHTMLImageElementFactory;
  HTMLBody = DispHTMLBody;
  HTMLFontElement = DispHTMLFontElement;
  HTMLAnchorElement = DispHTMLAnchorElement;
  HTMLLabelElement = DispHTMLLabelElement;
  HTMLListElement = DispHTMLListElement;
  HTMLUListElement = DispHTMLUListElement;
  HTMLOListElement = DispHTMLOListElement;
  HTMLLIElement = DispHTMLLIElement;
  HTMLBlockElement = DispHTMLBlockElement;
  HTMLDivElement = DispHTMLDivElement;
  HTMLDDElement = DispHTMLDDElement;
  HTMLDTElement = DispHTMLDTElement;
  HTMLBRElement = DispHTMLBRElement;
  HTMLDListElement = DispHTMLDListElement;
  HTMLHRElement = DispHTMLHRElement;
  HTMLParaElement = DispHTMLParaElement;
  HTMLElementCollection = DispHTMLElementCollection;
  HTMLHeaderElement = DispHTMLHeaderElement;
  HTMLSelectElement = DispHTMLSelectElement;
  HTMLOptionElement = DispHTMLOptionElement;
  HTMLOptionElementFactory = IHTMLOptionElementFactory;
  HTMLInputElement = DispHTMLInputElement;
  HTMLTextAreaElement = DispHTMLTextAreaElement;
  HTMLRichtextElement = DispHTMLRichtextElement;
  HTMLButtonElement = DispHTMLButtonElement;
  HTMLMarqueeElement = DispHTMLMarqueeElement;
  HTMLHtmlElement = DispHTMLHtmlElement;
  HTMLHeadElement = DispHTMLHeadElement;
  HTMLTitleElement = DispHTMLTitleElement;
  HTMLMetaElement = DispHTMLMetaElement;
  HTMLBaseElement = DispHTMLBaseElement;
  HTMLIsIndexElement = DispHTMLIsIndexElement;
  HTMLNextIdElement = DispHTMLNextIdElement;
  HTMLBaseFontElement = DispHTMLBaseFontElement;
  HTMLUnknownElement = DispHTMLUnknownElement;
  HTMLHistory = IOmHistory;
  CMimeTypes = IHTMLMimeTypesCollection;
  CPlugins = IHTMLPluginsCollection;
  COpsProfile = IHTMLOpsProfile;
  HTMLNavigator = IOmNavigator;
  HTMLLocation = IHTMLLocation;
  CEventObj = DispCEventObj;
  HTMLScreen = IHTMLScreen;
  HTMLWindow2 = DispHTMLWindow2;
  HTMLWindowProxy = DispHTMLWindowProxy;
  HTMLDocument = DispHTMLDocument;
  Scriptlet = IWebBridge;
  HTMLEmbed = DispHTMLEmbed;
  HTMLAreasCollection = DispHTMLAreasCollection;
  HTMLMapElement = DispHTMLMapElement;
  HTMLAreaElement = DispHTMLAreaElement;
  HTMLTableCaption = DispHTMLTableCaption;
  HTMLCommentElement = DispHTMLCommentElement;
  HTMLPhraseElement = DispHTMLPhraseElement;
  HTMLSpanElement = DispHTMLSpanElement;
  HTMLTable = DispHTMLTable;
  HTMLTableCol = DispHTMLTableCol;
  HTMLTableSection = DispHTMLTableSection;
  HTMLTableRow = DispHTMLTableRow;
  HTMLTableCell = DispHTMLTableCell;
  HTMLScriptElement = DispHTMLScriptElement;
  HTMLNoShowElement = DispHTMLNoShowElement;
  HTMLObjectElement = DispHTMLObjectElement;
  HTMLFrameBase = DispHTMLFrameBase;
  HTMLFrameElement = DispHTMLFrameElement;
  HTMLIFrame = DispHTMLIFrame;
  HTMLDivPosition = DispHTMLDivPosition;
  HTMLFieldSetElement = DispHTMLFieldSetElement;
  HTMLLegendElement = DispHTMLLegendElement;
  HTMLSpanFlow = DispHTMLSpanFlow;
  HTMLFrameSetSite = DispHTMLFrameSetSite;
  HTMLBGsound = DispHTMLBGsound;
  HTMLStyleElement = DispHTMLStyleElement;
  HTMLStyleFontFace = IHTMLStyleFontFace;
  ThreadDialogProcParam = IHTMLModelessInit;
  HTMLDialog = IHTMLDialog;
  HTMLAppBehavior = DispHTMLAppBehavior;
  OldHTMLDocument = DispHTMLDocument;
  OldHTMLFormElement = DispHTMLFormElement;
  HTMLInputButtonElement = DispIHTMLInputButtonElement;
  HTMLInputTextElement = DispIHTMLInputTextElement;
  HTMLInputFileElement = DispIHTMLInputFileElement;
  HTMLOptionButtonElement = DispIHTMLOptionButtonElement;
  htmlInputImage = DispIHTMLInputImage;

// *********************************************************************//
// Declaration of structures, unions and aliases.
// *********************************************************************//

  LONG_PTR = LPARAM;

  REGISTERWORDA = packed record
    lpReading: PAnsiChar;
    lpWord: PAnsiChar;
  end;

  REGISTERWORDW = packed record
    lpReading: PWideChar;
    lpWord: PWideChar;
  end;

  CANDIDATELIST = packed record
    dwSize: LongWord;
    dwStyle: LongWord;
    dwCount: LongWord;
    dwSelection: LongWord;
    dwPageStart: LongWord;
    dwPageSize: LongWord;
    dwOffset: array[0..0] of LongWord;
  end;

  CANDIDATEFORM = packed record
    dwIndex: LongWord;
    dwStyle: LongWord;
    ptCurrentPos: TPoint;
    rcArea: TRect;
  end;

  COMPOSITIONFORM = packed record
    dwStyle: LongWord;
    ptCurrentPos: TPoint;
    rcArea: TRect;
  end;

  STYLEBUFA = packed record
    dwStyle: LongWord;
    szDescription: array[0..31] of Byte;
  end;

  STYLEBUFW = packed record
    dwStyle: LongWord;
    szDescription: array[0..31] of Word;
  end;

  UINT_PTR = LongWord;

  IMEMENUITEMINFOA = packed record
    cbSize: SYSUINT;
    fType: SYSUINT;
    fState: SYSUINT;
    wID: SYSUINT;
    hbmpChecked: HBITMAP;
    hbmpUnchecked: HBITMAP;
    dwItemData: LongWord;
    szString: array[0..79] of Byte;
    hbmpItem: HBITMAP;
  end;

  IMEMENUITEMINFOW = packed record
    cbSize: SYSUINT;
    fType: SYSUINT;
    fState: SYSUINT;
    wID: SYSUINT;
    hbmpChecked: HBITMAP;
    hbmpUnchecked: HBITMAP;
    dwItemData: LongWord;
    szString: array[0..79] of Word;
    hbmpItem: HBITMAP;
  end;

  P_HTML_PAINTER_INFO = ^_HTML_PAINTER_INFO;
  _HTML_PAINTER_INFO = packed record
    lFlags: Integer;
    lZOrder: Integer;
    iidDrawObject: TGUID;
    rcExpand: TRect;
  end;

  _HTML_PAINT_XFORM = packed record
    eM11: Single;
    eM12: Single;
    eM21: Single;
    eM22: Single;
    eDx: Single;
    eDy: Single;
  end;

  P_HTML_PAINT_DRAW_INFO = ^_HTML_PAINT_DRAW_INFO;
  _HTML_PAINT_DRAW_INFO = packed record
    rcViewport: TRect;
    hrgnUpdate: Pointer;
    xform: _HTML_PAINT_XFORM;
  end;

// *********************************************************************//
// Interface: IHTMLEventObj
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F32D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj = interface(IDispatch)
    ['{3050F32D-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_srcElement: IHTMLElement; safecall;
    function Get_altKey: WordBool; safecall;
    function Get_ctrlKey: WordBool; safecall;
    function Get_shiftKey: WordBool; safecall;
    procedure Set_returnValue(p: OleVariant); safecall;
    function Get_returnValue: OleVariant; safecall;
    procedure Set_cancelBubble(p: WordBool); safecall;
    function Get_cancelBubble: WordBool; safecall;
    function Get_fromElement: IHTMLElement; safecall;
    function Get_toElement: IHTMLElement; safecall;
    procedure Set_keyCode(p: Integer); safecall;
    function Get_keyCode: Integer; safecall;
    function Get_button: Integer; safecall;
    function Get_type_: WideString; safecall;
    function Get_qualifier: WideString; safecall;
    function Get_reason: Integer; safecall;
    function Get_x: Integer; safecall;
    function Get_y: Integer; safecall;
    function Get_clientX: Integer; safecall;
    function Get_clientY: Integer; safecall;
    function Get_offsetX: Integer; safecall;
    function Get_offsetY: Integer; safecall;
    function Get_screenX: Integer; safecall;
    function Get_screenY: Integer; safecall;
    function Get_srcFilter: IDispatch; safecall;
    property srcElement: IHTMLElement read Get_srcElement;
    property altKey: WordBool read Get_altKey;
    property ctrlKey: WordBool read Get_ctrlKey;
    property shiftKey: WordBool read Get_shiftKey;
    property returnValue: OleVariant read Get_returnValue write Set_returnValue;
    property cancelBubble: WordBool read Get_cancelBubble write Set_cancelBubble;
    property fromElement: IHTMLElement read Get_fromElement;
    property toElement: IHTMLElement read Get_toElement;
    property keyCode: Integer read Get_keyCode write Set_keyCode;
    property button: Integer read Get_button;
    property type_: WideString read Get_type_;
    property qualifier: WideString read Get_qualifier;
    property reason: Integer read Get_reason;
    property x: Integer read Get_x;
    property y: Integer read Get_y;
    property clientX: Integer read Get_clientX;
    property clientY: Integer read Get_clientY;
    property offsetX: Integer read Get_offsetX;
    property offsetY: Integer read Get_offsetY;
    property screenX: Integer read Get_screenX;
    property screenY: Integer read Get_screenY;
    property srcFilter: IDispatch read Get_srcFilter;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEventObjDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F32D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObjDisp = dispinterface
    ['{3050F32D-98B5-11CF-BB82-00AA00BDCE0B}']
    property srcElement: IHTMLElement readonly dispid 1001;
    property altKey: WordBool readonly dispid 1002;
    property ctrlKey: WordBool readonly dispid 1003;
    property shiftKey: WordBool readonly dispid 1004;
    property returnValue: OleVariant dispid 1007;
    property cancelBubble: WordBool dispid 1008;
    property fromElement: IHTMLElement readonly dispid 1009;
    property toElement: IHTMLElement readonly dispid 1010;
    property keyCode: Integer dispid 1011;
    property button: Integer readonly dispid 1012;
    property type_: WideString readonly dispid 1013;
    property qualifier: WideString readonly dispid 1014;
    property reason: Integer readonly dispid 1015;
    property x: Integer readonly dispid 1005;
    property y: Integer readonly dispid 1006;
    property clientX: Integer readonly dispid 1020;
    property clientY: Integer readonly dispid 1021;
    property offsetX: Integer readonly dispid 1022;
    property offsetY: Integer readonly dispid 1023;
    property screenX: Integer readonly dispid 1024;
    property screenY: Integer readonly dispid 1025;
    property srcFilter: IDispatch readonly dispid 1026;
  end;

// *********************************************************************//
// Interface: IHTMLElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement = interface(IDispatch)
    ['{3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); safecall;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; safecall;
    procedure Set_className(const p: WideString); safecall;
    function Get_className: WideString; safecall;
    procedure Set_id(const p: WideString); safecall;
    function Get_id: WideString; safecall;
    function Get_tagName: WideString; safecall;
    function Get_parentElement: IHTMLElement; safecall;
    function Get_style: IHTMLStyle; safecall;
    procedure Set_onhelp(p: OleVariant); safecall;
    function Get_onhelp: OleVariant; safecall;
    procedure Set_onclick(p: OleVariant); safecall;
    function Get_onclick: OleVariant; safecall;
    procedure Set_ondblclick(p: OleVariant); safecall;
    function Get_ondblclick: OleVariant; safecall;
    procedure Set_onkeydown(p: OleVariant); safecall;
    function Get_onkeydown: OleVariant; safecall;
    procedure Set_onkeyup(p: OleVariant); safecall;
    function Get_onkeyup: OleVariant; safecall;
    procedure Set_onkeypress(p: OleVariant); safecall;
    function Get_onkeypress: OleVariant; safecall;
    procedure Set_onmouseout(p: OleVariant); safecall;
    function Get_onmouseout: OleVariant; safecall;
    procedure Set_onmouseover(p: OleVariant); safecall;
    function Get_onmouseover: OleVariant; safecall;
    procedure Set_onmousemove(p: OleVariant); safecall;
    function Get_onmousemove: OleVariant; safecall;
    procedure Set_onmousedown(p: OleVariant); safecall;
    function Get_onmousedown: OleVariant; safecall;
    procedure Set_onmouseup(p: OleVariant); safecall;
    function Get_onmouseup: OleVariant; safecall;
    function Get_document: IDispatch; safecall;
    procedure Set_title(const p: WideString); safecall;
    function Get_title: WideString; safecall;
    procedure Set_language(const p: WideString); safecall;
    function Get_language: WideString; safecall;
    procedure Set_onselectstart(p: OleVariant); safecall;
    function Get_onselectstart: OleVariant; safecall;
    procedure scrollIntoView(varargStart: OleVariant); safecall;
    function contains(const pChild: IHTMLElement): WordBool; safecall;
    function Get_sourceIndex: Integer; safecall;
    function Get_recordNumber: OleVariant; safecall;
    procedure Set_lang(const p: WideString); safecall;
    function Get_lang: WideString; safecall;
    function Get_offsetLeft: Integer; safecall;
    function Get_offsetTop: Integer; safecall;
    function Get_offsetWidth: Integer; safecall;
    function Get_offsetHeight: Integer; safecall;
    function Get_offsetParent: IHTMLElement; safecall;
    procedure Set_innerHTML(const p: WideString); safecall;
    function Get_innerHTML: WideString; safecall;
    procedure Set_innerText(const p: WideString); safecall;
    function Get_innerText: WideString; safecall;
    procedure Set_outerHTML(const p: WideString); safecall;
    function Get_outerHTML: WideString; safecall;
    procedure Set_outerText(const p: WideString); safecall;
    function Get_outerText: WideString; safecall;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); safecall;
    procedure insertAdjacentText(const where: WideString; const text: WideString); safecall;
    function Get_parentTextEdit: IHTMLElement; safecall;
    function Get_isTextEdit: WordBool; safecall;
    procedure click; safecall;
    function Get_filters: IHTMLFiltersCollection; safecall;
    procedure Set_ondragstart(p: OleVariant); safecall;
    function Get_ondragstart: OleVariant; safecall;
    function toString: WideString; safecall;
    procedure Set_onbeforeupdate(p: OleVariant); safecall;
    function Get_onbeforeupdate: OleVariant; safecall;
    procedure Set_onafterupdate(p: OleVariant); safecall;
    function Get_onafterupdate: OleVariant; safecall;
    procedure Set_onerrorupdate(p: OleVariant); safecall;
    function Get_onerrorupdate: OleVariant; safecall;
    procedure Set_onrowexit(p: OleVariant); safecall;
    function Get_onrowexit: OleVariant; safecall;
    procedure Set_onrowenter(p: OleVariant); safecall;
    function Get_onrowenter: OleVariant; safecall;
    procedure Set_ondatasetchanged(p: OleVariant); safecall;
    function Get_ondatasetchanged: OleVariant; safecall;
    procedure Set_ondataavailable(p: OleVariant); safecall;
    function Get_ondataavailable: OleVariant; safecall;
    procedure Set_ondatasetcomplete(p: OleVariant); safecall;
    function Get_ondatasetcomplete: OleVariant; safecall;
    procedure Set_onfilterchange(p: OleVariant); safecall;
    function Get_onfilterchange: OleVariant; safecall;
    function Get_children: IDispatch; safecall;
    function Get_all: IDispatch; safecall;
    property className: WideString read Get_className write Set_className;
    property id: WideString read Get_id write Set_id;
    property tagName: WideString read Get_tagName;
    property parentElement: IHTMLElement read Get_parentElement;
    property style: IHTMLStyle read Get_style;
    property onhelp: OleVariant read Get_onhelp write Set_onhelp;
    property onclick: OleVariant read Get_onclick write Set_onclick;
    property ondblclick: OleVariant read Get_ondblclick write Set_ondblclick;
    property onkeydown: OleVariant read Get_onkeydown write Set_onkeydown;
    property onkeyup: OleVariant read Get_onkeyup write Set_onkeyup;
    property onkeypress: OleVariant read Get_onkeypress write Set_onkeypress;
    property onmouseout: OleVariant read Get_onmouseout write Set_onmouseout;
    property onmouseover: OleVariant read Get_onmouseover write Set_onmouseover;
    property onmousemove: OleVariant read Get_onmousemove write Set_onmousemove;
    property onmousedown: OleVariant read Get_onmousedown write Set_onmousedown;
    property onmouseup: OleVariant read Get_onmouseup write Set_onmouseup;
    property document: IDispatch read Get_document;
    property title: WideString read Get_title write Set_title;
    property language: WideString read Get_language write Set_language;
    property onselectstart: OleVariant read Get_onselectstart write Set_onselectstart;
    property sourceIndex: Integer read Get_sourceIndex;
    property recordNumber: OleVariant read Get_recordNumber;
    property lang: WideString read Get_lang write Set_lang;
    property offsetLeft: Integer read Get_offsetLeft;
    property offsetTop: Integer read Get_offsetTop;
    property offsetWidth: Integer read Get_offsetWidth;
    property offsetHeight: Integer read Get_offsetHeight;
    property offsetParent: IHTMLElement read Get_offsetParent;
    property innerHTML: WideString read Get_innerHTML write Set_innerHTML;
    property innerText: WideString read Get_innerText write Set_innerText;
    property outerHTML: WideString read Get_outerHTML write Set_outerHTML;
    property outerText: WideString read Get_outerText write Set_outerText;
    property parentTextEdit: IHTMLElement read Get_parentTextEdit;
    property isTextEdit: WordBool read Get_isTextEdit;
    property filters: IHTMLFiltersCollection read Get_filters;
    property ondragstart: OleVariant read Get_ondragstart write Set_ondragstart;
    property onbeforeupdate: OleVariant read Get_onbeforeupdate write Set_onbeforeupdate;
    property onafterupdate: OleVariant read Get_onafterupdate write Set_onafterupdate;
    property onerrorupdate: OleVariant read Get_onerrorupdate write Set_onerrorupdate;
    property onrowexit: OleVariant read Get_onrowexit write Set_onrowexit;
    property onrowenter: OleVariant read Get_onrowenter write Set_onrowenter;
    property ondatasetchanged: OleVariant read Get_ondatasetchanged write Set_ondatasetchanged;
    property ondataavailable: OleVariant read Get_ondataavailable write Set_ondataavailable;
    property ondatasetcomplete: OleVariant read Get_ondatasetcomplete write Set_ondatasetcomplete;
    property onfilterchange: OleVariant read Get_onfilterchange write Set_onfilterchange;
    property children: IDispatch read Get_children;
    property all: IDispatch read Get_all;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementDisp = dispinterface
    ['{3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
  end;

// *********************************************************************//
// Interface: IHTMLStyle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle = interface(IDispatch)
    ['{3050F25E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_fontFamily(const p: WideString); safecall;
    function Get_fontFamily: WideString; safecall;
    procedure Set_fontStyle(const p: WideString); safecall;
    function Get_fontStyle: WideString; safecall;
    procedure Set_fontVariant(const p: WideString); safecall;
    function Get_fontVariant: WideString; safecall;
    procedure Set_fontWeight(const p: WideString); safecall;
    function Get_fontWeight: WideString; safecall;
    procedure Set_fontSize(p: OleVariant); safecall;
    function Get_fontSize: OleVariant; safecall;
    procedure Set_font(const p: WideString); safecall;
    function Get_font: WideString; safecall;
    procedure Set_color(p: OleVariant); safecall;
    function Get_color: OleVariant; safecall;
    procedure Set_background(const p: WideString); safecall;
    function Get_background: WideString; safecall;
    procedure Set_backgroundColor(p: OleVariant); safecall;
    function Get_backgroundColor: OleVariant; safecall;
    procedure Set_backgroundImage(const p: WideString); safecall;
    function Get_backgroundImage: WideString; safecall;
    procedure Set_backgroundRepeat(const p: WideString); safecall;
    function Get_backgroundRepeat: WideString; safecall;
    procedure Set_backgroundAttachment(const p: WideString); safecall;
    function Get_backgroundAttachment: WideString; safecall;
    procedure Set_backgroundPosition(const p: WideString); safecall;
    function Get_backgroundPosition: WideString; safecall;
    procedure Set_backgroundPositionX(p: OleVariant); safecall;
    function Get_backgroundPositionX: OleVariant; safecall;
    procedure Set_backgroundPositionY(p: OleVariant); safecall;
    function Get_backgroundPositionY: OleVariant; safecall;
    procedure Set_wordSpacing(p: OleVariant); safecall;
    function Get_wordSpacing: OleVariant; safecall;
    procedure Set_letterSpacing(p: OleVariant); safecall;
    function Get_letterSpacing: OleVariant; safecall;
    procedure Set_textDecoration(const p: WideString); safecall;
    function Get_textDecoration: WideString; safecall;
    procedure Set_textDecorationNone(p: WordBool); safecall;
    function Get_textDecorationNone: WordBool; safecall;
    procedure Set_textDecorationUnderline(p: WordBool); safecall;
    function Get_textDecorationUnderline: WordBool; safecall;
    procedure Set_textDecorationOverline(p: WordBool); safecall;
    function Get_textDecorationOverline: WordBool; safecall;
    procedure Set_textDecorationLineThrough(p: WordBool); safecall;
    function Get_textDecorationLineThrough: WordBool; safecall;
    procedure Set_textDecorationBlink(p: WordBool); safecall;
    function Get_textDecorationBlink: WordBool; safecall;
    procedure Set_verticalAlign(p: OleVariant); safecall;
    function Get_verticalAlign: OleVariant; safecall;
    procedure Set_textTransform(const p: WideString); safecall;
    function Get_textTransform: WideString; safecall;
    procedure Set_textAlign(const p: WideString); safecall;
    function Get_textAlign: WideString; safecall;
    procedure Set_textIndent(p: OleVariant); safecall;
    function Get_textIndent: OleVariant; safecall;
    procedure Set_lineHeight(p: OleVariant); safecall;
    function Get_lineHeight: OleVariant; safecall;
    procedure Set_marginTop(p: OleVariant); safecall;
    function Get_marginTop: OleVariant; safecall;
    procedure Set_marginRight(p: OleVariant); safecall;
    function Get_marginRight: OleVariant; safecall;
    procedure Set_marginBottom(p: OleVariant); safecall;
    function Get_marginBottom: OleVariant; safecall;
    procedure Set_marginLeft(p: OleVariant); safecall;
    function Get_marginLeft: OleVariant; safecall;
    procedure Set_margin(const p: WideString); safecall;
    function Get_margin: WideString; safecall;
    procedure Set_paddingTop(p: OleVariant); safecall;
    function Get_paddingTop: OleVariant; safecall;
    procedure Set_paddingRight(p: OleVariant); safecall;
    function Get_paddingRight: OleVariant; safecall;
    procedure Set_paddingBottom(p: OleVariant); safecall;
    function Get_paddingBottom: OleVariant; safecall;
    procedure Set_paddingLeft(p: OleVariant); safecall;
    function Get_paddingLeft: OleVariant; safecall;
    procedure Set_padding(const p: WideString); safecall;
    function Get_padding: WideString; safecall;
    procedure Set_border(const p: WideString); safecall;
    function Get_border: WideString; safecall;
    procedure Set_borderTop(const p: WideString); safecall;
    function Get_borderTop: WideString; safecall;
    procedure Set_borderRight(const p: WideString); safecall;
    function Get_borderRight: WideString; safecall;
    procedure Set_borderBottom(const p: WideString); safecall;
    function Get_borderBottom: WideString; safecall;
    procedure Set_borderLeft(const p: WideString); safecall;
    function Get_borderLeft: WideString; safecall;
    procedure Set_borderColor(const p: WideString); safecall;
    function Get_borderColor: WideString; safecall;
    procedure Set_borderTopColor(p: OleVariant); safecall;
    function Get_borderTopColor: OleVariant; safecall;
    procedure Set_borderRightColor(p: OleVariant); safecall;
    function Get_borderRightColor: OleVariant; safecall;
    procedure Set_borderBottomColor(p: OleVariant); safecall;
    function Get_borderBottomColor: OleVariant; safecall;
    procedure Set_borderLeftColor(p: OleVariant); safecall;
    function Get_borderLeftColor: OleVariant; safecall;
    procedure Set_borderWidth(const p: WideString); safecall;
    function Get_borderWidth: WideString; safecall;
    procedure Set_borderTopWidth(p: OleVariant); safecall;
    function Get_borderTopWidth: OleVariant; safecall;
    procedure Set_borderRightWidth(p: OleVariant); safecall;
    function Get_borderRightWidth: OleVariant; safecall;
    procedure Set_borderBottomWidth(p: OleVariant); safecall;
    function Get_borderBottomWidth: OleVariant; safecall;
    procedure Set_borderLeftWidth(p: OleVariant); safecall;
    function Get_borderLeftWidth: OleVariant; safecall;
    procedure Set_borderStyle(const p: WideString); safecall;
    function Get_borderStyle: WideString; safecall;
    procedure Set_borderTopStyle(const p: WideString); safecall;
    function Get_borderTopStyle: WideString; safecall;
    procedure Set_borderRightStyle(const p: WideString); safecall;
    function Get_borderRightStyle: WideString; safecall;
    procedure Set_borderBottomStyle(const p: WideString); safecall;
    function Get_borderBottomStyle: WideString; safecall;
    procedure Set_borderLeftStyle(const p: WideString); safecall;
    function Get_borderLeftStyle: WideString; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    procedure Set_styleFloat(const p: WideString); safecall;
    function Get_styleFloat: WideString; safecall;
    procedure Set_clear(const p: WideString); safecall;
    function Get_clear: WideString; safecall;
    procedure Set_display(const p: WideString); safecall;
    function Get_display: WideString; safecall;
    procedure Set_visibility(const p: WideString); safecall;
    function Get_visibility: WideString; safecall;
    procedure Set_listStyleType(const p: WideString); safecall;
    function Get_listStyleType: WideString; safecall;
    procedure Set_listStylePosition(const p: WideString); safecall;
    function Get_listStylePosition: WideString; safecall;
    procedure Set_listStyleImage(const p: WideString); safecall;
    function Get_listStyleImage: WideString; safecall;
    procedure Set_listStyle(const p: WideString); safecall;
    function Get_listStyle: WideString; safecall;
    procedure Set_whiteSpace(const p: WideString); safecall;
    function Get_whiteSpace: WideString; safecall;
    procedure Set_top(p: OleVariant); safecall;
    function Get_top: OleVariant; safecall;
    procedure Set_left(p: OleVariant); safecall;
    function Get_left: OleVariant; safecall;
    function Get_position: WideString; safecall;
    procedure Set_zIndex(p: OleVariant); safecall;
    function Get_zIndex: OleVariant; safecall;
    procedure Set_overflow(const p: WideString); safecall;
    function Get_overflow: WideString; safecall;
    procedure Set_pageBreakBefore(const p: WideString); safecall;
    function Get_pageBreakBefore: WideString; safecall;
    procedure Set_pageBreakAfter(const p: WideString); safecall;
    function Get_pageBreakAfter: WideString; safecall;
    procedure Set_cssText(const p: WideString); safecall;
    function Get_cssText: WideString; safecall;
    procedure Set_pixelTop(p: Integer); safecall;
    function Get_pixelTop: Integer; safecall;
    procedure Set_pixelLeft(p: Integer); safecall;
    function Get_pixelLeft: Integer; safecall;
    procedure Set_pixelWidth(p: Integer); safecall;
    function Get_pixelWidth: Integer; safecall;
    procedure Set_pixelHeight(p: Integer); safecall;
    function Get_pixelHeight: Integer; safecall;
    procedure Set_posTop(p: Single); safecall;
    function Get_posTop: Single; safecall;
    procedure Set_posLeft(p: Single); safecall;
    function Get_posLeft: Single; safecall;
    procedure Set_posWidth(p: Single); safecall;
    function Get_posWidth: Single; safecall;
    procedure Set_posHeight(p: Single); safecall;
    function Get_posHeight: Single; safecall;
    procedure Set_cursor(const p: WideString); safecall;
    function Get_cursor: WideString; safecall;
    procedure Set_clip(const p: WideString); safecall;
    function Get_clip: WideString; safecall;
    procedure Set_filter(const p: WideString); safecall;
    function Get_filter: WideString; safecall;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); safecall;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; safecall;
    function toString: WideString; safecall;
    property fontFamily: WideString read Get_fontFamily write Set_fontFamily;
    property fontStyle: WideString read Get_fontStyle write Set_fontStyle;
    property fontVariant: WideString read Get_fontVariant write Set_fontVariant;
    property fontWeight: WideString read Get_fontWeight write Set_fontWeight;
    property fontSize: OleVariant read Get_fontSize write Set_fontSize;
    property font: WideString read Get_font write Set_font;
    property color: OleVariant read Get_color write Set_color;
    property background: WideString read Get_background write Set_background;
    property backgroundColor: OleVariant read Get_backgroundColor write Set_backgroundColor;
    property backgroundImage: WideString read Get_backgroundImage write Set_backgroundImage;
    property backgroundRepeat: WideString read Get_backgroundRepeat write Set_backgroundRepeat;
    property backgroundAttachment: WideString read Get_backgroundAttachment write Set_backgroundAttachment;
    property backgroundPosition: WideString read Get_backgroundPosition write Set_backgroundPosition;
    property backgroundPositionX: OleVariant read Get_backgroundPositionX write Set_backgroundPositionX;
    property backgroundPositionY: OleVariant read Get_backgroundPositionY write Set_backgroundPositionY;
    property wordSpacing: OleVariant read Get_wordSpacing write Set_wordSpacing;
    property letterSpacing: OleVariant read Get_letterSpacing write Set_letterSpacing;
    property textDecoration: WideString read Get_textDecoration write Set_textDecoration;
    property textDecorationNone: WordBool read Get_textDecorationNone write Set_textDecorationNone;
    property textDecorationUnderline: WordBool read Get_textDecorationUnderline write Set_textDecorationUnderline;
    property textDecorationOverline: WordBool read Get_textDecorationOverline write Set_textDecorationOverline;
    property textDecorationLineThrough: WordBool read Get_textDecorationLineThrough write Set_textDecorationLineThrough;
    property textDecorationBlink: WordBool read Get_textDecorationBlink write Set_textDecorationBlink;
    property verticalAlign: OleVariant read Get_verticalAlign write Set_verticalAlign;
    property textTransform: WideString read Get_textTransform write Set_textTransform;
    property textAlign: WideString read Get_textAlign write Set_textAlign;
    property textIndent: OleVariant read Get_textIndent write Set_textIndent;
    property lineHeight: OleVariant read Get_lineHeight write Set_lineHeight;
    property marginTop: OleVariant read Get_marginTop write Set_marginTop;
    property marginRight: OleVariant read Get_marginRight write Set_marginRight;
    property marginBottom: OleVariant read Get_marginBottom write Set_marginBottom;
    property marginLeft: OleVariant read Get_marginLeft write Set_marginLeft;
    property margin: WideString read Get_margin write Set_margin;
    property paddingTop: OleVariant read Get_paddingTop write Set_paddingTop;
    property paddingRight: OleVariant read Get_paddingRight write Set_paddingRight;
    property paddingBottom: OleVariant read Get_paddingBottom write Set_paddingBottom;
    property paddingLeft: OleVariant read Get_paddingLeft write Set_paddingLeft;
    property padding: WideString read Get_padding write Set_padding;
    property border: WideString read Get_border write Set_border;
    property borderTop: WideString read Get_borderTop write Set_borderTop;
    property borderRight: WideString read Get_borderRight write Set_borderRight;
    property borderBottom: WideString read Get_borderBottom write Set_borderBottom;
    property borderLeft: WideString read Get_borderLeft write Set_borderLeft;
    property borderColor: WideString read Get_borderColor write Set_borderColor;
    property borderTopColor: OleVariant read Get_borderTopColor write Set_borderTopColor;
    property borderRightColor: OleVariant read Get_borderRightColor write Set_borderRightColor;
    property borderBottomColor: OleVariant read Get_borderBottomColor write Set_borderBottomColor;
    property borderLeftColor: OleVariant read Get_borderLeftColor write Set_borderLeftColor;
    property borderWidth: WideString read Get_borderWidth write Set_borderWidth;
    property borderTopWidth: OleVariant read Get_borderTopWidth write Set_borderTopWidth;
    property borderRightWidth: OleVariant read Get_borderRightWidth write Set_borderRightWidth;
    property borderBottomWidth: OleVariant read Get_borderBottomWidth write Set_borderBottomWidth;
    property borderLeftWidth: OleVariant read Get_borderLeftWidth write Set_borderLeftWidth;
    property borderStyle: WideString read Get_borderStyle write Set_borderStyle;
    property borderTopStyle: WideString read Get_borderTopStyle write Set_borderTopStyle;
    property borderRightStyle: WideString read Get_borderRightStyle write Set_borderRightStyle;
    property borderBottomStyle: WideString read Get_borderBottomStyle write Set_borderBottomStyle;
    property borderLeftStyle: WideString read Get_borderLeftStyle write Set_borderLeftStyle;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property styleFloat: WideString read Get_styleFloat write Set_styleFloat;
    property clear: WideString read Get_clear write Set_clear;
    property display: WideString read Get_display write Set_display;
    property visibility: WideString read Get_visibility write Set_visibility;
    property listStyleType: WideString read Get_listStyleType write Set_listStyleType;
    property listStylePosition: WideString read Get_listStylePosition write Set_listStylePosition;
    property listStyleImage: WideString read Get_listStyleImage write Set_listStyleImage;
    property listStyle: WideString read Get_listStyle write Set_listStyle;
    property whiteSpace: WideString read Get_whiteSpace write Set_whiteSpace;
    property top: OleVariant read Get_top write Set_top;
    property left: OleVariant read Get_left write Set_left;
    property position: WideString read Get_position;
    property zIndex: OleVariant read Get_zIndex write Set_zIndex;
    property overflow: WideString read Get_overflow write Set_overflow;
    property pageBreakBefore: WideString read Get_pageBreakBefore write Set_pageBreakBefore;
    property pageBreakAfter: WideString read Get_pageBreakAfter write Set_pageBreakAfter;
    property cssText: WideString read Get_cssText write Set_cssText;
    property pixelTop: Integer read Get_pixelTop write Set_pixelTop;
    property pixelLeft: Integer read Get_pixelLeft write Set_pixelLeft;
    property pixelWidth: Integer read Get_pixelWidth write Set_pixelWidth;
    property pixelHeight: Integer read Get_pixelHeight write Set_pixelHeight;
    property posTop: Single read Get_posTop write Set_posTop;
    property posLeft: Single read Get_posLeft write Set_posLeft;
    property posWidth: Single read Get_posWidth write Set_posWidth;
    property posHeight: Single read Get_posHeight write Set_posHeight;
    property cursor: WideString read Get_cursor write Set_cursor;
    property clip: WideString read Get_clip write Set_clip;
    property filter: WideString read Get_filter write Set_filter;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleDisp = dispinterface
    ['{3050F25E-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontFamily: WideString dispid - 2147413094;
    property fontStyle: WideString dispid - 2147413088;
    property fontVariant: WideString dispid - 2147413087;
    property fontWeight: WideString dispid - 2147413085;
    property fontSize: OleVariant dispid - 2147413093;
    property font: WideString dispid - 2147413071;
    property color: OleVariant dispid - 2147413110;
    property background: WideString dispid - 2147413080;
    property backgroundColor: OleVariant dispid - 501;
    property backgroundImage: WideString dispid - 2147413111;
    property backgroundRepeat: WideString dispid - 2147413068;
    property backgroundAttachment: WideString dispid - 2147413067;
    property backgroundPosition: WideString dispid - 2147413066;
    property backgroundPositionX: OleVariant dispid - 2147413079;
    property backgroundPositionY: OleVariant dispid - 2147413078;
    property wordSpacing: OleVariant dispid - 2147413065;
    property letterSpacing: OleVariant dispid - 2147413104;
    property textDecoration: WideString dispid - 2147413077;
    property textDecorationNone: WordBool dispid - 2147413089;
    property textDecorationUnderline: WordBool dispid - 2147413091;
    property textDecorationOverline: WordBool dispid - 2147413043;
    property textDecorationLineThrough: WordBool dispid - 2147413092;
    property textDecorationBlink: WordBool dispid - 2147413090;
    property verticalAlign: OleVariant dispid - 2147413064;
    property textTransform: WideString dispid - 2147413108;
    property textAlign: WideString dispid - 2147418040;
    property textIndent: OleVariant dispid - 2147413105;
    property lineHeight: OleVariant dispid - 2147413106;
    property marginTop: OleVariant dispid - 2147413075;
    property marginRight: OleVariant dispid - 2147413074;
    property marginBottom: OleVariant dispid - 2147413073;
    property marginLeft: OleVariant dispid - 2147413072;
    property margin: WideString dispid - 2147413076;
    property paddingTop: OleVariant dispid - 2147413100;
    property paddingRight: OleVariant dispid - 2147413099;
    property paddingBottom: OleVariant dispid - 2147413098;
    property paddingLeft: OleVariant dispid - 2147413097;
    property padding: WideString dispid - 2147413101;
    property border: WideString dispid - 2147413063;
    property borderTop: WideString dispid - 2147413062;
    property borderRight: WideString dispid - 2147413061;
    property borderBottom: WideString dispid - 2147413060;
    property borderLeft: WideString dispid - 2147413059;
    property borderColor: WideString dispid - 2147413058;
    property borderTopColor: OleVariant dispid - 2147413057;
    property borderRightColor: OleVariant dispid - 2147413056;
    property borderBottomColor: OleVariant dispid - 2147413055;
    property borderLeftColor: OleVariant dispid - 2147413054;
    property borderWidth: WideString dispid - 2147413053;
    property borderTopWidth: OleVariant dispid - 2147413052;
    property borderRightWidth: OleVariant dispid - 2147413051;
    property borderBottomWidth: OleVariant dispid - 2147413050;
    property borderLeftWidth: OleVariant dispid - 2147413049;
    property borderStyle: WideString dispid - 2147413048;
    property borderTopStyle: WideString dispid - 2147413047;
    property borderRightStyle: WideString dispid - 2147413046;
    property borderBottomStyle: WideString dispid - 2147413045;
    property borderLeftStyle: WideString dispid - 2147413044;
    property width: OleVariant dispid - 2147418107;
    property height: OleVariant dispid - 2147418106;
    property styleFloat: WideString dispid - 2147413042;
    property clear: WideString dispid - 2147413096;
    property display: WideString dispid - 2147413041;
    property visibility: WideString dispid - 2147413032;
    property listStyleType: WideString dispid - 2147413040;
    property listStylePosition: WideString dispid - 2147413039;
    property listStyleImage: WideString dispid - 2147413038;
    property listStyle: WideString dispid - 2147413037;
    property whiteSpace: WideString dispid - 2147413036;
    property top: OleVariant dispid - 2147418108;
    property left: OleVariant dispid - 2147418109;
    property position: WideString readonly dispid - 2147413022;
    property zIndex: OleVariant dispid - 2147413021;
    property overflow: WideString dispid - 2147413102;
    property pageBreakBefore: WideString dispid - 2147413035;
    property pageBreakAfter: WideString dispid - 2147413034;
    property cssText: WideString dispid - 2147413013;
    property pixelTop: Integer dispid - 2147414112;
    property pixelLeft: Integer dispid - 2147414111;
    property pixelWidth: Integer dispid - 2147414110;
    property pixelHeight: Integer dispid - 2147414109;
    property posTop: Single dispid - 2147414108;
    property posLeft: Single dispid - 2147414107;
    property posWidth: Single dispid - 2147414106;
    property posHeight: Single dispid - 2147414105;
    property cursor: WideString dispid - 2147413010;
    property clip: WideString dispid - 2147413020;
    property filter: WideString dispid - 2147413030;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    function toString: WideString; dispid - 2147414104;
  end;

// *********************************************************************//
// Interface: IHTMLFiltersCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFiltersCollection = interface(IDispatch)
    ['{3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    // !! API fix decl
    function item(const pvarIndex: OleVariant): OleVariant; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFiltersCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFiltersCollectionDisp = dispinterface
    ['{3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    property _newEnum: IUnknown readonly dispid - 4;
    // !! API fix decl
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSite
// Flags:     (0)
// GUID:      {3050F427-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSite = interface(IUnknown)
    ['{3050F427-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetElement(out ppElement: IHTMLElement): HRESULT; stdcall;
    function RegisterNotification(lEvent: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehavior
// Flags:     (0)
// GUID:      {3050F425-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehavior = interface(IUnknown)
    ['{3050F425-98B5-11CF-BB82-00AA00BDCE0B}']
    function Init(pBehaviorSite: IElementBehaviorSite): HRESULT; stdcall;
    function Notify(lEvent: Integer; var pVar: OleVariant): HRESULT; stdcall;
    function Detach: HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorFactory
// Flags:     (0)
// GUID:      {3050F429-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorFactory = interface(IUnknown)
    ['{3050F429-98B5-11CF-BB82-00AA00BDCE0B}']
    function FindBehavior(const bstrBehavior: WideString; const bstrBehaviorUrl: WideString;
      const pSite: IElementBehaviorSite; out ppBehavior: IElementBehavior): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSiteOM
// Flags:     (0)
// GUID:      {3050F489-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSiteOM = interface(IUnknown)
    ['{3050F489-98B5-11CF-BB82-00AA00BDCE0B}']
    function RegisterEvent(pchEvent: PWideChar; lFlags: Integer; out plCookie: Integer): HRESULT; stdcall;
    function GetEventCookie(pchEvent: PWideChar; out plCookie: Integer): HRESULT; stdcall;
    function FireEvent(lCookie: Integer; const pEventObject: IHTMLEventObj): HRESULT; stdcall;
    function CreateEventObject(out ppEventObject: IHTMLEventObj): HRESULT; stdcall;
    function RegisterName(pchName: PWideChar): HRESULT; stdcall;
    function RegisterUrn(pchUrn: PWideChar): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorRender
// Flags:     (0)
// GUID:      {3050F4AA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorRender = interface(IUnknown)
    ['{3050F4AA-98B5-11CF-BB82-00AA00BDCE0B}']
    // !! API fix decl
    function Draw(hdc: HDC; lLayer: Integer; var pRect: TRect;
      const pReserved: IUnknown): HRESULT; stdcall;
    function GetRenderInfo(out plRenderInfo: Integer): HRESULT; stdcall;
    function HitTestPoint(var pPoint: TPoint; const pReserved: IUnknown; out pbHit: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSiteRender
// Flags:     (0)
// GUID:      {3050F4A7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSiteRender = interface(IUnknown)
    ['{3050F4A7-98B5-11CF-BB82-00AA00BDCE0B}']
    function Invalidate(var pRect: TRect): HRESULT; stdcall;
    function InvalidateRenderInfo: HRESULT; stdcall;
    function InvalidateStyle: HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLStyle2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle2 = interface(IDispatch)
    ['{3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_tableLayout(const p: WideString); safecall;
    function Get_tableLayout: WideString; safecall;
    procedure Set_borderCollapse(const p: WideString); safecall;
    function Get_borderCollapse: WideString; safecall;
    procedure Set_direction(const p: WideString); safecall;
    function Get_direction: WideString; safecall;
    procedure Set_behavior(const p: WideString); safecall;
    function Get_behavior: WideString; safecall;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); safecall;
    function getExpression(const propname: WideString): OleVariant; safecall;
    function removeExpression(const propname: WideString): WordBool; safecall;
    procedure Set_position(const p: WideString); safecall;
    function Get_position: WideString; safecall;
    procedure Set_unicodeBidi(const p: WideString); safecall;
    function Get_unicodeBidi: WideString; safecall;
    procedure Set_bottom(p: OleVariant); safecall;
    function Get_bottom: OleVariant; safecall;
    procedure Set_right(p: OleVariant); safecall;
    function Get_right: OleVariant; safecall;
    procedure Set_pixelBottom(p: Integer); safecall;
    function Get_pixelBottom: Integer; safecall;
    procedure Set_pixelRight(p: Integer); safecall;
    function Get_pixelRight: Integer; safecall;
    procedure Set_posBottom(p: Single); safecall;
    function Get_posBottom: Single; safecall;
    procedure Set_posRight(p: Single); safecall;
    function Get_posRight: Single; safecall;
    procedure Set_imeMode(const p: WideString); safecall;
    function Get_imeMode: WideString; safecall;
    procedure Set_rubyAlign(const p: WideString); safecall;
    function Get_rubyAlign: WideString; safecall;
    procedure Set_rubyPosition(const p: WideString); safecall;
    function Get_rubyPosition: WideString; safecall;
    procedure Set_rubyOverhang(const p: WideString); safecall;
    function Get_rubyOverhang: WideString; safecall;
    procedure Set_layoutGridChar(p: OleVariant); safecall;
    function Get_layoutGridChar: OleVariant; safecall;
    procedure Set_layoutGridLine(p: OleVariant); safecall;
    function Get_layoutGridLine: OleVariant; safecall;
    procedure Set_layoutGridMode(const p: WideString); safecall;
    function Get_layoutGridMode: WideString; safecall;
    procedure Set_layoutGridType(const p: WideString); safecall;
    function Get_layoutGridType: WideString; safecall;
    procedure Set_layoutGrid(const p: WideString); safecall;
    function Get_layoutGrid: WideString; safecall;
    procedure Set_wordBreak(const p: WideString); safecall;
    function Get_wordBreak: WideString; safecall;
    procedure Set_lineBreak(const p: WideString); safecall;
    function Get_lineBreak: WideString; safecall;
    procedure Set_textJustify(const p: WideString); safecall;
    function Get_textJustify: WideString; safecall;
    procedure Set_textJustifyTrim(const p: WideString); safecall;
    function Get_textJustifyTrim: WideString; safecall;
    procedure Set_textKashida(p: OleVariant); safecall;
    function Get_textKashida: OleVariant; safecall;
    procedure Set_textAutospace(const p: WideString); safecall;
    function Get_textAutospace: WideString; safecall;
    procedure Set_overflowX(const p: WideString); safecall;
    function Get_overflowX: WideString; safecall;
    procedure Set_overflowY(const p: WideString); safecall;
    function Get_overflowY: WideString; safecall;
    procedure Set_accelerator(const p: WideString); safecall;
    function Get_accelerator: WideString; safecall;
    property tableLayout: WideString read Get_tableLayout write Set_tableLayout;
    property borderCollapse: WideString read Get_borderCollapse write Set_borderCollapse;
    property direction: WideString read Get_direction write Set_direction;
    property behavior: WideString read Get_behavior write Set_behavior;
    property position: WideString read Get_position write Set_position;
    property unicodeBidi: WideString read Get_unicodeBidi write Set_unicodeBidi;
    property bottom: OleVariant read Get_bottom write Set_bottom;
    property right: OleVariant read Get_right write Set_right;
    property pixelBottom: Integer read Get_pixelBottom write Set_pixelBottom;
    property pixelRight: Integer read Get_pixelRight write Set_pixelRight;
    property posBottom: Single read Get_posBottom write Set_posBottom;
    property posRight: Single read Get_posRight write Set_posRight;
    property imeMode: WideString read Get_imeMode write Set_imeMode;
    property rubyAlign: WideString read Get_rubyAlign write Set_rubyAlign;
    property rubyPosition: WideString read Get_rubyPosition write Set_rubyPosition;
    property rubyOverhang: WideString read Get_rubyOverhang write Set_rubyOverhang;
    property layoutGridChar: OleVariant read Get_layoutGridChar write Set_layoutGridChar;
    property layoutGridLine: OleVariant read Get_layoutGridLine write Set_layoutGridLine;
    property layoutGridMode: WideString read Get_layoutGridMode write Set_layoutGridMode;
    property layoutGridType: WideString read Get_layoutGridType write Set_layoutGridType;
    property layoutGrid: WideString read Get_layoutGrid write Set_layoutGrid;
    property wordBreak: WideString read Get_wordBreak write Set_wordBreak;
    property lineBreak: WideString read Get_lineBreak write Set_lineBreak;
    property textJustify: WideString read Get_textJustify write Set_textJustify;
    property textJustifyTrim: WideString read Get_textJustifyTrim write Set_textJustifyTrim;
    property textKashida: OleVariant read Get_textKashida write Set_textKashida;
    property textAutospace: WideString read Get_textAutospace write Set_textAutospace;
    property overflowX: WideString read Get_overflowX write Set_overflowX;
    property overflowY: WideString read Get_overflowY write Set_overflowY;
    property accelerator: WideString read Get_accelerator write Set_accelerator;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyle2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle2Disp = dispinterface
    ['{3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}']
    property tableLayout: WideString dispid - 2147413014;
    property borderCollapse: WideString dispid - 2147413028;
    property direction: WideString dispid - 2147412993;
    property behavior: WideString dispid - 2147412997;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property position: WideString dispid - 2147413022;
    property unicodeBidi: WideString dispid - 2147412994;
    property bottom: OleVariant dispid - 2147418034;
    property right: OleVariant dispid - 2147418035;
    property pixelBottom: Integer dispid - 2147414103;
    property pixelRight: Integer dispid - 2147414102;
    property posBottom: Single dispid - 2147414101;
    property posRight: Single dispid - 2147414100;
    property imeMode: WideString dispid - 2147412992;
    property rubyAlign: WideString dispid - 2147412991;
    property rubyPosition: WideString dispid - 2147412990;
    property rubyOverhang: WideString dispid - 2147412989;
    property layoutGridChar: OleVariant dispid - 2147412985;
    property layoutGridLine: OleVariant dispid - 2147412984;
    property layoutGridMode: WideString dispid - 2147412983;
    property layoutGridType: WideString dispid - 2147412982;
    property layoutGrid: WideString dispid - 2147412981;
    property wordBreak: WideString dispid - 2147412978;
    property lineBreak: WideString dispid - 2147412979;
    property textJustify: WideString dispid - 2147412977;
    property textJustifyTrim: WideString dispid - 2147412976;
    property textKashida: OleVariant dispid - 2147412975;
    property textAutospace: WideString dispid - 2147412980;
    property overflowX: WideString dispid - 2147412973;
    property overflowY: WideString dispid - 2147412972;
    property accelerator: WideString dispid - 2147412965;
  end;

// *********************************************************************//
// Interface: IHTMLStyle3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F656-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle3 = interface(IDispatch)
    ['{3050F656-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_layoutFlow(const p: WideString); safecall;
    function Get_layoutFlow: WideString; safecall;
    procedure Set_zoom(p: OleVariant); safecall;
    function Get_zoom: OleVariant; safecall;
    procedure Set_wordWrap(const p: WideString); safecall;
    function Get_wordWrap: WideString; safecall;
    procedure Set_textUnderlinePosition(const p: WideString); safecall;
    function Get_textUnderlinePosition: WideString; safecall;
    procedure Set_scrollbarBaseColor(p: OleVariant); safecall;
    function Get_scrollbarBaseColor: OleVariant; safecall;
    procedure Set_scrollbarFaceColor(p: OleVariant); safecall;
    function Get_scrollbarFaceColor: OleVariant; safecall;
    procedure Set_scrollbar3dLightColor(p: OleVariant); safecall;
    function Get_scrollbar3dLightColor: OleVariant; safecall;
    procedure Set_scrollbarShadowColor(p: OleVariant); safecall;
    function Get_scrollbarShadowColor: OleVariant; safecall;
    procedure Set_scrollbarHighlightColor(p: OleVariant); safecall;
    function Get_scrollbarHighlightColor: OleVariant; safecall;
    procedure Set_scrollbarDarkShadowColor(p: OleVariant); safecall;
    function Get_scrollbarDarkShadowColor: OleVariant; safecall;
    procedure Set_scrollbarArrowColor(p: OleVariant); safecall;
    function Get_scrollbarArrowColor: OleVariant; safecall;
    procedure Set_scrollbarTrackColor(p: OleVariant); safecall;
    function Get_scrollbarTrackColor: OleVariant; safecall;
    procedure Set_writingMode(const p: WideString); safecall;
    function Get_writingMode: WideString; safecall;
    procedure Set_textAlignLast(const p: WideString); safecall;
    function Get_textAlignLast: WideString; safecall;
    procedure Set_textKashidaSpace(p: OleVariant); safecall;
    function Get_textKashidaSpace: OleVariant; safecall;
    property layoutFlow: WideString read Get_layoutFlow write Set_layoutFlow;
    property zoom: OleVariant read Get_zoom write Set_zoom;
    property wordWrap: WideString read Get_wordWrap write Set_wordWrap;
    property textUnderlinePosition: WideString read Get_textUnderlinePosition write Set_textUnderlinePosition;
    property scrollbarBaseColor: OleVariant read Get_scrollbarBaseColor write Set_scrollbarBaseColor;
    property scrollbarFaceColor: OleVariant read Get_scrollbarFaceColor write Set_scrollbarFaceColor;
    property scrollbar3dLightColor: OleVariant read Get_scrollbar3dLightColor write Set_scrollbar3dLightColor;
    property scrollbarShadowColor: OleVariant read Get_scrollbarShadowColor write Set_scrollbarShadowColor;
    property scrollbarHighlightColor: OleVariant read Get_scrollbarHighlightColor write Set_scrollbarHighlightColor;
    property scrollbarDarkShadowColor: OleVariant read Get_scrollbarDarkShadowColor write Set_scrollbarDarkShadowColor;
    property scrollbarArrowColor: OleVariant read Get_scrollbarArrowColor write Set_scrollbarArrowColor;
    property scrollbarTrackColor: OleVariant read Get_scrollbarTrackColor write Set_scrollbarTrackColor;
    property writingMode: WideString read Get_writingMode write Set_writingMode;
    property textAlignLast: WideString read Get_textAlignLast write Set_textAlignLast;
    property textKashidaSpace: OleVariant read Get_textKashidaSpace write Set_textKashidaSpace;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyle3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F656-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle3Disp = dispinterface
    ['{3050F656-98B5-11CF-BB82-00AA00BDCE0B}']
    property layoutFlow: WideString dispid - 2147412957;
    property zoom: OleVariant dispid - 2147412959;
    property wordWrap: WideString dispid - 2147412954;
    property textUnderlinePosition: WideString dispid - 2147412953;
    property scrollbarBaseColor: OleVariant dispid - 2147412932;
    property scrollbarFaceColor: OleVariant dispid - 2147412931;
    property scrollbar3dLightColor: OleVariant dispid - 2147412930;
    property scrollbarShadowColor: OleVariant dispid - 2147412929;
    property scrollbarHighlightColor: OleVariant dispid - 2147412928;
    property scrollbarDarkShadowColor: OleVariant dispid - 2147412927;
    property scrollbarArrowColor: OleVariant dispid - 2147412926;
    property scrollbarTrackColor: OleVariant dispid - 2147412916;
    property writingMode: WideString dispid - 2147412920;
    property textAlignLast: WideString dispid - 2147412909;
    property textKashidaSpace: OleVariant dispid - 2147412908;
  end;

// *********************************************************************//
// Interface: IHTMLStyle4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F816-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle4 = interface(IDispatch)
    ['{3050F816-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_textOverflow(const p: WideString); safecall;
    function Get_textOverflow: WideString; safecall;
    procedure Set_minHeight(p: OleVariant); safecall;
    function Get_minHeight: OleVariant; safecall;
    property textOverflow: WideString read Get_textOverflow write Set_textOverflow;
    property minHeight: OleVariant read Get_minHeight write Set_minHeight;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyle4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F816-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle4Disp = dispinterface
    ['{3050F816-98B5-11CF-BB82-00AA00BDCE0B}']
    property textOverflow: WideString dispid - 2147412903;
    property minHeight: OleVariant dispid - 2147412901;
  end;

// *********************************************************************//
// Interface: IHTMLRuleStyle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle = interface(IDispatch)
    ['{3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_fontFamily(const p: WideString); safecall;
    function Get_fontFamily: WideString; safecall;
    procedure Set_fontStyle(const p: WideString); safecall;
    function Get_fontStyle: WideString; safecall;
    procedure Set_fontVariant(const p: WideString); safecall;
    function Get_fontVariant: WideString; safecall;
    procedure Set_fontWeight(const p: WideString); safecall;
    function Get_fontWeight: WideString; safecall;
    procedure Set_fontSize(p: OleVariant); safecall;
    function Get_fontSize: OleVariant; safecall;
    procedure Set_font(const p: WideString); safecall;
    function Get_font: WideString; safecall;
    procedure Set_color(p: OleVariant); safecall;
    function Get_color: OleVariant; safecall;
    procedure Set_background(const p: WideString); safecall;
    function Get_background: WideString; safecall;
    procedure Set_backgroundColor(p: OleVariant); safecall;
    function Get_backgroundColor: OleVariant; safecall;
    procedure Set_backgroundImage(const p: WideString); safecall;
    function Get_backgroundImage: WideString; safecall;
    procedure Set_backgroundRepeat(const p: WideString); safecall;
    function Get_backgroundRepeat: WideString; safecall;
    procedure Set_backgroundAttachment(const p: WideString); safecall;
    function Get_backgroundAttachment: WideString; safecall;
    procedure Set_backgroundPosition(const p: WideString); safecall;
    function Get_backgroundPosition: WideString; safecall;
    procedure Set_backgroundPositionX(p: OleVariant); safecall;
    function Get_backgroundPositionX: OleVariant; safecall;
    procedure Set_backgroundPositionY(p: OleVariant); safecall;
    function Get_backgroundPositionY: OleVariant; safecall;
    procedure Set_wordSpacing(p: OleVariant); safecall;
    function Get_wordSpacing: OleVariant; safecall;
    procedure Set_letterSpacing(p: OleVariant); safecall;
    function Get_letterSpacing: OleVariant; safecall;
    procedure Set_textDecoration(const p: WideString); safecall;
    function Get_textDecoration: WideString; safecall;
    procedure Set_textDecorationNone(p: WordBool); safecall;
    function Get_textDecorationNone: WordBool; safecall;
    procedure Set_textDecorationUnderline(p: WordBool); safecall;
    function Get_textDecorationUnderline: WordBool; safecall;
    procedure Set_textDecorationOverline(p: WordBool); safecall;
    function Get_textDecorationOverline: WordBool; safecall;
    procedure Set_textDecorationLineThrough(p: WordBool); safecall;
    function Get_textDecorationLineThrough: WordBool; safecall;
    procedure Set_textDecorationBlink(p: WordBool); safecall;
    function Get_textDecorationBlink: WordBool; safecall;
    procedure Set_verticalAlign(p: OleVariant); safecall;
    function Get_verticalAlign: OleVariant; safecall;
    procedure Set_textTransform(const p: WideString); safecall;
    function Get_textTransform: WideString; safecall;
    procedure Set_textAlign(const p: WideString); safecall;
    function Get_textAlign: WideString; safecall;
    procedure Set_textIndent(p: OleVariant); safecall;
    function Get_textIndent: OleVariant; safecall;
    procedure Set_lineHeight(p: OleVariant); safecall;
    function Get_lineHeight: OleVariant; safecall;
    procedure Set_marginTop(p: OleVariant); safecall;
    function Get_marginTop: OleVariant; safecall;
    procedure Set_marginRight(p: OleVariant); safecall;
    function Get_marginRight: OleVariant; safecall;
    procedure Set_marginBottom(p: OleVariant); safecall;
    function Get_marginBottom: OleVariant; safecall;
    procedure Set_marginLeft(p: OleVariant); safecall;
    function Get_marginLeft: OleVariant; safecall;
    procedure Set_margin(const p: WideString); safecall;
    function Get_margin: WideString; safecall;
    procedure Set_paddingTop(p: OleVariant); safecall;
    function Get_paddingTop: OleVariant; safecall;
    procedure Set_paddingRight(p: OleVariant); safecall;
    function Get_paddingRight: OleVariant; safecall;
    procedure Set_paddingBottom(p: OleVariant); safecall;
    function Get_paddingBottom: OleVariant; safecall;
    procedure Set_paddingLeft(p: OleVariant); safecall;
    function Get_paddingLeft: OleVariant; safecall;
    procedure Set_padding(const p: WideString); safecall;
    function Get_padding: WideString; safecall;
    procedure Set_border(const p: WideString); safecall;
    function Get_border: WideString; safecall;
    procedure Set_borderTop(const p: WideString); safecall;
    function Get_borderTop: WideString; safecall;
    procedure Set_borderRight(const p: WideString); safecall;
    function Get_borderRight: WideString; safecall;
    procedure Set_borderBottom(const p: WideString); safecall;
    function Get_borderBottom: WideString; safecall;
    procedure Set_borderLeft(const p: WideString); safecall;
    function Get_borderLeft: WideString; safecall;
    procedure Set_borderColor(const p: WideString); safecall;
    function Get_borderColor: WideString; safecall;
    procedure Set_borderTopColor(p: OleVariant); safecall;
    function Get_borderTopColor: OleVariant; safecall;
    procedure Set_borderRightColor(p: OleVariant); safecall;
    function Get_borderRightColor: OleVariant; safecall;
    procedure Set_borderBottomColor(p: OleVariant); safecall;
    function Get_borderBottomColor: OleVariant; safecall;
    procedure Set_borderLeftColor(p: OleVariant); safecall;
    function Get_borderLeftColor: OleVariant; safecall;
    procedure Set_borderWidth(const p: WideString); safecall;
    function Get_borderWidth: WideString; safecall;
    procedure Set_borderTopWidth(p: OleVariant); safecall;
    function Get_borderTopWidth: OleVariant; safecall;
    procedure Set_borderRightWidth(p: OleVariant); safecall;
    function Get_borderRightWidth: OleVariant; safecall;
    procedure Set_borderBottomWidth(p: OleVariant); safecall;
    function Get_borderBottomWidth: OleVariant; safecall;
    procedure Set_borderLeftWidth(p: OleVariant); safecall;
    function Get_borderLeftWidth: OleVariant; safecall;
    procedure Set_borderStyle(const p: WideString); safecall;
    function Get_borderStyle: WideString; safecall;
    procedure Set_borderTopStyle(const p: WideString); safecall;
    function Get_borderTopStyle: WideString; safecall;
    procedure Set_borderRightStyle(const p: WideString); safecall;
    function Get_borderRightStyle: WideString; safecall;
    procedure Set_borderBottomStyle(const p: WideString); safecall;
    function Get_borderBottomStyle: WideString; safecall;
    procedure Set_borderLeftStyle(const p: WideString); safecall;
    function Get_borderLeftStyle: WideString; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    procedure Set_styleFloat(const p: WideString); safecall;
    function Get_styleFloat: WideString; safecall;
    procedure Set_clear(const p: WideString); safecall;
    function Get_clear: WideString; safecall;
    procedure Set_display(const p: WideString); safecall;
    function Get_display: WideString; safecall;
    procedure Set_visibility(const p: WideString); safecall;
    function Get_visibility: WideString; safecall;
    procedure Set_listStyleType(const p: WideString); safecall;
    function Get_listStyleType: WideString; safecall;
    procedure Set_listStylePosition(const p: WideString); safecall;
    function Get_listStylePosition: WideString; safecall;
    procedure Set_listStyleImage(const p: WideString); safecall;
    function Get_listStyleImage: WideString; safecall;
    procedure Set_listStyle(const p: WideString); safecall;
    function Get_listStyle: WideString; safecall;
    procedure Set_whiteSpace(const p: WideString); safecall;
    function Get_whiteSpace: WideString; safecall;
    procedure Set_top(p: OleVariant); safecall;
    function Get_top: OleVariant; safecall;
    procedure Set_left(p: OleVariant); safecall;
    function Get_left: OleVariant; safecall;
    function Get_position: WideString; safecall;
    procedure Set_zIndex(p: OleVariant); safecall;
    function Get_zIndex: OleVariant; safecall;
    procedure Set_overflow(const p: WideString); safecall;
    function Get_overflow: WideString; safecall;
    procedure Set_pageBreakBefore(const p: WideString); safecall;
    function Get_pageBreakBefore: WideString; safecall;
    procedure Set_pageBreakAfter(const p: WideString); safecall;
    function Get_pageBreakAfter: WideString; safecall;
    procedure Set_cssText(const p: WideString); safecall;
    function Get_cssText: WideString; safecall;
    procedure Set_cursor(const p: WideString); safecall;
    function Get_cursor: WideString; safecall;
    procedure Set_clip(const p: WideString); safecall;
    function Get_clip: WideString; safecall;
    procedure Set_filter(const p: WideString); safecall;
    function Get_filter: WideString; safecall;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); safecall;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; safecall;
    property fontFamily: WideString read Get_fontFamily write Set_fontFamily;
    property fontStyle: WideString read Get_fontStyle write Set_fontStyle;
    property fontVariant: WideString read Get_fontVariant write Set_fontVariant;
    property fontWeight: WideString read Get_fontWeight write Set_fontWeight;
    property fontSize: OleVariant read Get_fontSize write Set_fontSize;
    property font: WideString read Get_font write Set_font;
    property color: OleVariant read Get_color write Set_color;
    property background: WideString read Get_background write Set_background;
    property backgroundColor: OleVariant read Get_backgroundColor write Set_backgroundColor;
    property backgroundImage: WideString read Get_backgroundImage write Set_backgroundImage;
    property backgroundRepeat: WideString read Get_backgroundRepeat write Set_backgroundRepeat;
    property backgroundAttachment: WideString read Get_backgroundAttachment write Set_backgroundAttachment;
    property backgroundPosition: WideString read Get_backgroundPosition write Set_backgroundPosition;
    property backgroundPositionX: OleVariant read Get_backgroundPositionX write Set_backgroundPositionX;
    property backgroundPositionY: OleVariant read Get_backgroundPositionY write Set_backgroundPositionY;
    property wordSpacing: OleVariant read Get_wordSpacing write Set_wordSpacing;
    property letterSpacing: OleVariant read Get_letterSpacing write Set_letterSpacing;
    property textDecoration: WideString read Get_textDecoration write Set_textDecoration;
    property textDecorationNone: WordBool read Get_textDecorationNone write Set_textDecorationNone;
    property textDecorationUnderline: WordBool read Get_textDecorationUnderline write Set_textDecorationUnderline;
    property textDecorationOverline: WordBool read Get_textDecorationOverline write Set_textDecorationOverline;
    property textDecorationLineThrough: WordBool read Get_textDecorationLineThrough write Set_textDecorationLineThrough;
    property textDecorationBlink: WordBool read Get_textDecorationBlink write Set_textDecorationBlink;
    property verticalAlign: OleVariant read Get_verticalAlign write Set_verticalAlign;
    property textTransform: WideString read Get_textTransform write Set_textTransform;
    property textAlign: WideString read Get_textAlign write Set_textAlign;
    property textIndent: OleVariant read Get_textIndent write Set_textIndent;
    property lineHeight: OleVariant read Get_lineHeight write Set_lineHeight;
    property marginTop: OleVariant read Get_marginTop write Set_marginTop;
    property marginRight: OleVariant read Get_marginRight write Set_marginRight;
    property marginBottom: OleVariant read Get_marginBottom write Set_marginBottom;
    property marginLeft: OleVariant read Get_marginLeft write Set_marginLeft;
    property margin: WideString read Get_margin write Set_margin;
    property paddingTop: OleVariant read Get_paddingTop write Set_paddingTop;
    property paddingRight: OleVariant read Get_paddingRight write Set_paddingRight;
    property paddingBottom: OleVariant read Get_paddingBottom write Set_paddingBottom;
    property paddingLeft: OleVariant read Get_paddingLeft write Set_paddingLeft;
    property padding: WideString read Get_padding write Set_padding;
    property border: WideString read Get_border write Set_border;
    property borderTop: WideString read Get_borderTop write Set_borderTop;
    property borderRight: WideString read Get_borderRight write Set_borderRight;
    property borderBottom: WideString read Get_borderBottom write Set_borderBottom;
    property borderLeft: WideString read Get_borderLeft write Set_borderLeft;
    property borderColor: WideString read Get_borderColor write Set_borderColor;
    property borderTopColor: OleVariant read Get_borderTopColor write Set_borderTopColor;
    property borderRightColor: OleVariant read Get_borderRightColor write Set_borderRightColor;
    property borderBottomColor: OleVariant read Get_borderBottomColor write Set_borderBottomColor;
    property borderLeftColor: OleVariant read Get_borderLeftColor write Set_borderLeftColor;
    property borderWidth: WideString read Get_borderWidth write Set_borderWidth;
    property borderTopWidth: OleVariant read Get_borderTopWidth write Set_borderTopWidth;
    property borderRightWidth: OleVariant read Get_borderRightWidth write Set_borderRightWidth;
    property borderBottomWidth: OleVariant read Get_borderBottomWidth write Set_borderBottomWidth;
    property borderLeftWidth: OleVariant read Get_borderLeftWidth write Set_borderLeftWidth;
    property borderStyle: WideString read Get_borderStyle write Set_borderStyle;
    property borderTopStyle: WideString read Get_borderTopStyle write Set_borderTopStyle;
    property borderRightStyle: WideString read Get_borderRightStyle write Set_borderRightStyle;
    property borderBottomStyle: WideString read Get_borderBottomStyle write Set_borderBottomStyle;
    property borderLeftStyle: WideString read Get_borderLeftStyle write Set_borderLeftStyle;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property styleFloat: WideString read Get_styleFloat write Set_styleFloat;
    property clear: WideString read Get_clear write Set_clear;
    property display: WideString read Get_display write Set_display;
    property visibility: WideString read Get_visibility write Set_visibility;
    property listStyleType: WideString read Get_listStyleType write Set_listStyleType;
    property listStylePosition: WideString read Get_listStylePosition write Set_listStylePosition;
    property listStyleImage: WideString read Get_listStyleImage write Set_listStyleImage;
    property listStyle: WideString read Get_listStyle write Set_listStyle;
    property whiteSpace: WideString read Get_whiteSpace write Set_whiteSpace;
    property top: OleVariant read Get_top write Set_top;
    property left: OleVariant read Get_left write Set_left;
    property position: WideString read Get_position;
    property zIndex: OleVariant read Get_zIndex write Set_zIndex;
    property overflow: WideString read Get_overflow write Set_overflow;
    property pageBreakBefore: WideString read Get_pageBreakBefore write Set_pageBreakBefore;
    property pageBreakAfter: WideString read Get_pageBreakAfter write Set_pageBreakAfter;
    property cssText: WideString read Get_cssText write Set_cssText;
    property cursor: WideString read Get_cursor write Set_cursor;
    property clip: WideString read Get_clip write Set_clip;
    property filter: WideString read Get_filter write Set_filter;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRuleStyleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyleDisp = dispinterface
    ['{3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontFamily: WideString dispid - 2147413094;
    property fontStyle: WideString dispid - 2147413088;
    property fontVariant: WideString dispid - 2147413087;
    property fontWeight: WideString dispid - 2147413085;
    property fontSize: OleVariant dispid - 2147413093;
    property font: WideString dispid - 2147413071;
    property color: OleVariant dispid - 2147413110;
    property background: WideString dispid - 2147413080;
    property backgroundColor: OleVariant dispid - 501;
    property backgroundImage: WideString dispid - 2147413111;
    property backgroundRepeat: WideString dispid - 2147413068;
    property backgroundAttachment: WideString dispid - 2147413067;
    property backgroundPosition: WideString dispid - 2147413066;
    property backgroundPositionX: OleVariant dispid - 2147413079;
    property backgroundPositionY: OleVariant dispid - 2147413078;
    property wordSpacing: OleVariant dispid - 2147413065;
    property letterSpacing: OleVariant dispid - 2147413104;
    property textDecoration: WideString dispid - 2147413077;
    property textDecorationNone: WordBool dispid - 2147413089;
    property textDecorationUnderline: WordBool dispid - 2147413091;
    property textDecorationOverline: WordBool dispid - 2147413043;
    property textDecorationLineThrough: WordBool dispid - 2147413092;
    property textDecorationBlink: WordBool dispid - 2147413090;
    property verticalAlign: OleVariant dispid - 2147413064;
    property textTransform: WideString dispid - 2147413108;
    property textAlign: WideString dispid - 2147418040;
    property textIndent: OleVariant dispid - 2147413105;
    property lineHeight: OleVariant dispid - 2147413106;
    property marginTop: OleVariant dispid - 2147413075;
    property marginRight: OleVariant dispid - 2147413074;
    property marginBottom: OleVariant dispid - 2147413073;
    property marginLeft: OleVariant dispid - 2147413072;
    property margin: WideString dispid - 2147413076;
    property paddingTop: OleVariant dispid - 2147413100;
    property paddingRight: OleVariant dispid - 2147413099;
    property paddingBottom: OleVariant dispid - 2147413098;
    property paddingLeft: OleVariant dispid - 2147413097;
    property padding: WideString dispid - 2147413101;
    property border: WideString dispid - 2147413063;
    property borderTop: WideString dispid - 2147413062;
    property borderRight: WideString dispid - 2147413061;
    property borderBottom: WideString dispid - 2147413060;
    property borderLeft: WideString dispid - 2147413059;
    property borderColor: WideString dispid - 2147413058;
    property borderTopColor: OleVariant dispid - 2147413057;
    property borderRightColor: OleVariant dispid - 2147413056;
    property borderBottomColor: OleVariant dispid - 2147413055;
    property borderLeftColor: OleVariant dispid - 2147413054;
    property borderWidth: WideString dispid - 2147413053;
    property borderTopWidth: OleVariant dispid - 2147413052;
    property borderRightWidth: OleVariant dispid - 2147413051;
    property borderBottomWidth: OleVariant dispid - 2147413050;
    property borderLeftWidth: OleVariant dispid - 2147413049;
    property borderStyle: WideString dispid - 2147413048;
    property borderTopStyle: WideString dispid - 2147413047;
    property borderRightStyle: WideString dispid - 2147413046;
    property borderBottomStyle: WideString dispid - 2147413045;
    property borderLeftStyle: WideString dispid - 2147413044;
    property width: OleVariant dispid - 2147418107;
    property height: OleVariant dispid - 2147418106;
    property styleFloat: WideString dispid - 2147413042;
    property clear: WideString dispid - 2147413096;
    property display: WideString dispid - 2147413041;
    property visibility: WideString dispid - 2147413032;
    property listStyleType: WideString dispid - 2147413040;
    property listStylePosition: WideString dispid - 2147413039;
    property listStyleImage: WideString dispid - 2147413038;
    property listStyle: WideString dispid - 2147413037;
    property whiteSpace: WideString dispid - 2147413036;
    property top: OleVariant dispid - 2147418108;
    property left: OleVariant dispid - 2147418109;
    property position: WideString readonly dispid - 2147413022;
    property zIndex: OleVariant dispid - 2147413021;
    property overflow: WideString dispid - 2147413102;
    property pageBreakBefore: WideString dispid - 2147413035;
    property pageBreakAfter: WideString dispid - 2147413034;
    property cssText: WideString dispid - 2147413013;
    property cursor: WideString dispid - 2147413010;
    property clip: WideString dispid - 2147413020;
    property filter: WideString dispid - 2147413030;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
  end;

// *********************************************************************//
// Interface: IHTMLRuleStyle2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle2 = interface(IDispatch)
    ['{3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_tableLayout(const p: WideString); safecall;
    function Get_tableLayout: WideString; safecall;
    procedure Set_borderCollapse(const p: WideString); safecall;
    function Get_borderCollapse: WideString; safecall;
    procedure Set_direction(const p: WideString); safecall;
    function Get_direction: WideString; safecall;
    procedure Set_behavior(const p: WideString); safecall;
    function Get_behavior: WideString; safecall;
    procedure Set_position(const p: WideString); safecall;
    function Get_position: WideString; safecall;
    procedure Set_unicodeBidi(const p: WideString); safecall;
    function Get_unicodeBidi: WideString; safecall;
    procedure Set_bottom(p: OleVariant); safecall;
    function Get_bottom: OleVariant; safecall;
    procedure Set_right(p: OleVariant); safecall;
    function Get_right: OleVariant; safecall;
    procedure Set_pixelBottom(p: Integer); safecall;
    function Get_pixelBottom: Integer; safecall;
    procedure Set_pixelRight(p: Integer); safecall;
    function Get_pixelRight: Integer; safecall;
    procedure Set_posBottom(p: Single); safecall;
    function Get_posBottom: Single; safecall;
    procedure Set_posRight(p: Single); safecall;
    function Get_posRight: Single; safecall;
    procedure Set_imeMode(const p: WideString); safecall;
    function Get_imeMode: WideString; safecall;
    procedure Set_rubyAlign(const p: WideString); safecall;
    function Get_rubyAlign: WideString; safecall;
    procedure Set_rubyPosition(const p: WideString); safecall;
    function Get_rubyPosition: WideString; safecall;
    procedure Set_rubyOverhang(const p: WideString); safecall;
    function Get_rubyOverhang: WideString; safecall;
    procedure Set_layoutGridChar(p: OleVariant); safecall;
    function Get_layoutGridChar: OleVariant; safecall;
    procedure Set_layoutGridLine(p: OleVariant); safecall;
    function Get_layoutGridLine: OleVariant; safecall;
    procedure Set_layoutGridMode(const p: WideString); safecall;
    function Get_layoutGridMode: WideString; safecall;
    procedure Set_layoutGridType(const p: WideString); safecall;
    function Get_layoutGridType: WideString; safecall;
    procedure Set_layoutGrid(const p: WideString); safecall;
    function Get_layoutGrid: WideString; safecall;
    procedure Set_textAutospace(const p: WideString); safecall;
    function Get_textAutospace: WideString; safecall;
    procedure Set_wordBreak(const p: WideString); safecall;
    function Get_wordBreak: WideString; safecall;
    procedure Set_lineBreak(const p: WideString); safecall;
    function Get_lineBreak: WideString; safecall;
    procedure Set_textJustify(const p: WideString); safecall;
    function Get_textJustify: WideString; safecall;
    procedure Set_textJustifyTrim(const p: WideString); safecall;
    function Get_textJustifyTrim: WideString; safecall;
    procedure Set_textKashida(p: OleVariant); safecall;
    function Get_textKashida: OleVariant; safecall;
    procedure Set_overflowX(const p: WideString); safecall;
    function Get_overflowX: WideString; safecall;
    procedure Set_overflowY(const p: WideString); safecall;
    function Get_overflowY: WideString; safecall;
    procedure Set_accelerator(const p: WideString); safecall;
    function Get_accelerator: WideString; safecall;
    property tableLayout: WideString read Get_tableLayout write Set_tableLayout;
    property borderCollapse: WideString read Get_borderCollapse write Set_borderCollapse;
    property direction: WideString read Get_direction write Set_direction;
    property behavior: WideString read Get_behavior write Set_behavior;
    property position: WideString read Get_position write Set_position;
    property unicodeBidi: WideString read Get_unicodeBidi write Set_unicodeBidi;
    property bottom: OleVariant read Get_bottom write Set_bottom;
    property right: OleVariant read Get_right write Set_right;
    property pixelBottom: Integer read Get_pixelBottom write Set_pixelBottom;
    property pixelRight: Integer read Get_pixelRight write Set_pixelRight;
    property posBottom: Single read Get_posBottom write Set_posBottom;
    property posRight: Single read Get_posRight write Set_posRight;
    property imeMode: WideString read Get_imeMode write Set_imeMode;
    property rubyAlign: WideString read Get_rubyAlign write Set_rubyAlign;
    property rubyPosition: WideString read Get_rubyPosition write Set_rubyPosition;
    property rubyOverhang: WideString read Get_rubyOverhang write Set_rubyOverhang;
    property layoutGridChar: OleVariant read Get_layoutGridChar write Set_layoutGridChar;
    property layoutGridLine: OleVariant read Get_layoutGridLine write Set_layoutGridLine;
    property layoutGridMode: WideString read Get_layoutGridMode write Set_layoutGridMode;
    property layoutGridType: WideString read Get_layoutGridType write Set_layoutGridType;
    property layoutGrid: WideString read Get_layoutGrid write Set_layoutGrid;
    property textAutospace: WideString read Get_textAutospace write Set_textAutospace;
    property wordBreak: WideString read Get_wordBreak write Set_wordBreak;
    property lineBreak: WideString read Get_lineBreak write Set_lineBreak;
    property textJustify: WideString read Get_textJustify write Set_textJustify;
    property textJustifyTrim: WideString read Get_textJustifyTrim write Set_textJustifyTrim;
    property textKashida: OleVariant read Get_textKashida write Set_textKashida;
    property overflowX: WideString read Get_overflowX write Set_overflowX;
    property overflowY: WideString read Get_overflowY write Set_overflowY;
    property accelerator: WideString read Get_accelerator write Set_accelerator;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRuleStyle2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle2Disp = dispinterface
    ['{3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}']
    property tableLayout: WideString dispid - 2147413014;
    property borderCollapse: WideString dispid - 2147413028;
    property direction: WideString dispid - 2147412993;
    property behavior: WideString dispid - 2147412997;
    property position: WideString dispid - 2147413022;
    property unicodeBidi: WideString dispid - 2147412994;
    property bottom: OleVariant dispid - 2147418034;
    property right: OleVariant dispid - 2147418035;
    property pixelBottom: Integer dispid - 2147414103;
    property pixelRight: Integer dispid - 2147414102;
    property posBottom: Single dispid - 2147414101;
    property posRight: Single dispid - 2147414100;
    property imeMode: WideString dispid - 2147412992;
    property rubyAlign: WideString dispid - 2147412991;
    property rubyPosition: WideString dispid - 2147412990;
    property rubyOverhang: WideString dispid - 2147412989;
    property layoutGridChar: OleVariant dispid - 2147412985;
    property layoutGridLine: OleVariant dispid - 2147412984;
    property layoutGridMode: WideString dispid - 2147412983;
    property layoutGridType: WideString dispid - 2147412982;
    property layoutGrid: WideString dispid - 2147412981;
    property textAutospace: WideString dispid - 2147412980;
    property wordBreak: WideString dispid - 2147412978;
    property lineBreak: WideString dispid - 2147412979;
    property textJustify: WideString dispid - 2147412977;
    property textJustifyTrim: WideString dispid - 2147412976;
    property textKashida: OleVariant dispid - 2147412975;
    property overflowX: WideString dispid - 2147412973;
    property overflowY: WideString dispid - 2147412972;
    property accelerator: WideString dispid - 2147412965;
  end;

// *********************************************************************//
// Interface: IHTMLRuleStyle3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F657-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle3 = interface(IDispatch)
    ['{3050F657-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_layoutFlow(const p: WideString); safecall;
    function Get_layoutFlow: WideString; safecall;
    procedure Set_zoom(p: OleVariant); safecall;
    function Get_zoom: OleVariant; safecall;
    procedure Set_wordWrap(const p: WideString); safecall;
    function Get_wordWrap: WideString; safecall;
    procedure Set_textUnderlinePosition(const p: WideString); safecall;
    function Get_textUnderlinePosition: WideString; safecall;
    procedure Set_scrollbarBaseColor(p: OleVariant); safecall;
    function Get_scrollbarBaseColor: OleVariant; safecall;
    procedure Set_scrollbarFaceColor(p: OleVariant); safecall;
    function Get_scrollbarFaceColor: OleVariant; safecall;
    procedure Set_scrollbar3dLightColor(p: OleVariant); safecall;
    function Get_scrollbar3dLightColor: OleVariant; safecall;
    procedure Set_scrollbarShadowColor(p: OleVariant); safecall;
    function Get_scrollbarShadowColor: OleVariant; safecall;
    procedure Set_scrollbarHighlightColor(p: OleVariant); safecall;
    function Get_scrollbarHighlightColor: OleVariant; safecall;
    procedure Set_scrollbarDarkShadowColor(p: OleVariant); safecall;
    function Get_scrollbarDarkShadowColor: OleVariant; safecall;
    procedure Set_scrollbarArrowColor(p: OleVariant); safecall;
    function Get_scrollbarArrowColor: OleVariant; safecall;
    procedure Set_scrollbarTrackColor(p: OleVariant); safecall;
    function Get_scrollbarTrackColor: OleVariant; safecall;
    procedure Set_writingMode(const p: WideString); safecall;
    function Get_writingMode: WideString; safecall;
    procedure Set_textAlignLast(const p: WideString); safecall;
    function Get_textAlignLast: WideString; safecall;
    procedure Set_textKashidaSpace(p: OleVariant); safecall;
    function Get_textKashidaSpace: OleVariant; safecall;
    property layoutFlow: WideString read Get_layoutFlow write Set_layoutFlow;
    property zoom: OleVariant read Get_zoom write Set_zoom;
    property wordWrap: WideString read Get_wordWrap write Set_wordWrap;
    property textUnderlinePosition: WideString read Get_textUnderlinePosition write Set_textUnderlinePosition;
    property scrollbarBaseColor: OleVariant read Get_scrollbarBaseColor write Set_scrollbarBaseColor;
    property scrollbarFaceColor: OleVariant read Get_scrollbarFaceColor write Set_scrollbarFaceColor;
    property scrollbar3dLightColor: OleVariant read Get_scrollbar3dLightColor write Set_scrollbar3dLightColor;
    property scrollbarShadowColor: OleVariant read Get_scrollbarShadowColor write Set_scrollbarShadowColor;
    property scrollbarHighlightColor: OleVariant read Get_scrollbarHighlightColor write Set_scrollbarHighlightColor;
    property scrollbarDarkShadowColor: OleVariant read Get_scrollbarDarkShadowColor write Set_scrollbarDarkShadowColor;
    property scrollbarArrowColor: OleVariant read Get_scrollbarArrowColor write Set_scrollbarArrowColor;
    property scrollbarTrackColor: OleVariant read Get_scrollbarTrackColor write Set_scrollbarTrackColor;
    property writingMode: WideString read Get_writingMode write Set_writingMode;
    property textAlignLast: WideString read Get_textAlignLast write Set_textAlignLast;
    property textKashidaSpace: OleVariant read Get_textKashidaSpace write Set_textKashidaSpace;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRuleStyle3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F657-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle3Disp = dispinterface
    ['{3050F657-98B5-11CF-BB82-00AA00BDCE0B}']
    property layoutFlow: WideString dispid - 2147412957;
    property zoom: OleVariant dispid - 2147412959;
    property wordWrap: WideString dispid - 2147412954;
    property textUnderlinePosition: WideString dispid - 2147412953;
    property scrollbarBaseColor: OleVariant dispid - 2147412932;
    property scrollbarFaceColor: OleVariant dispid - 2147412931;
    property scrollbar3dLightColor: OleVariant dispid - 2147412930;
    property scrollbarShadowColor: OleVariant dispid - 2147412929;
    property scrollbarHighlightColor: OleVariant dispid - 2147412928;
    property scrollbarDarkShadowColor: OleVariant dispid - 2147412927;
    property scrollbarArrowColor: OleVariant dispid - 2147412926;
    property scrollbarTrackColor: OleVariant dispid - 2147412916;
    property writingMode: WideString dispid - 2147412920;
    property textAlignLast: WideString dispid - 2147412909;
    property textKashidaSpace: OleVariant dispid - 2147412908;
  end;

// *********************************************************************//
// Interface: IHTMLRuleStyle4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F817-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle4 = interface(IDispatch)
    ['{3050F817-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_textOverflow(const p: WideString); safecall;
    function Get_textOverflow: WideString; safecall;
    procedure Set_minHeight(p: OleVariant); safecall;
    function Get_minHeight: OleVariant; safecall;
    property textOverflow: WideString read Get_textOverflow write Set_textOverflow;
    property minHeight: OleVariant read Get_minHeight write Set_minHeight;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRuleStyle4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F817-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle4Disp = dispinterface
    ['{3050F817-98B5-11CF-BB82-00AA00BDCE0B}']
    property textOverflow: WideString dispid - 2147412903;
    property minHeight: OleVariant dispid - 2147412901;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyle
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyle = dispinterface
    ['{3050F55A-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontFamily: WideString dispid - 2147413094;
    property fontStyle: WideString dispid - 2147413088;
    property fontVariant: WideString dispid - 2147413087;
    property fontWeight: WideString dispid - 2147413085;
    property fontSize: OleVariant dispid - 2147413093;
    property font: WideString dispid - 2147413071;
    property color: OleVariant dispid - 2147413110;
    property background: WideString dispid - 2147413080;
    property backgroundColor: OleVariant dispid - 501;
    property backgroundImage: WideString dispid - 2147413111;
    property backgroundRepeat: WideString dispid - 2147413068;
    property backgroundAttachment: WideString dispid - 2147413067;
    property backgroundPosition: WideString dispid - 2147413066;
    property backgroundPositionX: OleVariant dispid - 2147413079;
    property backgroundPositionY: OleVariant dispid - 2147413078;
    property wordSpacing: OleVariant dispid - 2147413065;
    property letterSpacing: OleVariant dispid - 2147413104;
    property textDecoration: WideString dispid - 2147413077;
    property textDecorationNone: WordBool dispid - 2147413089;
    property textDecorationUnderline: WordBool dispid - 2147413091;
    property textDecorationOverline: WordBool dispid - 2147413043;
    property textDecorationLineThrough: WordBool dispid - 2147413092;
    property textDecorationBlink: WordBool dispid - 2147413090;
    property verticalAlign: OleVariant dispid - 2147413064;
    property textTransform: WideString dispid - 2147413108;
    property textAlign: WideString dispid - 2147418040;
    property textIndent: OleVariant dispid - 2147413105;
    property lineHeight: OleVariant dispid - 2147413106;
    property marginTop: OleVariant dispid - 2147413075;
    property marginRight: OleVariant dispid - 2147413074;
    property marginBottom: OleVariant dispid - 2147413073;
    property marginLeft: OleVariant dispid - 2147413072;
    property margin: WideString dispid - 2147413076;
    property paddingTop: OleVariant dispid - 2147413100;
    property paddingRight: OleVariant dispid - 2147413099;
    property paddingBottom: OleVariant dispid - 2147413098;
    property paddingLeft: OleVariant dispid - 2147413097;
    property padding: WideString dispid - 2147413101;
    property border: WideString dispid - 2147413063;
    property borderTop: WideString dispid - 2147413062;
    property borderRight: WideString dispid - 2147413061;
    property borderBottom: WideString dispid - 2147413060;
    property borderLeft: WideString dispid - 2147413059;
    property borderColor: WideString dispid - 2147413058;
    property borderTopColor: OleVariant dispid - 2147413057;
    property borderRightColor: OleVariant dispid - 2147413056;
    property borderBottomColor: OleVariant dispid - 2147413055;
    property borderLeftColor: OleVariant dispid - 2147413054;
    property borderWidth: WideString dispid - 2147413053;
    property borderTopWidth: OleVariant dispid - 2147413052;
    property borderRightWidth: OleVariant dispid - 2147413051;
    property borderBottomWidth: OleVariant dispid - 2147413050;
    property borderLeftWidth: OleVariant dispid - 2147413049;
    property borderStyle: WideString dispid - 2147413048;
    property borderTopStyle: WideString dispid - 2147413047;
    property borderRightStyle: WideString dispid - 2147413046;
    property borderBottomStyle: WideString dispid - 2147413045;
    property borderLeftStyle: WideString dispid - 2147413044;
    property width: OleVariant dispid - 2147418107;
    property height: OleVariant dispid - 2147418106;
    property styleFloat: WideString dispid - 2147413042;
    property clear: WideString dispid - 2147413096;
    property display: WideString dispid - 2147413041;
    property visibility: WideString dispid - 2147413032;
    property listStyleType: WideString dispid - 2147413040;
    property listStylePosition: WideString dispid - 2147413039;
    property listStyleImage: WideString dispid - 2147413038;
    property listStyle: WideString dispid - 2147413037;
    property whiteSpace: WideString dispid - 2147413036;
    property top: OleVariant dispid - 2147418108;
    property left: OleVariant dispid - 2147418109;
    property zIndex: OleVariant dispid - 2147413021;
    property overflow: WideString dispid - 2147413102;
    property pageBreakBefore: WideString dispid - 2147413035;
    property pageBreakAfter: WideString dispid - 2147413034;
    property cssText: WideString dispid - 2147413013;
    property pixelTop: Integer dispid - 2147414112;
    property pixelLeft: Integer dispid - 2147414111;
    property pixelWidth: Integer dispid - 2147414110;
    property pixelHeight: Integer dispid - 2147414109;
    property posTop: Single dispid - 2147414108;
    property posLeft: Single dispid - 2147414107;
    property posWidth: Single dispid - 2147414106;
    property posHeight: Single dispid - 2147414105;
    property cursor: WideString dispid - 2147413010;
    property clip: WideString dispid - 2147413020;
    property filter: WideString dispid - 2147413030;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    function toString: WideString; dispid - 2147414104;
    property tableLayout: WideString dispid - 2147413014;
    property borderCollapse: WideString dispid - 2147413028;
    property direction: WideString dispid - 2147412993;
    property behavior: WideString dispid - 2147412997;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property position: WideString dispid - 2147413022;
    property unicodeBidi: WideString dispid - 2147412994;
    property bottom: OleVariant dispid - 2147418034;
    property right: OleVariant dispid - 2147418035;
    property pixelBottom: Integer dispid - 2147414103;
    property pixelRight: Integer dispid - 2147414102;
    property posBottom: Single dispid - 2147414101;
    property posRight: Single dispid - 2147414100;
    property imeMode: WideString dispid - 2147412992;
    property rubyAlign: WideString dispid - 2147412991;
    property rubyPosition: WideString dispid - 2147412990;
    property rubyOverhang: WideString dispid - 2147412989;
    property layoutGridChar: OleVariant dispid - 2147412985;
    property layoutGridLine: OleVariant dispid - 2147412984;
    property layoutGridMode: WideString dispid - 2147412983;
    property layoutGridType: WideString dispid - 2147412982;
    property layoutGrid: WideString dispid - 2147412981;
    property wordBreak: WideString dispid - 2147412978;
    property lineBreak: WideString dispid - 2147412979;
    property textJustify: WideString dispid - 2147412977;
    property textJustifyTrim: WideString dispid - 2147412976;
    property textKashida: OleVariant dispid - 2147412975;
    property textAutospace: WideString dispid - 2147412980;
    property overflowX: WideString dispid - 2147412973;
    property overflowY: WideString dispid - 2147412972;
    property accelerator: WideString dispid - 2147412965;
    property layoutFlow: WideString dispid - 2147412957;
    property zoom: OleVariant dispid - 2147412959;
    property wordWrap: WideString dispid - 2147412954;
    property textUnderlinePosition: WideString dispid - 2147412953;
    property scrollbarBaseColor: OleVariant dispid - 2147412932;
    property scrollbarFaceColor: OleVariant dispid - 2147412931;
    property scrollbar3dLightColor: OleVariant dispid - 2147412930;
    property scrollbarShadowColor: OleVariant dispid - 2147412929;
    property scrollbarHighlightColor: OleVariant dispid - 2147412928;
    property scrollbarDarkShadowColor: OleVariant dispid - 2147412927;
    property scrollbarArrowColor: OleVariant dispid - 2147412926;
    property scrollbarTrackColor: OleVariant dispid - 2147412916;
    property writingMode: WideString dispid - 2147412920;
    property textAlignLast: WideString dispid - 2147412909;
    property textKashidaSpace: OleVariant dispid - 2147412908;
    property textOverflow: WideString dispid - 2147412903;
    property minHeight: OleVariant dispid - 2147412901;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLRuleStyle
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLRuleStyle = dispinterface
    ['{3050F55C-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontFamily: WideString dispid - 2147413094;
    property fontStyle: WideString dispid - 2147413088;
    property fontVariant: WideString dispid - 2147413087;
    property fontWeight: WideString dispid - 2147413085;
    property fontSize: OleVariant dispid - 2147413093;
    property font: WideString dispid - 2147413071;
    property color: OleVariant dispid - 2147413110;
    property background: WideString dispid - 2147413080;
    property backgroundColor: OleVariant dispid - 501;
    property backgroundImage: WideString dispid - 2147413111;
    property backgroundRepeat: WideString dispid - 2147413068;
    property backgroundAttachment: WideString dispid - 2147413067;
    property backgroundPosition: WideString dispid - 2147413066;
    property backgroundPositionX: OleVariant dispid - 2147413079;
    property backgroundPositionY: OleVariant dispid - 2147413078;
    property wordSpacing: OleVariant dispid - 2147413065;
    property letterSpacing: OleVariant dispid - 2147413104;
    property textDecoration: WideString dispid - 2147413077;
    property textDecorationNone: WordBool dispid - 2147413089;
    property textDecorationUnderline: WordBool dispid - 2147413091;
    property textDecorationOverline: WordBool dispid - 2147413043;
    property textDecorationLineThrough: WordBool dispid - 2147413092;
    property textDecorationBlink: WordBool dispid - 2147413090;
    property verticalAlign: OleVariant dispid - 2147413064;
    property textTransform: WideString dispid - 2147413108;
    property textAlign: WideString dispid - 2147418040;
    property textIndent: OleVariant dispid - 2147413105;
    property lineHeight: OleVariant dispid - 2147413106;
    property marginTop: OleVariant dispid - 2147413075;
    property marginRight: OleVariant dispid - 2147413074;
    property marginBottom: OleVariant dispid - 2147413073;
    property marginLeft: OleVariant dispid - 2147413072;
    property margin: WideString dispid - 2147413076;
    property paddingTop: OleVariant dispid - 2147413100;
    property paddingRight: OleVariant dispid - 2147413099;
    property paddingBottom: OleVariant dispid - 2147413098;
    property paddingLeft: OleVariant dispid - 2147413097;
    property padding: WideString dispid - 2147413101;
    property border: WideString dispid - 2147413063;
    property borderTop: WideString dispid - 2147413062;
    property borderRight: WideString dispid - 2147413061;
    property borderBottom: WideString dispid - 2147413060;
    property borderLeft: WideString dispid - 2147413059;
    property borderColor: WideString dispid - 2147413058;
    property borderTopColor: OleVariant dispid - 2147413057;
    property borderRightColor: OleVariant dispid - 2147413056;
    property borderBottomColor: OleVariant dispid - 2147413055;
    property borderLeftColor: OleVariant dispid - 2147413054;
    property borderWidth: WideString dispid - 2147413053;
    property borderTopWidth: OleVariant dispid - 2147413052;
    property borderRightWidth: OleVariant dispid - 2147413051;
    property borderBottomWidth: OleVariant dispid - 2147413050;
    property borderLeftWidth: OleVariant dispid - 2147413049;
    property borderStyle: WideString dispid - 2147413048;
    property borderTopStyle: WideString dispid - 2147413047;
    property borderRightStyle: WideString dispid - 2147413046;
    property borderBottomStyle: WideString dispid - 2147413045;
    property borderLeftStyle: WideString dispid - 2147413044;
    property width: OleVariant dispid - 2147418107;
    property height: OleVariant dispid - 2147418106;
    property styleFloat: WideString dispid - 2147413042;
    property clear: WideString dispid - 2147413096;
    property display: WideString dispid - 2147413041;
    property visibility: WideString dispid - 2147413032;
    property listStyleType: WideString dispid - 2147413040;
    property listStylePosition: WideString dispid - 2147413039;
    property listStyleImage: WideString dispid - 2147413038;
    property listStyle: WideString dispid - 2147413037;
    property whiteSpace: WideString dispid - 2147413036;
    property top: OleVariant dispid - 2147418108;
    property left: OleVariant dispid - 2147418109;
    property zIndex: OleVariant dispid - 2147413021;
    property overflow: WideString dispid - 2147413102;
    property pageBreakBefore: WideString dispid - 2147413035;
    property pageBreakAfter: WideString dispid - 2147413034;
    property cssText: WideString dispid - 2147413013;
    property cursor: WideString dispid - 2147413010;
    property clip: WideString dispid - 2147413020;
    property filter: WideString dispid - 2147413030;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property tableLayout: WideString dispid - 2147413014;
    property borderCollapse: WideString dispid - 2147413028;
    property direction: WideString dispid - 2147412993;
    property behavior: WideString dispid - 2147412997;
    property position: WideString dispid - 2147413022;
    property unicodeBidi: WideString dispid - 2147412994;
    property bottom: OleVariant dispid - 2147418034;
    property right: OleVariant dispid - 2147418035;
    property pixelBottom: Integer dispid - 2147414103;
    property pixelRight: Integer dispid - 2147414102;
    property posBottom: Single dispid - 2147414101;
    property posRight: Single dispid - 2147414100;
    property imeMode: WideString dispid - 2147412992;
    property rubyAlign: WideString dispid - 2147412991;
    property rubyPosition: WideString dispid - 2147412990;
    property rubyOverhang: WideString dispid - 2147412989;
    property layoutGridChar: OleVariant dispid - 2147412985;
    property layoutGridLine: OleVariant dispid - 2147412984;
    property layoutGridMode: WideString dispid - 2147412983;
    property layoutGridType: WideString dispid - 2147412982;
    property layoutGrid: WideString dispid - 2147412981;
    property textAutospace: WideString dispid - 2147412980;
    property wordBreak: WideString dispid - 2147412978;
    property lineBreak: WideString dispid - 2147412979;
    property textJustify: WideString dispid - 2147412977;
    property textJustifyTrim: WideString dispid - 2147412976;
    property textKashida: OleVariant dispid - 2147412975;
    property overflowX: WideString dispid - 2147412973;
    property overflowY: WideString dispid - 2147412972;
    property accelerator: WideString dispid - 2147412965;
    property layoutFlow: WideString dispid - 2147412957;
    property zoom: OleVariant dispid - 2147412959;
    property wordWrap: WideString dispid - 2147412954;
    property textUnderlinePosition: WideString dispid - 2147412953;
    property scrollbarBaseColor: OleVariant dispid - 2147412932;
    property scrollbarFaceColor: OleVariant dispid - 2147412931;
    property scrollbar3dLightColor: OleVariant dispid - 2147412930;
    property scrollbarShadowColor: OleVariant dispid - 2147412929;
    property scrollbarHighlightColor: OleVariant dispid - 2147412928;
    property scrollbarDarkShadowColor: OleVariant dispid - 2147412927;
    property scrollbarArrowColor: OleVariant dispid - 2147412926;
    property scrollbarTrackColor: OleVariant dispid - 2147412916;
    property writingMode: WideString dispid - 2147412920;
    property textAlignLast: WideString dispid - 2147412909;
    property textKashidaSpace: OleVariant dispid - 2147412908;
    property textOverflow: WideString dispid - 2147412903;
    property minHeight: OleVariant dispid - 2147412901;
  end;

// *********************************************************************//
// Interface: IHTMLRenderStyle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6AE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRenderStyle = interface(IDispatch)
    ['{3050F6AE-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_textLineThroughStyle(const p: WideString); safecall;
    function Get_textLineThroughStyle: WideString; safecall;
    procedure Set_textUnderlineStyle(const p: WideString); safecall;
    function Get_textUnderlineStyle: WideString; safecall;
    procedure Set_textEffect(const p: WideString); safecall;
    function Get_textEffect: WideString; safecall;
    procedure Set_textColor(p: OleVariant); safecall;
    function Get_textColor: OleVariant; safecall;
    procedure Set_textBackgroundColor(p: OleVariant); safecall;
    function Get_textBackgroundColor: OleVariant; safecall;
    procedure Set_textDecorationColor(p: OleVariant); safecall;
    function Get_textDecorationColor: OleVariant; safecall;
    procedure Set_renderingPriority(p: Integer); safecall;
    function Get_renderingPriority: Integer; safecall;
    procedure Set_defaultTextSelection(const p: WideString); safecall;
    function Get_defaultTextSelection: WideString; safecall;
    procedure Set_textDecoration(const p: WideString); safecall;
    function Get_textDecoration: WideString; safecall;
    property textLineThroughStyle: WideString read Get_textLineThroughStyle write Set_textLineThroughStyle;
    property textUnderlineStyle: WideString read Get_textUnderlineStyle write Set_textUnderlineStyle;
    property textEffect: WideString read Get_textEffect write Set_textEffect;
    property textColor: OleVariant read Get_textColor write Set_textColor;
    property textBackgroundColor: OleVariant read Get_textBackgroundColor write Set_textBackgroundColor;
    property textDecorationColor: OleVariant read Get_textDecorationColor write Set_textDecorationColor;
    property renderingPriority: Integer read Get_renderingPriority write Set_renderingPriority;
    property defaultTextSelection: WideString read Get_defaultTextSelection write Set_defaultTextSelection;
    property textDecoration: WideString read Get_textDecoration write Set_textDecoration;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRenderStyleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6AE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRenderStyleDisp = dispinterface
    ['{3050F6AE-98B5-11CF-BB82-00AA00BDCE0B}']
    property textLineThroughStyle: WideString dispid - 2147412946;
    property textUnderlineStyle: WideString dispid - 2147412945;
    property textEffect: WideString dispid - 2147412944;
    property textColor: OleVariant dispid - 2147412922;
    property textBackgroundColor: OleVariant dispid - 2147412943;
    property textDecorationColor: OleVariant dispid - 2147412923;
    property renderingPriority: Integer dispid - 2147412942;
    property defaultTextSelection: WideString dispid - 2147412924;
    property textDecoration: WideString dispid - 2147412921;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLRenderStyle
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F58B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLRenderStyle = dispinterface
    ['{3050F58B-98B5-11CF-BB82-00AA00BDCE0B}']
    property textLineThroughStyle: WideString dispid - 2147412946;
    property textUnderlineStyle: WideString dispid - 2147412945;
    property textEffect: WideString dispid - 2147412944;
    property textColor: OleVariant dispid - 2147412922;
    property textBackgroundColor: OleVariant dispid - 2147412943;
    property textDecorationColor: OleVariant dispid - 2147412923;
    property renderingPriority: Integer dispid - 2147412942;
    property defaultTextSelection: WideString dispid - 2147412924;
    property textDecoration: WideString dispid - 2147412921;
  end;

// *********************************************************************//
// Interface: IHTMLCurrentStyle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle = interface(IDispatch)
    ['{3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_position: WideString; safecall;
    function Get_styleFloat: WideString; safecall;
    function Get_color: OleVariant; safecall;
    function Get_backgroundColor: OleVariant; safecall;
    function Get_fontFamily: WideString; safecall;
    function Get_fontStyle: WideString; safecall;
    function Get_fontVariant: WideString; safecall;
    function Get_fontWeight: OleVariant; safecall;
    function Get_fontSize: OleVariant; safecall;
    function Get_backgroundImage: WideString; safecall;
    function Get_backgroundPositionX: OleVariant; safecall;
    function Get_backgroundPositionY: OleVariant; safecall;
    function Get_backgroundRepeat: WideString; safecall;
    function Get_borderLeftColor: OleVariant; safecall;
    function Get_borderTopColor: OleVariant; safecall;
    function Get_borderRightColor: OleVariant; safecall;
    function Get_borderBottomColor: OleVariant; safecall;
    function Get_borderTopStyle: WideString; safecall;
    function Get_borderRightStyle: WideString; safecall;
    function Get_borderBottomStyle: WideString; safecall;
    function Get_borderLeftStyle: WideString; safecall;
    function Get_borderTopWidth: OleVariant; safecall;
    function Get_borderRightWidth: OleVariant; safecall;
    function Get_borderBottomWidth: OleVariant; safecall;
    function Get_borderLeftWidth: OleVariant; safecall;
    function Get_left: OleVariant; safecall;
    function Get_top: OleVariant; safecall;
    function Get_width: OleVariant; safecall;
    function Get_height: OleVariant; safecall;
    function Get_paddingLeft: OleVariant; safecall;
    function Get_paddingTop: OleVariant; safecall;
    function Get_paddingRight: OleVariant; safecall;
    function Get_paddingBottom: OleVariant; safecall;
    function Get_textAlign: WideString; safecall;
    function Get_textDecoration: WideString; safecall;
    function Get_display: WideString; safecall;
    function Get_visibility: WideString; safecall;
    function Get_zIndex: OleVariant; safecall;
    function Get_letterSpacing: OleVariant; safecall;
    function Get_lineHeight: OleVariant; safecall;
    function Get_textIndent: OleVariant; safecall;
    function Get_verticalAlign: OleVariant; safecall;
    function Get_backgroundAttachment: WideString; safecall;
    function Get_marginTop: OleVariant; safecall;
    function Get_marginRight: OleVariant; safecall;
    function Get_marginBottom: OleVariant; safecall;
    function Get_marginLeft: OleVariant; safecall;
    function Get_clear: WideString; safecall;
    function Get_listStyleType: WideString; safecall;
    function Get_listStylePosition: WideString; safecall;
    function Get_listStyleImage: WideString; safecall;
    function Get_clipTop: OleVariant; safecall;
    function Get_clipRight: OleVariant; safecall;
    function Get_clipBottom: OleVariant; safecall;
    function Get_clipLeft: OleVariant; safecall;
    function Get_overflow: WideString; safecall;
    function Get_pageBreakBefore: WideString; safecall;
    function Get_pageBreakAfter: WideString; safecall;
    function Get_cursor: WideString; safecall;
    function Get_tableLayout: WideString; safecall;
    function Get_borderCollapse: WideString; safecall;
    function Get_direction: WideString; safecall;
    function Get_behavior: WideString; safecall;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function Get_unicodeBidi: WideString; safecall;
    function Get_right: OleVariant; safecall;
    function Get_bottom: OleVariant; safecall;
    function Get_imeMode: WideString; safecall;
    function Get_rubyAlign: WideString; safecall;
    function Get_rubyPosition: WideString; safecall;
    function Get_rubyOverhang: WideString; safecall;
    function Get_textAutospace: WideString; safecall;
    function Get_lineBreak: WideString; safecall;
    function Get_wordBreak: WideString; safecall;
    function Get_textJustify: WideString; safecall;
    function Get_textJustifyTrim: WideString; safecall;
    function Get_textKashida: OleVariant; safecall;
    function Get_blockDirection: WideString; safecall;
    function Get_layoutGridChar: OleVariant; safecall;
    function Get_layoutGridLine: OleVariant; safecall;
    function Get_layoutGridMode: WideString; safecall;
    function Get_layoutGridType: WideString; safecall;
    function Get_borderStyle: WideString; safecall;
    function Get_borderColor: WideString; safecall;
    function Get_borderWidth: WideString; safecall;
    function Get_padding: WideString; safecall;
    function Get_margin: WideString; safecall;
    function Get_accelerator: WideString; safecall;
    function Get_overflowX: WideString; safecall;
    function Get_overflowY: WideString; safecall;
    function Get_textTransform: WideString; safecall;
    property position: WideString read Get_position;
    property styleFloat: WideString read Get_styleFloat;
    property color: OleVariant read Get_color;
    property backgroundColor: OleVariant read Get_backgroundColor;
    property fontFamily: WideString read Get_fontFamily;
    property fontStyle: WideString read Get_fontStyle;
    property fontVariant: WideString read Get_fontVariant;
    property fontWeight: OleVariant read Get_fontWeight;
    property fontSize: OleVariant read Get_fontSize;
    property backgroundImage: WideString read Get_backgroundImage;
    property backgroundPositionX: OleVariant read Get_backgroundPositionX;
    property backgroundPositionY: OleVariant read Get_backgroundPositionY;
    property backgroundRepeat: WideString read Get_backgroundRepeat;
    property borderLeftColor: OleVariant read Get_borderLeftColor;
    property borderTopColor: OleVariant read Get_borderTopColor;
    property borderRightColor: OleVariant read Get_borderRightColor;
    property borderBottomColor: OleVariant read Get_borderBottomColor;
    property borderTopStyle: WideString read Get_borderTopStyle;
    property borderRightStyle: WideString read Get_borderRightStyle;
    property borderBottomStyle: WideString read Get_borderBottomStyle;
    property borderLeftStyle: WideString read Get_borderLeftStyle;
    property borderTopWidth: OleVariant read Get_borderTopWidth;
    property borderRightWidth: OleVariant read Get_borderRightWidth;
    property borderBottomWidth: OleVariant read Get_borderBottomWidth;
    property borderLeftWidth: OleVariant read Get_borderLeftWidth;
    property left: OleVariant read Get_left;
    property top: OleVariant read Get_top;
    property width: OleVariant read Get_width;
    property height: OleVariant read Get_height;
    property paddingLeft: OleVariant read Get_paddingLeft;
    property paddingTop: OleVariant read Get_paddingTop;
    property paddingRight: OleVariant read Get_paddingRight;
    property paddingBottom: OleVariant read Get_paddingBottom;
    property textAlign: WideString read Get_textAlign;
    property textDecoration: WideString read Get_textDecoration;
    property display: WideString read Get_display;
    property visibility: WideString read Get_visibility;
    property zIndex: OleVariant read Get_zIndex;
    property letterSpacing: OleVariant read Get_letterSpacing;
    property lineHeight: OleVariant read Get_lineHeight;
    property textIndent: OleVariant read Get_textIndent;
    property verticalAlign: OleVariant read Get_verticalAlign;
    property backgroundAttachment: WideString read Get_backgroundAttachment;
    property marginTop: OleVariant read Get_marginTop;
    property marginRight: OleVariant read Get_marginRight;
    property marginBottom: OleVariant read Get_marginBottom;
    property marginLeft: OleVariant read Get_marginLeft;
    property clear: WideString read Get_clear;
    property listStyleType: WideString read Get_listStyleType;
    property listStylePosition: WideString read Get_listStylePosition;
    property listStyleImage: WideString read Get_listStyleImage;
    property clipTop: OleVariant read Get_clipTop;
    property clipRight: OleVariant read Get_clipRight;
    property clipBottom: OleVariant read Get_clipBottom;
    property clipLeft: OleVariant read Get_clipLeft;
    property overflow: WideString read Get_overflow;
    property pageBreakBefore: WideString read Get_pageBreakBefore;
    property pageBreakAfter: WideString read Get_pageBreakAfter;
    property cursor: WideString read Get_cursor;
    property tableLayout: WideString read Get_tableLayout;
    property borderCollapse: WideString read Get_borderCollapse;
    property direction: WideString read Get_direction;
    property behavior: WideString read Get_behavior;
    property unicodeBidi: WideString read Get_unicodeBidi;
    property right: OleVariant read Get_right;
    property bottom: OleVariant read Get_bottom;
    property imeMode: WideString read Get_imeMode;
    property rubyAlign: WideString read Get_rubyAlign;
    property rubyPosition: WideString read Get_rubyPosition;
    property rubyOverhang: WideString read Get_rubyOverhang;
    property textAutospace: WideString read Get_textAutospace;
    property lineBreak: WideString read Get_lineBreak;
    property wordBreak: WideString read Get_wordBreak;
    property textJustify: WideString read Get_textJustify;
    property textJustifyTrim: WideString read Get_textJustifyTrim;
    property textKashida: OleVariant read Get_textKashida;
    property blockDirection: WideString read Get_blockDirection;
    property layoutGridChar: OleVariant read Get_layoutGridChar;
    property layoutGridLine: OleVariant read Get_layoutGridLine;
    property layoutGridMode: WideString read Get_layoutGridMode;
    property layoutGridType: WideString read Get_layoutGridType;
    property borderStyle: WideString read Get_borderStyle;
    property borderColor: WideString read Get_borderColor;
    property borderWidth: WideString read Get_borderWidth;
    property padding: WideString read Get_padding;
    property margin: WideString read Get_margin;
    property accelerator: WideString read Get_accelerator;
    property overflowX: WideString read Get_overflowX;
    property overflowY: WideString read Get_overflowY;
    property textTransform: WideString read Get_textTransform;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCurrentStyleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyleDisp = dispinterface
    ['{3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}']
    property position: WideString readonly dispid - 2147413022;
    property styleFloat: WideString readonly dispid - 2147413042;
    property color: OleVariant readonly dispid - 2147413110;
    property backgroundColor: OleVariant readonly dispid - 501;
    property fontFamily: WideString readonly dispid - 2147413094;
    property fontStyle: WideString readonly dispid - 2147413088;
    property fontVariant: WideString readonly dispid - 2147413087;
    property fontWeight: OleVariant readonly dispid - 2147413085;
    property fontSize: OleVariant readonly dispid - 2147413093;
    property backgroundImage: WideString readonly dispid - 2147413111;
    property backgroundPositionX: OleVariant readonly dispid - 2147413079;
    property backgroundPositionY: OleVariant readonly dispid - 2147413078;
    property backgroundRepeat: WideString readonly dispid - 2147413068;
    property borderLeftColor: OleVariant readonly dispid - 2147413054;
    property borderTopColor: OleVariant readonly dispid - 2147413057;
    property borderRightColor: OleVariant readonly dispid - 2147413056;
    property borderBottomColor: OleVariant readonly dispid - 2147413055;
    property borderTopStyle: WideString readonly dispid - 2147413047;
    property borderRightStyle: WideString readonly dispid - 2147413046;
    property borderBottomStyle: WideString readonly dispid - 2147413045;
    property borderLeftStyle: WideString readonly dispid - 2147413044;
    property borderTopWidth: OleVariant readonly dispid - 2147413052;
    property borderRightWidth: OleVariant readonly dispid - 2147413051;
    property borderBottomWidth: OleVariant readonly dispid - 2147413050;
    property borderLeftWidth: OleVariant readonly dispid - 2147413049;
    property left: OleVariant readonly dispid - 2147418109;
    property top: OleVariant readonly dispid - 2147418108;
    property width: OleVariant readonly dispid - 2147418107;
    property height: OleVariant readonly dispid - 2147418106;
    property paddingLeft: OleVariant readonly dispid - 2147413097;
    property paddingTop: OleVariant readonly dispid - 2147413100;
    property paddingRight: OleVariant readonly dispid - 2147413099;
    property paddingBottom: OleVariant readonly dispid - 2147413098;
    property textAlign: WideString readonly dispid - 2147418040;
    property textDecoration: WideString readonly dispid - 2147413077;
    property display: WideString readonly dispid - 2147413041;
    property visibility: WideString readonly dispid - 2147413032;
    property zIndex: OleVariant readonly dispid - 2147413021;
    property letterSpacing: OleVariant readonly dispid - 2147413104;
    property lineHeight: OleVariant readonly dispid - 2147413106;
    property textIndent: OleVariant readonly dispid - 2147413105;
    property verticalAlign: OleVariant readonly dispid - 2147413064;
    property backgroundAttachment: WideString readonly dispid - 2147413067;
    property marginTop: OleVariant readonly dispid - 2147413075;
    property marginRight: OleVariant readonly dispid - 2147413074;
    property marginBottom: OleVariant readonly dispid - 2147413073;
    property marginLeft: OleVariant readonly dispid - 2147413072;
    property clear: WideString readonly dispid - 2147413096;
    property listStyleType: WideString readonly dispid - 2147413040;
    property listStylePosition: WideString readonly dispid - 2147413039;
    property listStyleImage: WideString readonly dispid - 2147413038;
    property clipTop: OleVariant readonly dispid - 2147413019;
    property clipRight: OleVariant readonly dispid - 2147413018;
    property clipBottom: OleVariant readonly dispid - 2147413017;
    property clipLeft: OleVariant readonly dispid - 2147413016;
    property overflow: WideString readonly dispid - 2147413102;
    property pageBreakBefore: WideString readonly dispid - 2147413035;
    property pageBreakAfter: WideString readonly dispid - 2147413034;
    property cursor: WideString readonly dispid - 2147413010;
    property tableLayout: WideString readonly dispid - 2147413014;
    property borderCollapse: WideString readonly dispid - 2147413028;
    property direction: WideString readonly dispid - 2147412993;
    property behavior: WideString readonly dispid - 2147412997;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    property unicodeBidi: WideString readonly dispid - 2147412994;
    property right: OleVariant readonly dispid - 2147418035;
    property bottom: OleVariant readonly dispid - 2147418034;
    property imeMode: WideString readonly dispid - 2147412992;
    property rubyAlign: WideString readonly dispid - 2147412991;
    property rubyPosition: WideString readonly dispid - 2147412990;
    property rubyOverhang: WideString readonly dispid - 2147412989;
    property textAutospace: WideString readonly dispid - 2147412980;
    property lineBreak: WideString readonly dispid - 2147412979;
    property wordBreak: WideString readonly dispid - 2147412978;
    property textJustify: WideString readonly dispid - 2147412977;
    property textJustifyTrim: WideString readonly dispid - 2147412976;
    property textKashida: OleVariant readonly dispid - 2147412975;
    property blockDirection: WideString readonly dispid - 2147412995;
    property layoutGridChar: OleVariant readonly dispid - 2147412985;
    property layoutGridLine: OleVariant readonly dispid - 2147412984;
    property layoutGridMode: WideString readonly dispid - 2147412983;
    property layoutGridType: WideString readonly dispid - 2147412982;
    property borderStyle: WideString readonly dispid - 2147413048;
    property borderColor: WideString readonly dispid - 2147413058;
    property borderWidth: WideString readonly dispid - 2147413053;
    property padding: WideString readonly dispid - 2147413101;
    property margin: WideString readonly dispid - 2147413076;
    property accelerator: WideString readonly dispid - 2147412965;
    property overflowX: WideString readonly dispid - 2147412973;
    property overflowY: WideString readonly dispid - 2147412972;
    property textTransform: WideString readonly dispid - 2147413108;
  end;

// *********************************************************************//
// Interface: IHTMLCurrentStyle2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F658-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle2 = interface(IDispatch)
    ['{3050F658-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_layoutFlow: WideString; safecall;
    function Get_wordWrap: WideString; safecall;
    function Get_textUnderlinePosition: WideString; safecall;
    function Get_hasLayout: WordBool; safecall;
    function Get_scrollbarBaseColor: OleVariant; safecall;
    function Get_scrollbarFaceColor: OleVariant; safecall;
    function Get_scrollbar3dLightColor: OleVariant; safecall;
    function Get_scrollbarShadowColor: OleVariant; safecall;
    function Get_scrollbarHighlightColor: OleVariant; safecall;
    function Get_scrollbarDarkShadowColor: OleVariant; safecall;
    function Get_scrollbarArrowColor: OleVariant; safecall;
    function Get_scrollbarTrackColor: OleVariant; safecall;
    function Get_writingMode: WideString; safecall;
    function Get_zoom: OleVariant; safecall;
    function Get_filter: WideString; safecall;
    function Get_textAlignLast: WideString; safecall;
    function Get_textKashidaSpace: OleVariant; safecall;
    function Get_isBlock: WordBool; safecall;
    property layoutFlow: WideString read Get_layoutFlow;
    property wordWrap: WideString read Get_wordWrap;
    property textUnderlinePosition: WideString read Get_textUnderlinePosition;
    property hasLayout: WordBool read Get_hasLayout;
    property scrollbarBaseColor: OleVariant read Get_scrollbarBaseColor;
    property scrollbarFaceColor: OleVariant read Get_scrollbarFaceColor;
    property scrollbar3dLightColor: OleVariant read Get_scrollbar3dLightColor;
    property scrollbarShadowColor: OleVariant read Get_scrollbarShadowColor;
    property scrollbarHighlightColor: OleVariant read Get_scrollbarHighlightColor;
    property scrollbarDarkShadowColor: OleVariant read Get_scrollbarDarkShadowColor;
    property scrollbarArrowColor: OleVariant read Get_scrollbarArrowColor;
    property scrollbarTrackColor: OleVariant read Get_scrollbarTrackColor;
    property writingMode: WideString read Get_writingMode;
    property zoom: OleVariant read Get_zoom;
    property filter: WideString read Get_filter;
    property textAlignLast: WideString read Get_textAlignLast;
    property textKashidaSpace: OleVariant read Get_textKashidaSpace;
    property isBlock: WordBool read Get_isBlock;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCurrentStyle2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F658-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle2Disp = dispinterface
    ['{3050F658-98B5-11CF-BB82-00AA00BDCE0B}']
    property layoutFlow: WideString readonly dispid - 2147412957;
    property wordWrap: WideString readonly dispid - 2147412954;
    property textUnderlinePosition: WideString readonly dispid - 2147412953;
    property hasLayout: WordBool readonly dispid - 2147412952;
    property scrollbarBaseColor: OleVariant readonly dispid - 2147412932;
    property scrollbarFaceColor: OleVariant readonly dispid - 2147412931;
    property scrollbar3dLightColor: OleVariant readonly dispid - 2147412930;
    property scrollbarShadowColor: OleVariant readonly dispid - 2147412929;
    property scrollbarHighlightColor: OleVariant readonly dispid - 2147412928;
    property scrollbarDarkShadowColor: OleVariant readonly dispid - 2147412927;
    property scrollbarArrowColor: OleVariant readonly dispid - 2147412926;
    property scrollbarTrackColor: OleVariant readonly dispid - 2147412916;
    property writingMode: WideString readonly dispid - 2147412920;
    property zoom: OleVariant readonly dispid - 2147412959;
    property filter: WideString readonly dispid - 2147413030;
    property textAlignLast: WideString readonly dispid - 2147412909;
    property textKashidaSpace: OleVariant readonly dispid - 2147412908;
    property isBlock: WordBool readonly dispid - 2147412904;
  end;

// *********************************************************************//
// Interface: IHTMLCurrentStyle3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F818-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle3 = interface(IDispatch)
    ['{3050F818-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_textOverflow: WideString; safecall;
    function Get_minHeight: OleVariant; safecall;
    function Get_wordSpacing: OleVariant; safecall;
    function Get_whiteSpace: WideString; safecall;
    property textOverflow: WideString read Get_textOverflow;
    property minHeight: OleVariant read Get_minHeight;
    property wordSpacing: OleVariant read Get_wordSpacing;
    property whiteSpace: WideString read Get_whiteSpace;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCurrentStyle3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F818-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle3Disp = dispinterface
    ['{3050F818-98B5-11CF-BB82-00AA00BDCE0B}']
    property textOverflow: WideString readonly dispid - 2147412903;
    property minHeight: OleVariant readonly dispid - 2147412901;
    property wordSpacing: OleVariant readonly dispid - 2147413065;
    property whiteSpace: WideString readonly dispid - 2147413036;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLCurrentStyle
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F557-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLCurrentStyle = dispinterface
    ['{3050F557-98B5-11CF-BB82-00AA00BDCE0B}']
    property position: WideString readonly dispid - 2147413022;
    property styleFloat: WideString readonly dispid - 2147413042;
    property color: OleVariant readonly dispid - 2147413110;
    property backgroundColor: OleVariant readonly dispid - 501;
    property fontFamily: WideString readonly dispid - 2147413094;
    property fontStyle: WideString readonly dispid - 2147413088;
    property fontVariant: WideString readonly dispid - 2147413087;
    property fontWeight: OleVariant readonly dispid - 2147413085;
    property fontSize: OleVariant readonly dispid - 2147413093;
    property backgroundImage: WideString readonly dispid - 2147413111;
    property backgroundPositionX: OleVariant readonly dispid - 2147413079;
    property backgroundPositionY: OleVariant readonly dispid - 2147413078;
    property backgroundRepeat: WideString readonly dispid - 2147413068;
    property borderLeftColor: OleVariant readonly dispid - 2147413054;
    property borderTopColor: OleVariant readonly dispid - 2147413057;
    property borderRightColor: OleVariant readonly dispid - 2147413056;
    property borderBottomColor: OleVariant readonly dispid - 2147413055;
    property borderTopStyle: WideString readonly dispid - 2147413047;
    property borderRightStyle: WideString readonly dispid - 2147413046;
    property borderBottomStyle: WideString readonly dispid - 2147413045;
    property borderLeftStyle: WideString readonly dispid - 2147413044;
    property borderTopWidth: OleVariant readonly dispid - 2147413052;
    property borderRightWidth: OleVariant readonly dispid - 2147413051;
    property borderBottomWidth: OleVariant readonly dispid - 2147413050;
    property borderLeftWidth: OleVariant readonly dispid - 2147413049;
    property left: OleVariant readonly dispid - 2147418109;
    property top: OleVariant readonly dispid - 2147418108;
    property width: OleVariant readonly dispid - 2147418107;
    property height: OleVariant readonly dispid - 2147418106;
    property paddingLeft: OleVariant readonly dispid - 2147413097;
    property paddingTop: OleVariant readonly dispid - 2147413100;
    property paddingRight: OleVariant readonly dispid - 2147413099;
    property paddingBottom: OleVariant readonly dispid - 2147413098;
    property textAlign: WideString readonly dispid - 2147418040;
    property textDecoration: WideString readonly dispid - 2147413077;
    property display: WideString readonly dispid - 2147413041;
    property visibility: WideString readonly dispid - 2147413032;
    property zIndex: OleVariant readonly dispid - 2147413021;
    property letterSpacing: OleVariant readonly dispid - 2147413104;
    property lineHeight: OleVariant readonly dispid - 2147413106;
    property textIndent: OleVariant readonly dispid - 2147413105;
    property verticalAlign: OleVariant readonly dispid - 2147413064;
    property backgroundAttachment: WideString readonly dispid - 2147413067;
    property marginTop: OleVariant readonly dispid - 2147413075;
    property marginRight: OleVariant readonly dispid - 2147413074;
    property marginBottom: OleVariant readonly dispid - 2147413073;
    property marginLeft: OleVariant readonly dispid - 2147413072;
    property clear: WideString readonly dispid - 2147413096;
    property listStyleType: WideString readonly dispid - 2147413040;
    property listStylePosition: WideString readonly dispid - 2147413039;
    property listStyleImage: WideString readonly dispid - 2147413038;
    property clipTop: OleVariant readonly dispid - 2147413019;
    property clipRight: OleVariant readonly dispid - 2147413018;
    property clipBottom: OleVariant readonly dispid - 2147413017;
    property clipLeft: OleVariant readonly dispid - 2147413016;
    property overflow: WideString readonly dispid - 2147413102;
    property pageBreakBefore: WideString readonly dispid - 2147413035;
    property pageBreakAfter: WideString readonly dispid - 2147413034;
    property cursor: WideString readonly dispid - 2147413010;
    property tableLayout: WideString readonly dispid - 2147413014;
    property borderCollapse: WideString readonly dispid - 2147413028;
    property direction: WideString readonly dispid - 2147412993;
    property behavior: WideString readonly dispid - 2147412997;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    property unicodeBidi: WideString readonly dispid - 2147412994;
    property right: OleVariant readonly dispid - 2147418035;
    property bottom: OleVariant readonly dispid - 2147418034;
    property imeMode: WideString readonly dispid - 2147412992;
    property rubyAlign: WideString readonly dispid - 2147412991;
    property rubyPosition: WideString readonly dispid - 2147412990;
    property rubyOverhang: WideString readonly dispid - 2147412989;
    property textAutospace: WideString readonly dispid - 2147412980;
    property lineBreak: WideString readonly dispid - 2147412979;
    property wordBreak: WideString readonly dispid - 2147412978;
    property textJustify: WideString readonly dispid - 2147412977;
    property textJustifyTrim: WideString readonly dispid - 2147412976;
    property textKashida: OleVariant readonly dispid - 2147412975;
    property blockDirection: WideString readonly dispid - 2147412995;
    property layoutGridChar: OleVariant readonly dispid - 2147412985;
    property layoutGridLine: OleVariant readonly dispid - 2147412984;
    property layoutGridMode: WideString readonly dispid - 2147412983;
    property layoutGridType: WideString readonly dispid - 2147412982;
    property borderStyle: WideString readonly dispid - 2147413048;
    property borderColor: WideString readonly dispid - 2147413058;
    property borderWidth: WideString readonly dispid - 2147413053;
    property padding: WideString readonly dispid - 2147413101;
    property margin: WideString readonly dispid - 2147413076;
    property accelerator: WideString readonly dispid - 2147412965;
    property overflowX: WideString readonly dispid - 2147412973;
    property overflowY: WideString readonly dispid - 2147412972;
    property textTransform: WideString readonly dispid - 2147413108;
    property layoutFlow: WideString readonly dispid - 2147412957;
    property wordWrap: WideString readonly dispid - 2147412954;
    property textUnderlinePosition: WideString readonly dispid - 2147412953;
    property hasLayout: WordBool readonly dispid - 2147412952;
    property scrollbarBaseColor: OleVariant readonly dispid - 2147412932;
    property scrollbarFaceColor: OleVariant readonly dispid - 2147412931;
    property scrollbar3dLightColor: OleVariant readonly dispid - 2147412930;
    property scrollbarShadowColor: OleVariant readonly dispid - 2147412929;
    property scrollbarHighlightColor: OleVariant readonly dispid - 2147412928;
    property scrollbarDarkShadowColor: OleVariant readonly dispid - 2147412927;
    property scrollbarArrowColor: OleVariant readonly dispid - 2147412926;
    property scrollbarTrackColor: OleVariant readonly dispid - 2147412916;
    property writingMode: WideString readonly dispid - 2147412920;
    property zoom: OleVariant readonly dispid - 2147412959;
    property filter: WideString readonly dispid - 2147413030;
    property textAlignLast: WideString readonly dispid - 2147412909;
    property textKashidaSpace: OleVariant readonly dispid - 2147412908;
    property isBlock: WordBool readonly dispid - 2147412904;
    property textOverflow: WideString readonly dispid - 2147412903;
    property minHeight: OleVariant readonly dispid - 2147412901;
    property wordSpacing: OleVariant readonly dispid - 2147413065;
    property whiteSpace: WideString readonly dispid - 2147413036;
  end;

// *********************************************************************//
// Interface: IHTMLRect
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRect = interface(IDispatch)
    ['{3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_left(p: Integer); safecall;
    function Get_left: Integer; safecall;
    procedure Set_top(p: Integer); safecall;
    function Get_top: Integer; safecall;
    procedure Set_right(p: Integer); safecall;
    function Get_right: Integer; safecall;
    procedure Set_bottom(p: Integer); safecall;
    function Get_bottom: Integer; safecall;
    property left: Integer read Get_left write Set_left;
    property top: Integer read Get_top write Set_top;
    property right: Integer read Get_right write Set_right;
    property bottom: Integer read Get_bottom write Set_bottom;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRectDisp = dispinterface
    ['{3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}']
    property left: Integer dispid 1001;
    property top: Integer dispid 1002;
    property right: Integer dispid 1003;
    property bottom: Integer dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLRectCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRectCollection = interface(IDispatch)
    ['{3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    // !! API fix decl
    function item(const pvarIndex: OleVariant): OleVariant; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRectCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRectCollectionDisp = dispinterface
    ['{3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid - 4;
    // !! API fix decl
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLDOMNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMNode = interface(IDispatch)
    ['{3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_nodeType: Integer; safecall;
    function Get_parentNode: IHTMLDOMNode; safecall;
    function hasChildNodes: WordBool; safecall;
    function Get_childNodes: IDispatch; safecall;
    function Get_attributes: IDispatch; safecall;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; safecall;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; safecall;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; safecall;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function Get_nodeName: WideString; safecall;
    procedure Set_nodeValue(p: OleVariant); safecall;
    function Get_nodeValue: OleVariant; safecall;
    function Get_firstChild: IHTMLDOMNode; safecall;
    function Get_lastChild: IHTMLDOMNode; safecall;
    function Get_previousSibling: IHTMLDOMNode; safecall;
    function Get_nextSibling: IHTMLDOMNode; safecall;
    property nodeType: Integer read Get_nodeType;
    property parentNode: IHTMLDOMNode read Get_parentNode;
    property childNodes: IDispatch read Get_childNodes;
    property attributes: IDispatch read Get_attributes;
    property nodeName: WideString read Get_nodeName;
    property nodeValue: OleVariant read Get_nodeValue write Set_nodeValue;
    property firstChild: IHTMLDOMNode read Get_firstChild;
    property lastChild: IHTMLDOMNode read Get_lastChild;
    property previousSibling: IHTMLDOMNode read Get_previousSibling;
    property nextSibling: IHTMLDOMNode read Get_nextSibling;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMNodeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMNodeDisp = dispinterface
    ['{3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}']
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
  end;

// *********************************************************************//
// Interface: IHTMLDOMNode2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMNode2 = interface(IDispatch)
    ['{3050F80B-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_ownerDocument: IDispatch; safecall;
    property ownerDocument: IDispatch read Get_ownerDocument;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMNode2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMNode2Disp = dispinterface
    ['{3050F80B-98B5-11CF-BB82-00AA00BDCE0B}']
    property ownerDocument: IDispatch readonly dispid - 2147416999;
  end;

// *********************************************************************//
// Interface: IHTMLDOMAttribute
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMAttribute = interface(IDispatch)
    ['{3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_nodeName: WideString; safecall;
    procedure Set_nodeValue(p: OleVariant); safecall;
    function Get_nodeValue: OleVariant; safecall;
    function Get_specified: WordBool; safecall;
    property nodeName: WideString read Get_nodeName;
    property nodeValue: OleVariant read Get_nodeValue write Set_nodeValue;
    property specified: WordBool read Get_specified;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMAttributeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMAttributeDisp = dispinterface
    ['{3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}']
    property nodeName: WideString readonly dispid 1000;
    property nodeValue: OleVariant dispid 1002;
    property specified: WordBool readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLDOMAttribute2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F810-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMAttribute2 = interface(IDispatch)
    ['{3050F810-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_name: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    function Get_expando: WordBool; safecall;
    function Get_nodeType: Integer; safecall;
    function Get_parentNode: IHTMLDOMNode; safecall;
    function Get_childNodes: IDispatch; safecall;
    function Get_firstChild: IHTMLDOMNode; safecall;
    function Get_lastChild: IHTMLDOMNode; safecall;
    function Get_previousSibling: IHTMLDOMNode; safecall;
    function Get_nextSibling: IHTMLDOMNode; safecall;
    function Get_attributes: IDispatch; safecall;
    function Get_ownerDocument: IDispatch; safecall;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; safecall;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function hasChildNodes: WordBool; safecall;
    function cloneNode(fDeep: WordBool): IHTMLDOMAttribute; safecall;
    property name: WideString read Get_name;
    property value: WideString read Get_value write Set_value;
    property expando: WordBool read Get_expando;
    property nodeType: Integer read Get_nodeType;
    property parentNode: IHTMLDOMNode read Get_parentNode;
    property childNodes: IDispatch read Get_childNodes;
    property firstChild: IHTMLDOMNode read Get_firstChild;
    property lastChild: IHTMLDOMNode read Get_lastChild;
    property previousSibling: IHTMLDOMNode read Get_previousSibling;
    property nextSibling: IHTMLDOMNode read Get_nextSibling;
    property attributes: IDispatch read Get_attributes;
    property ownerDocument: IDispatch read Get_ownerDocument;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMAttribute2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F810-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMAttribute2Disp = dispinterface
    ['{3050F810-98B5-11CF-BB82-00AA00BDCE0B}']
    property name: WideString readonly dispid 1003;
    property value: WideString dispid 1004;
    property expando: WordBool readonly dispid 1005;
    property nodeType: Integer readonly dispid 1006;
    property parentNode: IHTMLDOMNode readonly dispid 1007;
    property childNodes: IDispatch readonly dispid 1008;
    property firstChild: IHTMLDOMNode readonly dispid 1009;
    property lastChild: IHTMLDOMNode readonly dispid 1010;
    property previousSibling: IHTMLDOMNode readonly dispid 1011;
    property nextSibling: IHTMLDOMNode readonly dispid 1012;
    property attributes: IDispatch readonly dispid 1013;
    property ownerDocument: IDispatch readonly dispid 1014;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid 1015;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid 1016;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid 1017;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid 1018;
    function hasChildNodes: WordBool; dispid 1019;
    function cloneNode(fDeep: WordBool): IHTMLDOMAttribute; dispid 1020;
  end;

// *********************************************************************//
// Interface: IHTMLDOMTextNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMTextNode = interface(IDispatch)
    ['{3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_data(const p: WideString); safecall;
    function Get_data: WideString; safecall;
    function toString: WideString; safecall;
    function Get_length: Integer; safecall;
    function splitText(offset: Integer): IHTMLDOMNode; safecall;
    property data: WideString read Get_data write Set_data;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMTextNodeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMTextNodeDisp = dispinterface
    ['{3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}']
    property data: WideString dispid 1000;
    function toString: WideString; dispid 1001;
    property length: Integer readonly dispid 1002;
    function splitText(offset: Integer): IHTMLDOMNode; dispid 1003;
  end;

// *********************************************************************//
// Interface: IHTMLDOMTextNode2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F809-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMTextNode2 = interface(IDispatch)
    ['{3050F809-98B5-11CF-BB82-00AA00BDCE0B}']
    function substringData(offset: Integer; Count: Integer): WideString; safecall;
    procedure appendData(const bstrstring: WideString); safecall;
    procedure insertData(offset: Integer; const bstrstring: WideString); safecall;
    procedure deleteData(offset: Integer; Count: Integer); safecall;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMTextNode2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F809-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMTextNode2Disp = dispinterface
    ['{3050F809-98B5-11CF-BB82-00AA00BDCE0B}']
    function substringData(offset: Integer; Count: Integer): WideString; dispid 1004;
    procedure appendData(const bstrstring: WideString); dispid 1005;
    procedure insertData(offset: Integer; const bstrstring: WideString); dispid 1006;
    procedure deleteData(offset: Integer; Count: Integer); dispid 1007;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); dispid 1008;
  end;

// *********************************************************************//
// Interface: IHTMLDOMImplementation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMImplementation = interface(IDispatch)
    ['{3050F80D-98B5-11CF-BB82-00AA00BDCE0B}']
    function hasFeature(const bstrfeature: WideString; version: OleVariant): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMImplementationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMImplementationDisp = dispinterface
    ['{3050F80D-98B5-11CF-BB82-00AA00BDCE0B}']
    function hasFeature(const bstrfeature: WideString; version: OleVariant): WordBool; dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDOMAttribute
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F564-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDOMAttribute = dispinterface
    ['{3050F564-98B5-11CF-BB82-00AA00BDCE0B}']
    property nodeName: WideString readonly dispid 1000;
    property nodeValue: OleVariant dispid 1002;
    property specified: WordBool readonly dispid 1001;
    property name: WideString readonly dispid 1003;
    property value: WideString dispid 1004;
    property expando: WordBool readonly dispid 1005;
    property nodeType: Integer readonly dispid 1006;
    property parentNode: IHTMLDOMNode readonly dispid 1007;
    property childNodes: IDispatch readonly dispid 1008;
    property firstChild: IHTMLDOMNode readonly dispid 1009;
    property lastChild: IHTMLDOMNode readonly dispid 1010;
    property previousSibling: IHTMLDOMNode readonly dispid 1011;
    property nextSibling: IHTMLDOMNode readonly dispid 1012;
    property attributes: IDispatch readonly dispid 1013;
    property ownerDocument: IDispatch readonly dispid 1014;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid 1015;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid 1016;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid 1017;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid 1018;
    function hasChildNodes: WordBool; dispid 1019;
    function cloneNode(fDeep: WordBool): IHTMLDOMAttribute; dispid 1020;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDOMTextNode
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F565-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDOMTextNode = dispinterface
    ['{3050F565-98B5-11CF-BB82-00AA00BDCE0B}']
    property data: WideString dispid 1000;
    function toString: WideString; dispid 1001;
    property length: Integer readonly dispid 1002;
    function splitText(offset: Integer): IHTMLDOMNode; dispid 1003;
    function substringData(offset: Integer; Count: Integer): WideString; dispid 1004;
    procedure appendData(const bstrstring: WideString); dispid 1005;
    procedure insertData(offset: Integer; const bstrstring: WideString); dispid 1006;
    procedure deleteData(offset: Integer; Count: Integer); dispid 1007;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); dispid 1008;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDOMImplementation
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F58F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDOMImplementation = dispinterface
    ['{3050F58F-98B5-11CF-BB82-00AA00BDCE0B}']
    function hasFeature(const bstrfeature: WideString; version: OleVariant): WordBool; dispid 1000;
  end;

// *********************************************************************//
// Interface: IHTMLAttributeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAttributeCollection = interface(IDispatch)
    ['{3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    // !! API fix decl
    function item(const name: OleVariant): IDispatch; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAttributeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAttributeCollectionDisp = dispinterface
    ['{3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid - 4;
    // !! API fix decl
    function item(const name: OleVariant): IDispatch; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLAttributeCollection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAttributeCollection2 = interface(IDispatch)
    ['{3050F80A-98B5-11CF-BB82-00AA00BDCE0B}']
    function getNamedItem(const bstrName: WideString): IHTMLDOMAttribute; safecall;
    function setNamedItem(const ppNode: IHTMLDOMAttribute): IHTMLDOMAttribute; safecall;
    function removeNamedItem(const bstrName: WideString): IHTMLDOMAttribute; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAttributeCollection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAttributeCollection2Disp = dispinterface
    ['{3050F80A-98B5-11CF-BB82-00AA00BDCE0B}']
    function getNamedItem(const bstrName: WideString): IHTMLDOMAttribute; dispid 1501;
    function setNamedItem(const ppNode: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid 1502;
    function removeNamedItem(const bstrName: WideString): IHTMLDOMAttribute; dispid 1503;
  end;

// *********************************************************************//
// Interface: IHTMLDOMChildrenCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMChildrenCollection = interface(IDispatch)
    ['{3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(index: Integer): IDispatch; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMChildrenCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMChildrenCollectionDisp = dispinterface
    ['{3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid - 4;
    function item(index: Integer): IDispatch; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAttributeCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F56C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAttributeCollection = dispinterface
    ['{3050F56C-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid - 4;
    function item(var name: OleVariant): IDispatch; dispid 0;
    function getNamedItem(const bstrName: WideString): IHTMLDOMAttribute; dispid 1501;
    function setNamedItem(const ppNode: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid 1502;
    function removeNamedItem(const bstrName: WideString): IHTMLDOMAttribute; dispid 1503;
  end;

// *********************************************************************//
// DispIntf:  DispDOMChildrenCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F577-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMChildrenCollection = dispinterface
    ['{3050F577-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid - 4;
    function item(index: Integer): IDispatch; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  HTMLElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F60F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLElementEvents2 = dispinterface
    ['{3050F60F-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F33C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLElementEvents = dispinterface
    ['{3050F33C-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// Interface: IHTMLElementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F21F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection = interface(IDispatch)
    ['{3050F21F-98B5-11CF-BB82-00AA00BDCE0B}']
    function toString: WideString; safecall;
    procedure Set_length(p: Integer); safecall;
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(name: OleVariant; index: OleVariant): IDispatch; safecall;
    function tags(tagName: OleVariant): IDispatch; safecall;
    property length: Integer read Get_length write Set_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F21F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollectionDisp = dispinterface
    ['{3050F21F-98B5-11CF-BB82-00AA00BDCE0B}']
    function toString: WideString; dispid 1501;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid - 4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
  end;

// *********************************************************************//
// Interface: IHTMLElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F434-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement2 = interface(IDispatch)
    ['{3050F434-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_scopeName: WideString; safecall;
    procedure setCapture(containerCapture: WordBool); safecall;
    procedure releaseCapture; safecall;
    procedure Set_onlosecapture(p: OleVariant); safecall;
    function Get_onlosecapture: OleVariant; safecall;
    function componentFromPoint(x: Integer; y: Integer): WideString; safecall;
    procedure doScroll(component: OleVariant); safecall;
    procedure Set_onscroll(p: OleVariant); safecall;
    function Get_onscroll: OleVariant; safecall;
    procedure Set_ondrag(p: OleVariant); safecall;
    function Get_ondrag: OleVariant; safecall;
    procedure Set_ondragend(p: OleVariant); safecall;
    function Get_ondragend: OleVariant; safecall;
    procedure Set_ondragenter(p: OleVariant); safecall;
    function Get_ondragenter: OleVariant; safecall;
    procedure Set_ondragover(p: OleVariant); safecall;
    function Get_ondragover: OleVariant; safecall;
    procedure Set_ondragleave(p: OleVariant); safecall;
    function Get_ondragleave: OleVariant; safecall;
    procedure Set_ondrop(p: OleVariant); safecall;
    function Get_ondrop: OleVariant; safecall;
    procedure Set_onbeforecut(p: OleVariant); safecall;
    function Get_onbeforecut: OleVariant; safecall;
    procedure Set_oncut(p: OleVariant); safecall;
    function Get_oncut: OleVariant; safecall;
    procedure Set_onbeforecopy(p: OleVariant); safecall;
    function Get_onbeforecopy: OleVariant; safecall;
    procedure Set_oncopy(p: OleVariant); safecall;
    function Get_oncopy: OleVariant; safecall;
    procedure Set_onbeforepaste(p: OleVariant); safecall;
    function Get_onbeforepaste: OleVariant; safecall;
    procedure Set_onpaste(p: OleVariant); safecall;
    function Get_onpaste: OleVariant; safecall;
    function Get_currentStyle: IHTMLCurrentStyle; safecall;
    procedure Set_onpropertychange(p: OleVariant); safecall;
    function Get_onpropertychange: OleVariant; safecall;
    function getClientRects: IHTMLRectCollection; safecall;
    function getBoundingClientRect: IHTMLRect; safecall;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); safecall;
    function getExpression(const propname: WideString): OleVariant; safecall;
    function removeExpression(const propname: WideString): WordBool; safecall;
    procedure Set_tabIndex(p: Smallint); safecall;
    function Get_tabIndex: Smallint; safecall;
    procedure focus; safecall;
    procedure Set_accessKey(const p: WideString); safecall;
    function Get_accessKey: WideString; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function Get_onblur: OleVariant; safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function Get_onfocus: OleVariant; safecall;
    procedure Set_onresize(p: OleVariant); safecall;
    function Get_onresize: OleVariant; safecall;
    procedure blur; safecall;
    procedure addFilter(const pUnk: IUnknown); safecall;
    procedure removeFilter(const pUnk: IUnknown); safecall;
    function Get_clientHeight: Integer; safecall;
    function Get_clientWidth: Integer; safecall;
    function Get_clientTop: Integer; safecall;
    function Get_clientLeft: Integer; safecall;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; safecall;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); safecall;
    function Get_readyState: OleVariant; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onrowsdelete(p: OleVariant); safecall;
    function Get_onrowsdelete: OleVariant; safecall;
    procedure Set_onrowsinserted(p: OleVariant); safecall;
    function Get_onrowsinserted: OleVariant; safecall;
    procedure Set_oncellchange(p: OleVariant); safecall;
    function Get_oncellchange: OleVariant; safecall;
    procedure Set_dir(const p: WideString); safecall;
    function Get_dir: WideString; safecall;
    function createControlRange: IDispatch; safecall;
    function Get_scrollHeight: Integer; safecall;
    function Get_scrollWidth: Integer; safecall;
    procedure Set_scrollTop(p: Integer); safecall;
    function Get_scrollTop: Integer; safecall;
    procedure Set_scrollLeft(p: Integer); safecall;
    function Get_scrollLeft: Integer; safecall;
    procedure clearAttributes; safecall;
    procedure mergeAttributes(const mergeThis: IHTMLElement); safecall;
    procedure Set_oncontextmenu(p: OleVariant); safecall;
    function Get_oncontextmenu: OleVariant; safecall;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; safecall;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; safecall;
    function getAdjacentText(const where: WideString): WideString; safecall;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; safecall;
    function Get_canHaveChildren: WordBool; safecall;
    function addBehavior(const bstrUrl: WideString; const pvarFactory: OleVariant): Integer; safecall;
    function removeBehavior(cookie: Integer): WordBool; safecall;
    function Get_runtimeStyle: IHTMLStyle; safecall;
    function Get_behaviorUrns: IDispatch; safecall;
    procedure Set_tagUrn(const p: WideString); safecall;
    function Get_tagUrn: WideString; safecall;
    procedure Set_onbeforeeditfocus(p: OleVariant); safecall;
    function Get_onbeforeeditfocus: OleVariant; safecall;
    function Get_readyStateValue: Integer; safecall;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; safecall;
    property scopeName: WideString read Get_scopeName;
    property onlosecapture: OleVariant read Get_onlosecapture write Set_onlosecapture;
    property onscroll: OleVariant read Get_onscroll write Set_onscroll;
    property ondrag: OleVariant read Get_ondrag write Set_ondrag;
    property ondragend: OleVariant read Get_ondragend write Set_ondragend;
    property ondragenter: OleVariant read Get_ondragenter write Set_ondragenter;
    property ondragover: OleVariant read Get_ondragover write Set_ondragover;
    property ondragleave: OleVariant read Get_ondragleave write Set_ondragleave;
    property ondrop: OleVariant read Get_ondrop write Set_ondrop;
    property onbeforecut: OleVariant read Get_onbeforecut write Set_onbeforecut;
    property oncut: OleVariant read Get_oncut write Set_oncut;
    property onbeforecopy: OleVariant read Get_onbeforecopy write Set_onbeforecopy;
    property oncopy: OleVariant read Get_oncopy write Set_oncopy;
    property onbeforepaste: OleVariant read Get_onbeforepaste write Set_onbeforepaste;
    property onpaste: OleVariant read Get_onpaste write Set_onpaste;
    property currentStyle: IHTMLCurrentStyle read Get_currentStyle;
    property onpropertychange: OleVariant read Get_onpropertychange write Set_onpropertychange;
    property tabIndex: Smallint read Get_tabIndex write Set_tabIndex;
    property accessKey: WideString read Get_accessKey write Set_accessKey;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property onresize: OleVariant read Get_onresize write Set_onresize;
    property clientHeight: Integer read Get_clientHeight;
    property clientWidth: Integer read Get_clientWidth;
    property clientTop: Integer read Get_clientTop;
    property clientLeft: Integer read Get_clientLeft;
    property readyState: OleVariant read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onrowsdelete: OleVariant read Get_onrowsdelete write Set_onrowsdelete;
    property onrowsinserted: OleVariant read Get_onrowsinserted write Set_onrowsinserted;
    property oncellchange: OleVariant read Get_oncellchange write Set_oncellchange;
    property dir: WideString read Get_dir write Set_dir;
    property scrollHeight: Integer read Get_scrollHeight;
    property scrollWidth: Integer read Get_scrollWidth;
    property scrollTop: Integer read Get_scrollTop write Set_scrollTop;
    property scrollLeft: Integer read Get_scrollLeft write Set_scrollLeft;
    property oncontextmenu: OleVariant read Get_oncontextmenu write Set_oncontextmenu;
    property canHaveChildren: WordBool read Get_canHaveChildren;
    property runtimeStyle: IHTMLStyle read Get_runtimeStyle;
    property behaviorUrns: IDispatch read Get_behaviorUrns;
    property tagUrn: WideString read Get_tagUrn write Set_tagUrn;
    property onbeforeeditfocus: OleVariant read Get_onbeforeeditfocus write Set_onbeforeeditfocus;
    property readyStateValue: Integer read Get_readyStateValue;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F434-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement2Disp = dispinterface
    ['{3050F434-98B5-11CF-BB82-00AA00BDCE0B}']
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid - 2147417049;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
  end;

// *********************************************************************//
// Interface: IHTMLElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F673-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement3 = interface(IDispatch)
    ['{3050F673-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); safecall;
    function Get_isMultiLine: WordBool; safecall;
    function Get_canHaveHTML: WordBool; safecall;
    procedure Set_onlayoutcomplete(p: OleVariant); safecall;
    function Get_onlayoutcomplete: OleVariant; safecall;
    procedure Set_onpage(p: OleVariant); safecall;
    function Get_onpage: OleVariant; safecall;
    procedure Set_inflateBlock(p: WordBool); safecall;
    function Get_inflateBlock: WordBool; safecall;
    procedure Set_onbeforedeactivate(p: OleVariant); safecall;
    function Get_onbeforedeactivate: OleVariant; safecall;
    procedure setActive; safecall;
    procedure Set_contentEditable(const p: WideString); safecall;
    function Get_contentEditable: WideString; safecall;
    function Get_isContentEditable: WordBool; safecall;
    procedure Set_hideFocus(p: WordBool); safecall;
    function Get_hideFocus: WordBool; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_isDisabled: WordBool; safecall;
    procedure Set_onmove(p: OleVariant); safecall;
    function Get_onmove: OleVariant; safecall;
    procedure Set_oncontrolselect(p: OleVariant); safecall;
    function Get_oncontrolselect: OleVariant; safecall;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; safecall;
    procedure Set_onresizestart(p: OleVariant); safecall;
    function Get_onresizestart: OleVariant; safecall;
    procedure Set_onresizeend(p: OleVariant); safecall;
    function Get_onresizeend: OleVariant; safecall;
    procedure Set_onmovestart(p: OleVariant); safecall;
    function Get_onmovestart: OleVariant; safecall;
    procedure Set_onmoveend(p: OleVariant); safecall;
    function Get_onmoveend: OleVariant; safecall;
    procedure Set_onmouseenter(p: OleVariant); safecall;
    function Get_onmouseenter: OleVariant; safecall;
    procedure Set_onmouseleave(p: OleVariant); safecall;
    function Get_onmouseleave: OleVariant; safecall;
    procedure Set_onactivate(p: OleVariant); safecall;
    function Get_onactivate: OleVariant; safecall;
    procedure Set_ondeactivate(p: OleVariant); safecall;
    function Get_ondeactivate: OleVariant; safecall;
    function dragDrop: WordBool; safecall;
    function Get_glyphMode: Integer; safecall;
    property isMultiLine: WordBool read Get_isMultiLine;
    property canHaveHTML: WordBool read Get_canHaveHTML;
    property onlayoutcomplete: OleVariant read Get_onlayoutcomplete write Set_onlayoutcomplete;
    property onpage: OleVariant read Get_onpage write Set_onpage;
    property inflateBlock: WordBool read Get_inflateBlock write Set_inflateBlock;
    property onbeforedeactivate: OleVariant read Get_onbeforedeactivate write Set_onbeforedeactivate;
    property contentEditable: WideString read Get_contentEditable write Set_contentEditable;
    property isContentEditable: WordBool read Get_isContentEditable;
    property hideFocus: WordBool read Get_hideFocus write Set_hideFocus;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property isDisabled: WordBool read Get_isDisabled;
    property onmove: OleVariant read Get_onmove write Set_onmove;
    property oncontrolselect: OleVariant read Get_oncontrolselect write Set_oncontrolselect;
    property onresizestart: OleVariant read Get_onresizestart write Set_onresizestart;
    property onresizeend: OleVariant read Get_onresizeend write Set_onresizeend;
    property onmovestart: OleVariant read Get_onmovestart write Set_onmovestart;
    property onmoveend: OleVariant read Get_onmoveend write Set_onmoveend;
    property onmouseenter: OleVariant read Get_onmouseenter write Set_onmouseenter;
    property onmouseleave: OleVariant read Get_onmouseleave write Set_onmouseleave;
    property onactivate: OleVariant read Get_onactivate write Set_onactivate;
    property ondeactivate: OleVariant read Get_ondeactivate write Set_ondeactivate;
    property glyphMode: Integer read Get_glyphMode;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F673-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement3Disp = dispinterface
    ['{3050F673-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
  end;

// *********************************************************************//
// Interface: IHTMLElement4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement4 = interface(IDispatch)
    ['{3050F80F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onmousewheel(p: OleVariant); safecall;
    function Get_onmousewheel: OleVariant; safecall;
    procedure normalize; safecall;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; safecall;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; safecall;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; safecall;
    procedure Set_onbeforeactivate(p: OleVariant); safecall;
    function Get_onbeforeactivate: OleVariant; safecall;
    procedure Set_onfocusin(p: OleVariant); safecall;
    function Get_onfocusin: OleVariant; safecall;
    procedure Set_onfocusout(p: OleVariant); safecall;
    function Get_onfocusout: OleVariant; safecall;
    property onmousewheel: OleVariant read Get_onmousewheel write Set_onmousewheel;
    property onbeforeactivate: OleVariant read Get_onbeforeactivate write Set_onbeforeactivate;
    property onfocusin: OleVariant read Get_onfocusin write Set_onfocusin;
    property onfocusout: OleVariant read Get_onfocusout write Set_onfocusout;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElement4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement4Disp = dispinterface
    ['{3050F80F-98B5-11CF-BB82-00AA00BDCE0B}']
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
  end;

// *********************************************************************//
// Interface: IHTMLElementRender
// Flags:     (0)
// GUID:      {3050F669-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementRender = interface(IUnknown)
    ['{3050F669-98B5-11CF-BB82-00AA00BDCE0B}']
    // !! API fix decl
    function DrawToDC(hdc: HDC): HRESULT; stdcall;
    // !! API fix decl
    function SetDocumentPrinter(const bstrPrinterName: WideString; hdc: HDC): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLUniqueName
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUniqueName = interface(IDispatch)
    ['{3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_uniqueNumber: Integer; safecall;
    function Get_uniqueID: WideString; safecall;
    property uniqueNumber: Integer read Get_uniqueNumber;
    property uniqueID: WideString read Get_uniqueID;
  end;

// *********************************************************************//
// DispIntf:  IHTMLUniqueNameDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUniqueNameDisp = dispinterface
    ['{3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}']
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
  end;

// *********************************************************************//
// Interface: IHTMLDatabinding
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDatabinding = interface(IDispatch)
    ['{3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_dataFld(const p: WideString); safecall;
    function Get_dataFld: WideString; safecall;
    procedure Set_dataSrc(const p: WideString); safecall;
    function Get_dataSrc: WideString; safecall;
    procedure Set_dataFormatAs(const p: WideString); safecall;
    function Get_dataFormatAs: WideString; safecall;
    property dataFld: WideString read Get_dataFld write Set_dataFld;
    property dataSrc: WideString read Get_dataSrc write Set_dataSrc;
    property dataFormatAs: WideString read Get_dataFormatAs write Set_dataFormatAs;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDatabindingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDatabindingDisp = dispinterface
    ['{3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}']
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
  end;

// *********************************************************************//
// Interface: IHTMLDocument
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {626FC520-A41E-11CF-A731-00A0C9082637}
// *********************************************************************//
  IHTMLDocument = interface(IDispatch)
    ['{626FC520-A41E-11CF-A731-00A0C9082637}']
    function Get_Script: IDispatch; safecall;
    property Script: IDispatch read Get_Script;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocumentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {626FC520-A41E-11CF-A731-00A0C9082637}
// *********************************************************************//
  IHTMLDocumentDisp = dispinterface
    ['{626FC520-A41E-11CF-A731-00A0C9082637}']
    property Script: IDispatch readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLElementDefaults
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6C9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementDefaults = interface(IDispatch)
    ['{3050F6C9-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_style: IHTMLStyle; safecall;
    procedure Set_tabStop(p: WordBool); safecall;
    function Get_tabStop: WordBool; safecall;
    procedure Set_viewInheritStyle(p: WordBool); safecall;
    function Get_viewInheritStyle: WordBool; safecall;
    procedure Set_viewMasterTab(p: WordBool); safecall;
    function Get_viewMasterTab: WordBool; safecall;
    procedure Set_scrollSegmentX(p: Integer); safecall;
    function Get_scrollSegmentX: Integer; safecall;
    procedure Set_scrollSegmentY(p: Integer); safecall;
    function Get_scrollSegmentY: Integer; safecall;
    procedure Set_isMultiLine(p: WordBool); safecall;
    function Get_isMultiLine: WordBool; safecall;
    procedure Set_contentEditable(const p: WideString); safecall;
    function Get_contentEditable: WideString; safecall;
    procedure Set_canHaveHTML(p: WordBool); safecall;
    function Get_canHaveHTML: WordBool; safecall;
    procedure _Set_viewLink(const p: IHTMLDocument); safecall;
    function Get_viewLink: IHTMLDocument; safecall;
    procedure Set_frozen(p: WordBool); safecall;
    function Get_frozen: WordBool; safecall;
    property style: IHTMLStyle read Get_style;
    property tabStop: WordBool read Get_tabStop write Set_tabStop;
    property viewInheritStyle: WordBool read Get_viewInheritStyle write Set_viewInheritStyle;
    property viewMasterTab: WordBool read Get_viewMasterTab write Set_viewMasterTab;
    property scrollSegmentX: Integer read Get_scrollSegmentX write Set_scrollSegmentX;
    property scrollSegmentY: Integer read Get_scrollSegmentY write Set_scrollSegmentY;
    property isMultiLine: WordBool read Get_isMultiLine write Set_isMultiLine;
    property contentEditable: WideString read Get_contentEditable write Set_contentEditable;
    property canHaveHTML: WordBool read Get_canHaveHTML write Set_canHaveHTML;
    property viewLink: IHTMLDocument read Get_viewLink write _Set_viewLink;
    property frozen: WordBool read Get_frozen write Set_frozen;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementDefaultsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6C9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementDefaultsDisp = dispinterface
    ['{3050F6C9-98B5-11CF-BB82-00AA00BDCE0B}']
    property style: IHTMLStyle readonly dispid 1001;
    property tabStop: WordBool dispid 1002;
    property viewInheritStyle: WordBool dispid - 2147412913;
    property viewMasterTab: WordBool dispid 1006;
    property scrollSegmentX: Integer dispid 1003;
    property scrollSegmentY: Integer dispid 1004;
    property isMultiLine: WordBool dispid 1008;
    property contentEditable: WideString dispid - 2147412950;
    property canHaveHTML: WordBool dispid 1009;
    property viewLink: IHTMLDocument dispid 1011;
    property frozen: WordBool dispid - 2147412914;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDefaults
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F58C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDefaults = dispinterface
    ['{3050F58C-98B5-11CF-BB82-00AA00BDCE0B}']
    property style: IHTMLStyle readonly dispid 1001;
    property tabStop: WordBool dispid 1002;
    property viewInheritStyle: WordBool dispid - 2147412913;
    property viewMasterTab: WordBool dispid 1006;
    property scrollSegmentX: Integer dispid 1003;
    property scrollSegmentY: Integer dispid 1004;
    property isMultiLine: WordBool dispid 1008;
    property contentEditable: WideString dispid - 2147412950;
    property canHaveHTML: WordBool dispid 1009;
    property viewLink: IHTMLDocument dispid 1011;
    property frozen: WordBool dispid - 2147412914;
  end;

// *********************************************************************//
// Interface: IHTCDefaultDispatch
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCDefaultDispatch = interface(IDispatch)
    ['{3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_element: IHTMLElement; safecall;
    function CreateEventObject: IHTMLEventObj; safecall;
    function Get_defaults: IDispatch; safecall;
    function Get_document: IDispatch; safecall;
    property element: IHTMLElement read Get_element;
    property defaults: IDispatch read Get_defaults;
    property document: IDispatch read Get_document;
  end;

// *********************************************************************//
// DispIntf:  IHTCDefaultDispatchDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCDefaultDispatchDisp = dispinterface
    ['{3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}']
    property element: IHTMLElement readonly dispid - 2147412969;
    function CreateEventObject: IHTMLEventObj; dispid - 2147412968;
    property defaults: IDispatch readonly dispid - 2147412947;
    property document: IDispatch readonly dispid - 2147412970;
  end;

// *********************************************************************//
// Interface: IHTCPropertyBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCPropertyBehavior = interface(IDispatch)
    ['{3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fireChange; safecall;
    procedure Set_value(p: OleVariant); safecall;
    function Get_value: OleVariant; safecall;
    property value: OleVariant read Get_value write Set_value;
  end;

// *********************************************************************//
// DispIntf:  IHTCPropertyBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCPropertyBehaviorDisp = dispinterface
    ['{3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fireChange; dispid - 2147417612;
    property value: OleVariant dispid - 2147412971;
  end;

// *********************************************************************//
// Interface: IHTCMethodBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F631-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCMethodBehavior = interface(IDispatch)
    ['{3050F631-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTCMethodBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F631-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCMethodBehaviorDisp = dispinterface
    ['{3050F631-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: IHTCEventBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCEventBehavior = interface(IDispatch)
    ['{3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fire(const pVar: IHTMLEventObj); safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTCEventBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCEventBehaviorDisp = dispinterface
    ['{3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fire(const pVar: IHTMLEventObj); dispid - 2147417612;
  end;

// *********************************************************************//
// Interface: IHTCAttachBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCAttachBehavior = interface(IDispatch)
    ['{3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure FireEvent(const evt: IDispatch); safecall;
    procedure detachEvent; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTCAttachBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCAttachBehaviorDisp = dispinterface
    ['{3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure FireEvent(const evt: IDispatch); dispid 0;
    procedure detachEvent; dispid - 2147417612;
  end;

// *********************************************************************//
// Interface: IHTCAttachBehavior2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCAttachBehavior2 = interface(IDispatch)
    ['{3050F7EB-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure FireEvent(evt: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTCAttachBehavior2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCAttachBehavior2Disp = dispinterface
    ['{3050F7EB-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure FireEvent(evt: OleVariant); dispid 0;
  end;

// *********************************************************************//
// Interface: IHTCDescBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCDescBehavior = interface(IDispatch)
    ['{3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_urn: WideString; safecall;
    function Get_name: WideString; safecall;
    property urn: WideString read Get_urn;
    property name: WideString read Get_name;
  end;

// *********************************************************************//
// DispIntf:  IHTCDescBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCDescBehaviorDisp = dispinterface
    ['{3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}']
    property urn: WideString readonly dispid - 2147417612;
    property name: WideString readonly dispid - 2147417611;
  end;

// *********************************************************************//
// DispIntf:  DispHTCDefaultDispatch
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F573-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCDefaultDispatch = dispinterface
    ['{3050F573-98B5-11CF-BB82-00AA00BDCE0B}']
    property element: IHTMLElement readonly dispid - 2147412969;
    function CreateEventObject: IHTMLEventObj; dispid - 2147412968;
    property defaults: IDispatch readonly dispid - 2147412947;
    property document: IDispatch readonly dispid - 2147412970;
  end;

// *********************************************************************//
// DispIntf:  DispHTCPropertyBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F57F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCPropertyBehavior = dispinterface
    ['{3050F57F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fireChange; dispid - 2147417612;
    property value: OleVariant dispid - 2147412971;
  end;

// *********************************************************************//
// DispIntf:  DispHTCMethodBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F587-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCMethodBehavior = dispinterface
    ['{3050F587-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTCEventBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F574-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCEventBehavior = dispinterface
    ['{3050F574-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fire(const pVar: IHTMLEventObj); dispid - 2147417612;
  end;

// *********************************************************************//
// DispIntf:  DispHTCAttachBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F583-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCAttachBehavior = dispinterface
    ['{3050F583-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure FireEvent(evt: OleVariant); dispid 0;
    procedure detachEvent; dispid - 2147417612;
  end;

// *********************************************************************//
// DispIntf:  DispHTCDescBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F57E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCDescBehavior = dispinterface
    ['{3050F57E-98B5-11CF-BB82-00AA00BDCE0B}']
    property urn: WideString readonly dispid - 2147417612;
    property name: WideString readonly dispid - 2147417611;
  end;

// *********************************************************************//
// Interface: IHTMLUrnCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUrnCollection = interface(IDispatch)
    ['{3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function item(index: Integer): WideString; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLUrnCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUrnCollectionDisp = dispinterface
    ['{3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    function item(index: Integer): WideString; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLGenericElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLGenericElement = interface(IDispatch)
    ['{3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_recordset: IDispatch; safecall;
    function namedRecordset(const dataMember: WideString; var hierarchy: OleVariant): IDispatch; safecall;
    property recordset: IDispatch read Get_recordset;
  end;

// *********************************************************************//
// DispIntf:  IHTMLGenericElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLGenericElementDisp = dispinterface
    ['{3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}']
    property recordset: IDispatch readonly dispid 1001;
    function namedRecordset(const dataMember: WideString; var hierarchy: OleVariant): IDispatch; dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLGenericElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F563-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLGenericElement = dispinterface
    ['{3050F563-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property recordset: IDispatch readonly dispid 1001;
    function namedRecordset(const dataMember: WideString; var hierarchy: OleVariant): IDispatch; dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetRule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F357-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRule = interface(IDispatch)
    ['{3050F357-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_selectorText(const p: WideString); safecall;
    function Get_selectorText: WideString; safecall;
    function Get_style: IHTMLRuleStyle; safecall;
    function Get_readOnly: WordBool; safecall;
    property selectorText: WideString read Get_selectorText write Set_selectorText;
    property style: IHTMLRuleStyle read Get_style;
    property readOnly: WordBool read Get_readOnly;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetRuleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F357-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRuleDisp = dispinterface
    ['{3050F357-98B5-11CF-BB82-00AA00BDCE0B}']
    property selectorText: WideString dispid 1001;
    property style: IHTMLRuleStyle readonly dispid - 2147418038;
    property readOnly: WordBool readonly dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetRulesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRulesCollection = interface(IDispatch)
    ['{3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function item(index: Integer): IHTMLStyleSheetRule; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetRulesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRulesCollectionDisp = dispinterface
    ['{3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    function item(index: Integer): IHTMLStyleSheetRule; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetPage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetPage = interface(IDispatch)
    ['{3050F7EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_selector: WideString; safecall;
    function Get_pseudoClass: WideString; safecall;
    property selector: WideString read Get_selector;
    property pseudoClass: WideString read Get_pseudoClass;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetPageDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetPageDisp = dispinterface
    ['{3050F7EE-98B5-11CF-BB82-00AA00BDCE0B}']
    property selector: WideString readonly dispid 1001;
    property pseudoClass: WideString readonly dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetPagesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7F0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetPagesCollection = interface(IDispatch)
    ['{3050F7F0-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function item(index: Integer): IHTMLStyleSheetPage; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetPagesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7F0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetPagesCollectionDisp = dispinterface
    ['{3050F7F0-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    function item(index: Integer): IHTMLStyleSheetPage; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetsCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F37E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetsCollection = interface(IDispatch)
    ['{3050F37E-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    // !! API fix decl
    function item(const pvarIndex: OleVariant): OleVariant; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetsCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F37E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetsCollectionDisp = dispinterface
    ['{3050F37E-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    property _newEnum: IUnknown readonly dispid - 4;
    // !! API fix decl
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheet
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheet = interface(IDispatch)
    ['{3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_title(const p: WideString); safecall;
    function Get_title: WideString; safecall;
    function Get_parentStyleSheet: IHTMLStyleSheet; safecall;
    function Get_owningElement: IHTMLElement; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_readOnly: WordBool; safecall;
    function Get_imports: IHTMLStyleSheetsCollection; safecall;
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    function Get_type_: WideString; safecall;
    function Get_id: WideString; safecall;
    function addImport(const bstrUrl: WideString; lIndex: Integer): Integer; safecall;
    function addRule(const bstrSelector: WideString; const bstrStyle: WideString; lIndex: Integer): Integer; safecall;
    procedure removeImport(lIndex: Integer); safecall;
    procedure removeRule(lIndex: Integer); safecall;
    procedure Set_media(const p: WideString); safecall;
    function Get_media: WideString; safecall;
    procedure Set_cssText(const p: WideString); safecall;
    function Get_cssText: WideString; safecall;
    function Get_rules: IHTMLStyleSheetRulesCollection; safecall;
    property title: WideString read Get_title write Set_title;
    property parentStyleSheet: IHTMLStyleSheet read Get_parentStyleSheet;
    property owningElement: IHTMLElement read Get_owningElement;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property readOnly: WordBool read Get_readOnly;
    property imports: IHTMLStyleSheetsCollection read Get_imports;
    property href: WideString read Get_href write Set_href;
    property type_: WideString read Get_type_;
    property id: WideString read Get_id;
    property media: WideString read Get_media write Set_media;
    property cssText: WideString read Get_cssText write Set_cssText;
    property rules: IHTMLStyleSheetRulesCollection read Get_rules;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetDisp = dispinterface
    ['{3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}']
    property title: WideString dispid 1001;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1002;
    property owningElement: IHTMLElement readonly dispid 1003;
    property disabled: WordBool dispid - 2147418036;
    property readOnly: WordBool readonly dispid 1004;
    property imports: IHTMLStyleSheetsCollection readonly dispid 1005;
    property href: WideString dispid 1006;
    property type_: WideString readonly dispid 1007;
    property id: WideString readonly dispid 1008;
    function addImport(const bstrUrl: WideString; lIndex: Integer): Integer; dispid 1009;
    function addRule(const bstrSelector: WideString; const bstrStyle: WideString; lIndex: Integer): Integer; dispid 1010;
    procedure removeImport(lIndex: Integer); dispid 1011;
    procedure removeRule(lIndex: Integer); dispid 1012;
    property media: WideString dispid 1013;
    property cssText: WideString dispid 1014;
    property rules: IHTMLStyleSheetRulesCollection readonly dispid 1015;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheet2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3D1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheet2 = interface(IDispatch)
    ['{3050F3D1-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_pages: IHTMLStyleSheetPagesCollection; safecall;
    function addPageRule(const bstrSelector: WideString; const bstrStyle: WideString;
      lIndex: Integer): Integer; safecall;
    property pages: IHTMLStyleSheetPagesCollection read Get_pages;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheet2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3D1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheet2Disp = dispinterface
    ['{3050F3D1-98B5-11CF-BB82-00AA00BDCE0B}']
    property pages: IHTMLStyleSheetPagesCollection readonly dispid 1016;
    function addPageRule(const bstrSelector: WideString; const bstrStyle: WideString;
      lIndex: Integer): Integer; dispid 1017;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyleSheet
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F58D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyleSheet = dispinterface
    ['{3050F58D-98B5-11CF-BB82-00AA00BDCE0B}']
    property title: WideString dispid 1001;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1002;
    property owningElement: IHTMLElement readonly dispid 1003;
    property disabled: WordBool dispid - 2147418036;
    property readOnly: WordBool readonly dispid 1004;
    property imports: IHTMLStyleSheetsCollection readonly dispid 1005;
    property href: WideString dispid 1006;
    property type_: WideString readonly dispid 1007;
    property id: WideString readonly dispid 1008;
    function addImport(const bstrUrl: WideString; lIndex: Integer): Integer; dispid 1009;
    function addRule(const bstrSelector: WideString; const bstrStyle: WideString; lIndex: Integer): Integer; dispid 1010;
    procedure removeImport(lIndex: Integer); dispid 1011;
    procedure removeRule(lIndex: Integer); dispid 1012;
    property media: WideString dispid 1013;
    property cssText: WideString dispid 1014;
    property rules: IHTMLStyleSheetRulesCollection readonly dispid 1015;
    property pages: IHTMLStyleSheetPagesCollection readonly dispid 1016;
    function addPageRule(const bstrSelector: WideString; const bstrStyle: WideString;
      lIndex: Integer): Integer; dispid 1017;
  end;

// *********************************************************************//
// DispIntf:  HTMLLinkElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLLinkElementEvents2 = dispinterface
    ['{3050F61D-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  HTMLLinkElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3CC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLLinkElementEvents = dispinterface
    ['{3050F3CC-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLLinkElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F205-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement = interface(IDispatch)
    ['{3050F205-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    procedure Set_rel(const p: WideString); safecall;
    function Get_rel: WideString; safecall;
    procedure Set_rev(const p: WideString); safecall;
    function Get_rev: WideString; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    function Get_readyState: WideString; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    function Get_styleSheet: IHTMLStyleSheet; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    procedure Set_media(const p: WideString); safecall;
    function Get_media: WideString; safecall;
    property href: WideString read Get_href write Set_href;
    property rel: WideString read Get_rel write Set_rel;
    property rev: WideString read Get_rev write Set_rev;
    property type_: WideString read Get_type_ write Set_type_;
    property readyState: WideString read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property styleSheet: IHTMLStyleSheet read Get_styleSheet;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property media: WideString read Get_media write Set_media;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLinkElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F205-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElementDisp = dispinterface
    ['{3050F205-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: WideString dispid 1005;
    property rel: WideString dispid 1006;
    property rev: WideString dispid 1007;
    property type_: WideString dispid 1008;
    property readyState: WideString readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onload: OleVariant dispid - 2147412080;
    property onerror: OleVariant dispid - 2147412083;
    property styleSheet: IHTMLStyleSheet readonly dispid 1014;
    property disabled: WordBool dispid - 2147418036;
    property media: WideString dispid 1016;
  end;

// *********************************************************************//
// Interface: IHTMLLinkElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement2 = interface(IDispatch)
    ['{3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_target(const p: WideString); safecall;
    function Get_target: WideString; safecall;
    property target: WideString read Get_target write Set_target;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLinkElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement2Disp = dispinterface
    ['{3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}']
    property target: WideString dispid 1017;
  end;

// *********************************************************************//
// Interface: IHTMLLinkElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement3 = interface(IDispatch)
    ['{3050F81E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_charset(const p: WideString); safecall;
    function Get_charset: WideString; safecall;
    procedure Set_hreflang(const p: WideString); safecall;
    function Get_hreflang: WideString; safecall;
    property charset: WideString read Get_charset write Set_charset;
    property hreflang: WideString read Get_hreflang write Set_hreflang;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLinkElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement3Disp = dispinterface
    ['{3050F81E-98B5-11CF-BB82-00AA00BDCE0B}']
    property charset: WideString dispid 1018;
    property hreflang: WideString dispid 1019;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLLinkElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F524-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLLinkElement = dispinterface
    ['{3050F524-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property href: WideString dispid 1005;
    property rel: WideString dispid 1006;
    property rev: WideString dispid 1007;
    property type_: WideString dispid 1008;
    property onload: OleVariant dispid - 2147412080;
    property onerror: OleVariant dispid - 2147412083;
    property styleSheet: IHTMLStyleSheet readonly dispid 1014;
    property media: WideString dispid 1016;
    property target: WideString dispid 1017;
    property charset: WideString dispid 1018;
    property hreflang: WideString dispid 1019;
  end;

// *********************************************************************//
// Interface: IHTMLTxtRange
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F220-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTxtRange = interface(IDispatch)
    ['{3050F220-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_htmlText: WideString; safecall;
    procedure Set_text(const p: WideString); safecall;
    function Get_text: WideString; safecall;
    function parentElement: IHTMLElement; safecall;
    function duplicate: IHTMLTxtRange; safecall;
    function inRange(const range: IHTMLTxtRange): WordBool; safecall;
    function isEqual(const range: IHTMLTxtRange): WordBool; safecall;
    procedure scrollIntoView(fStart: WordBool); safecall;
    procedure collapse(Start: WordBool); safecall;
    function expand(const Unit_: WideString): WordBool; safecall;
    function move(const Unit_: WideString; Count: Integer): Integer; safecall;
    function moveStart(const Unit_: WideString; Count: Integer): Integer; safecall;
    function moveEnd(const Unit_: WideString; Count: Integer): Integer; safecall;
    procedure select; safecall;
    procedure pasteHTML(const html: WideString); safecall;
    procedure moveToElementText(const element: IHTMLElement); safecall;
    procedure setEndPoint(const how: WideString; const SourceRange: IHTMLTxtRange); safecall;
    function compareEndPoints(const how: WideString; const SourceRange: IHTMLTxtRange): Integer; safecall;
    function findText(const String_: WideString; Count: Integer; Flags: Integer): WordBool; safecall;
    procedure moveToPoint(x: Integer; y: Integer); safecall;
    function getBookmark: WideString; safecall;
    function moveToBookmark(const Bookmark: WideString): WordBool; safecall;
    function queryCommandSupported(const cmdID: WideString): WordBool; safecall;
    function queryCommandEnabled(const cmdID: WideString): WordBool; safecall;
    function queryCommandState(const cmdID: WideString): WordBool; safecall;
    function queryCommandIndeterm(const cmdID: WideString): WordBool; safecall;
    function queryCommandText(const cmdID: WideString): WideString; safecall;
    function queryCommandValue(const cmdID: WideString): OleVariant; safecall;
    function execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; safecall;
    function execCommandShowHelp(const cmdID: WideString): WordBool; safecall;
    property htmlText: WideString read Get_htmlText;
    property text: WideString read Get_text write Set_text;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTxtRangeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F220-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTxtRangeDisp = dispinterface
    ['{3050F220-98B5-11CF-BB82-00AA00BDCE0B}']
    property htmlText: WideString readonly dispid 1003;
    property text: WideString dispid 1004;
    function parentElement: IHTMLElement; dispid 1006;
    function duplicate: IHTMLTxtRange; dispid 1008;
    function inRange(const range: IHTMLTxtRange): WordBool; dispid 1010;
    function isEqual(const range: IHTMLTxtRange): WordBool; dispid 1011;
    procedure scrollIntoView(fStart: WordBool); dispid 1012;
    procedure collapse(Start: WordBool); dispid 1013;
    function expand(const Unit_: WideString): WordBool; dispid 1014;
    function move(const Unit_: WideString; Count: Integer): Integer; dispid 1015;
    function moveStart(const Unit_: WideString; Count: Integer): Integer; dispid 1016;
    function moveEnd(const Unit_: WideString; Count: Integer): Integer; dispid 1017;
    procedure select; dispid 1024;
    procedure pasteHTML(const html: WideString); dispid 1026;
    procedure moveToElementText(const element: IHTMLElement); dispid 1001;
    procedure setEndPoint(const how: WideString; const SourceRange: IHTMLTxtRange); dispid 1025;
    function compareEndPoints(const how: WideString; const SourceRange: IHTMLTxtRange): Integer; dispid 1018;
    function findText(const String_: WideString; Count: Integer; Flags: Integer): WordBool; dispid 1019;
    procedure moveToPoint(x: Integer; y: Integer); dispid 1020;
    function getBookmark: WideString; dispid 1021;
    function moveToBookmark(const Bookmark: WideString): WordBool; dispid 1009;
    function queryCommandSupported(const cmdID: WideString): WordBool; dispid 1027;
    function queryCommandEnabled(const cmdID: WideString): WordBool; dispid 1028;
    function queryCommandState(const cmdID: WideString): WordBool; dispid 1029;
    function queryCommandIndeterm(const cmdID: WideString): WordBool; dispid 1030;
    function queryCommandText(const cmdID: WideString): WideString; dispid 1031;
    function queryCommandValue(const cmdID: WideString): OleVariant; dispid 1032;
    function execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; dispid 1033;
    function execCommandShowHelp(const cmdID: WideString): WordBool; dispid 1034;
  end;

// *********************************************************************//
// Interface: IHTMLTextRangeMetrics
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F40B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextRangeMetrics = interface(IDispatch)
    ['{3050F40B-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_offsetTop: Integer; safecall;
    function Get_offsetLeft: Integer; safecall;
    function Get_boundingTop: Integer; safecall;
    function Get_boundingLeft: Integer; safecall;
    function Get_boundingWidth: Integer; safecall;
    function Get_boundingHeight: Integer; safecall;
    property offsetTop: Integer read Get_offsetTop;
    property offsetLeft: Integer read Get_offsetLeft;
    property boundingTop: Integer read Get_boundingTop;
    property boundingLeft: Integer read Get_boundingLeft;
    property boundingWidth: Integer read Get_boundingWidth;
    property boundingHeight: Integer read Get_boundingHeight;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextRangeMetricsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F40B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextRangeMetricsDisp = dispinterface
    ['{3050F40B-98B5-11CF-BB82-00AA00BDCE0B}']
    property offsetTop: Integer readonly dispid 1035;
    property offsetLeft: Integer readonly dispid 1036;
    property boundingTop: Integer readonly dispid 1037;
    property boundingLeft: Integer readonly dispid 1038;
    property boundingWidth: Integer readonly dispid 1039;
    property boundingHeight: Integer readonly dispid 1040;
  end;

// *********************************************************************//
// Interface: IHTMLTextRangeMetrics2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextRangeMetrics2 = interface(IDispatch)
    ['{3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}']
    function getClientRects: IHTMLRectCollection; safecall;
    function getBoundingClientRect: IHTMLRect; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextRangeMetrics2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextRangeMetrics2Disp = dispinterface
    ['{3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}']
    function getClientRects: IHTMLRectCollection; dispid 1041;
    function getBoundingClientRect: IHTMLRect; dispid 1042;
  end;

// *********************************************************************//
// Interface: IHTMLTxtRangeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTxtRangeCollection = interface(IDispatch)
    ['{3050F7ED-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    // !! API fix decl
    function item(const pvarIndex: OleVariant): OleVariant; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTxtRangeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTxtRangeCollectionDisp = dispinterface
    ['{3050F7ED-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid - 4;
    // !! API fix decl
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  HTMLFormElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F614-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLFormElementEvents2 = dispinterface
    ['{3050F614-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    function onsubmit(const pEvtObj: IHTMLEventObj): WordBool; dispid 1007;
    function onreset(const pEvtObj: IHTMLEventObj): WordBool; dispid 1015;
  end;

// *********************************************************************//
// DispIntf:  HTMLFormElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F364-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLFormElementEvents = dispinterface
    ['{3050F364-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    function onsubmit: WordBool; dispid 1007;
    function onreset: WordBool; dispid 1015;
  end;

// *********************************************************************//
// Interface: IHTMLFormElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement = interface(IDispatch)
    ['{3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_action(const p: WideString); safecall;
    function Get_action: WideString; safecall;
    procedure Set_dir(const p: WideString); safecall;
    function Get_dir: WideString; safecall;
    procedure Set_encoding(const p: WideString); safecall;
    function Get_encoding: WideString; safecall;
    procedure Set_method(const p: WideString); safecall;
    function Get_method: WideString; safecall;
    function Get_elements: IDispatch; safecall;
    procedure Set_target(const p: WideString); safecall;
    function Get_target: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_onsubmit(p: OleVariant); safecall;
    function Get_onsubmit: OleVariant; safecall;
    procedure Set_onreset(p: OleVariant); safecall;
    function Get_onreset: OleVariant; safecall;
    procedure submit; safecall;
    procedure reset; safecall;
    procedure Set_length(p: Integer); safecall;
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(name: OleVariant; index: OleVariant): IDispatch; safecall;
    function tags(tagName: OleVariant): IDispatch; safecall;
    property action: WideString read Get_action write Set_action;
    property dir: WideString read Get_dir write Set_dir;
    property encoding: WideString read Get_encoding write Set_encoding;
    property method: WideString read Get_method write Set_method;
    property elements: IDispatch read Get_elements;
    property target: WideString read Get_target write Set_target;
    property name: WideString read Get_name write Set_name;
    property onsubmit: OleVariant read Get_onsubmit write Set_onsubmit;
    property onreset: OleVariant read Get_onreset write Set_onreset;
    property length: Integer read Get_length write Set_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFormElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElementDisp = dispinterface
    ['{3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}']
    property action: WideString dispid 1001;
    property dir: WideString dispid - 2147412995;
    property encoding: WideString dispid 1003;
    property method: WideString dispid 1004;
    property elements: IDispatch readonly dispid 1005;
    property target: WideString dispid 1006;
    property name: WideString dispid - 2147418112;
    property onsubmit: OleVariant dispid - 2147412101;
    property onreset: OleVariant dispid - 2147412100;
    procedure submit; dispid 1009;
    procedure reset; dispid 1010;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid - 4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
  end;

// *********************************************************************//
// Interface: IHTMLFormElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement2 = interface(IDispatch)
    ['{3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_acceptCharset(const p: WideString); safecall;
    function Get_acceptCharset: WideString; safecall;
    function urns(urn: OleVariant): IDispatch; safecall;
    property acceptCharset: WideString read Get_acceptCharset write Set_acceptCharset;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFormElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement2Disp = dispinterface
    ['{3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}']
    property acceptCharset: WideString dispid 1011;
    function urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// Interface: IHTMLFormElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F836-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement3 = interface(IDispatch)
    ['{3050F836-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFormElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F836-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement3Disp = dispinterface
    ['{3050F836-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; dispid 1506;
  end;

// *********************************************************************//
// Interface: IHTMLSubmitData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F645-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSubmitData = interface(IDispatch)
    ['{3050F645-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure appendNameValuePair(const name: WideString; const value: WideString); safecall;
    procedure appendNameFilePair(const name: WideString; const filename: WideString); safecall;
    procedure appendItemSeparator; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSubmitDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F645-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSubmitDataDisp = dispinterface
    ['{3050F645-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure appendNameValuePair(const name: WideString; const value: WideString); dispid 1012;
    procedure appendNameFilePair(const name: WideString; const filename: WideString); dispid 1013;
    procedure appendItemSeparator; dispid 1014;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFormElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F510-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFormElement = dispinterface
    ['{3050F510-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property action: WideString dispid 1001;
    property encoding: WideString dispid 1003;
    property method: WideString dispid 1004;
    property elements: IDispatch readonly dispid 1005;
    property target: WideString dispid 1006;
    property name: WideString dispid - 2147418112;
    property onsubmit: OleVariant dispid - 2147412101;
    property onreset: OleVariant dispid - 2147412100;
    procedure submit; dispid 1009;
    procedure reset; dispid 1010;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid - 4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
    property acceptCharset: WideString dispid 1011;
    function urns(urn: OleVariant): IDispatch; dispid 1505;
    function namedItem(const name: WideString): IDispatch; dispid 1506;
    procedure appendNameValuePair(const name: WideString; const value: WideString); dispid 1012;
    procedure appendNameFilePair(const name: WideString; const filename: WideString); dispid 1013;
    procedure appendItemSeparator; dispid 1014;
  end;

// *********************************************************************//
// DispIntf:  HTMLControlElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F612-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLControlElementEvents2 = dispinterface
    ['{3050F612-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLControlElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F4EA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLControlElementEvents = dispinterface
    ['{3050F4EA-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// Interface: IHTMLControlElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlElement = interface(IDispatch)
    ['{3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_tabIndex(p: Smallint); safecall;
    function Get_tabIndex: Smallint; safecall;
    procedure focus; safecall;
    procedure Set_accessKey(const p: WideString); safecall;
    function Get_accessKey: WideString; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function Get_onblur: OleVariant; safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function Get_onfocus: OleVariant; safecall;
    procedure Set_onresize(p: OleVariant); safecall;
    function Get_onresize: OleVariant; safecall;
    procedure blur; safecall;
    procedure addFilter(const pUnk: IUnknown); safecall;
    procedure removeFilter(const pUnk: IUnknown); safecall;
    function Get_clientHeight: Integer; safecall;
    function Get_clientWidth: Integer; safecall;
    function Get_clientTop: Integer; safecall;
    function Get_clientLeft: Integer; safecall;
    property tabIndex: Smallint read Get_tabIndex write Set_tabIndex;
    property accessKey: WideString read Get_accessKey write Set_accessKey;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property onresize: OleVariant read Get_onresize write Set_onresize;
    property clientHeight: Integer read Get_clientHeight;
    property clientWidth: Integer read Get_clientWidth;
    property clientTop: Integer read Get_clientTop;
    property clientLeft: Integer read Get_clientLeft;
  end;

// *********************************************************************//
// DispIntf:  IHTMLControlElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlElementDisp = dispinterface
    ['{3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}']
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
  end;

// *********************************************************************//
// Interface: IHTMLTextElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F218-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextElement = interface(IDispatch)
    ['{3050F218-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F218-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextElementDisp = dispinterface
    ['{3050F218-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTextElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F537-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTextElement = dispinterface
    ['{3050F537-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
  end;

// *********************************************************************//
// DispIntf:  HTMLTextContainerEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F624-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLTextContainerEvents2 = dispinterface
    ['{3050F624-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onchange(const pEvtObj: IHTMLEventObj); dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
  end;

// *********************************************************************//
// DispIntf:  HTMLTextContainerEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {1FF6AA72-5842-11CF-A707-00AA00C0098D}
// *********************************************************************//
  HTMLTextContainerEvents = dispinterface
    ['{1FF6AA72-5842-11CF-A707-00AA00C0098D}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onchange; dispid 1001;
    procedure onselect; dispid 1006;
  end;

// *********************************************************************//
// Interface: IHTMLTextContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F230-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextContainer = interface(IDispatch)
    ['{3050F230-98B5-11CF-BB82-00AA00BDCE0B}']
    function createControlRange: IDispatch; safecall;
    function Get_scrollHeight: Integer; safecall;
    function Get_scrollWidth: Integer; safecall;
    procedure Set_scrollTop(p: Integer); safecall;
    function Get_scrollTop: Integer; safecall;
    procedure Set_scrollLeft(p: Integer); safecall;
    function Get_scrollLeft: Integer; safecall;
    procedure Set_onscroll(p: OleVariant); safecall;
    function Get_onscroll: OleVariant; safecall;
    property scrollHeight: Integer read Get_scrollHeight;
    property scrollWidth: Integer read Get_scrollWidth;
    property scrollTop: Integer read Get_scrollTop write Set_scrollTop;
    property scrollLeft: Integer read Get_scrollLeft write Set_scrollLeft;
    property onscroll: OleVariant read Get_onscroll write Set_onscroll;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F230-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextContainerDisp = dispinterface
    ['{3050F230-98B5-11CF-BB82-00AA00BDCE0B}']
    function createControlRange: IDispatch; dispid 1001;
    property scrollHeight: Integer readonly dispid 1002;
    property scrollWidth: Integer readonly dispid 1003;
    property scrollTop: Integer dispid 1004;
    property scrollLeft: Integer dispid 1005;
    property onscroll: OleVariant dispid - 2147412081;
  end;

// *********************************************************************//
// Interface: IHTMLControlRange
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F29C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlRange = interface(IDispatch)
    ['{3050F29C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure select; safecall;
    procedure add(const item: IHTMLControlElement); safecall;
    procedure remove(index: Integer); safecall;
    function item(index: Integer): IHTMLElement; safecall;
    procedure scrollIntoView(varargStart: OleVariant); safecall;
    function queryCommandSupported(const cmdID: WideString): WordBool; safecall;
    function queryCommandEnabled(const cmdID: WideString): WordBool; safecall;
    function queryCommandState(const cmdID: WideString): WordBool; safecall;
    function queryCommandIndeterm(const cmdID: WideString): WordBool; safecall;
    function queryCommandText(const cmdID: WideString): WideString; safecall;
    function queryCommandValue(const cmdID: WideString): OleVariant; safecall;
    function execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; safecall;
    function execCommandShowHelp(const cmdID: WideString): WordBool; safecall;
    function commonParentElement: IHTMLElement; safecall;
    function Get_length: Integer; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLControlRangeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F29C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlRangeDisp = dispinterface
    ['{3050F29C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure select; dispid 1002;
    procedure add(const item: IHTMLControlElement); dispid 1003;
    procedure remove(index: Integer); dispid 1004;
    function item(index: Integer): IHTMLElement; dispid 0;
    procedure scrollIntoView(varargStart: OleVariant); dispid 1006;
    function queryCommandSupported(const cmdID: WideString): WordBool; dispid 1007;
    function queryCommandEnabled(const cmdID: WideString): WordBool; dispid 1008;
    function queryCommandState(const cmdID: WideString): WordBool; dispid 1009;
    function queryCommandIndeterm(const cmdID: WideString): WordBool; dispid 1010;
    function queryCommandText(const cmdID: WideString): WideString; dispid 1011;
    function queryCommandValue(const cmdID: WideString): OleVariant; dispid 1012;
    function execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; dispid 1013;
    function execCommandShowHelp(const cmdID: WideString): WordBool; dispid 1014;
    function commonParentElement: IHTMLElement; dispid 1015;
    property length: Integer readonly dispid 1005;
  end;

// *********************************************************************//
// Interface: IHTMLControlRange2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F65E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlRange2 = interface(IDispatch)
    ['{3050F65E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure addElement(const item: IHTMLElement); safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLControlRange2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F65E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlRange2Disp = dispinterface
    ['{3050F65E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure addElement(const item: IHTMLElement); dispid 1016;
  end;

// *********************************************************************//
// DispIntf:  HTMLImgEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F616-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLImgEvents2 = dispinterface
    ['{3050F616-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLImgEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F25B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLImgEvents = dispinterface
    ['{3050F25B-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// Interface: IHTMLImgElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F240-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImgElement = interface(IDispatch)
    ['{3050F240-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_isMap(p: WordBool); safecall;
    function Get_isMap: WordBool; safecall;
    procedure Set_useMap(const p: WideString); safecall;
    function Get_useMap: WideString; safecall;
    function Get_mimeType: WideString; safecall;
    function Get_fileSize: WideString; safecall;
    function Get_fileCreatedDate: WideString; safecall;
    function Get_fileModifiedDate: WideString; safecall;
    function Get_fileUpdatedDate: WideString; safecall;
    function Get_protocol: WideString; safecall;
    function Get_href: WideString; safecall;
    function Get_nameProp: WideString; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function Get_border: OleVariant; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function Get_hspace: Integer; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function Get_alt: WideString; safecall;
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_lowsrc(const p: WideString); safecall;
    function Get_lowsrc: WideString; safecall;
    procedure Set_vrml(const p: WideString); safecall;
    function Get_vrml: WideString; safecall;
    procedure Set_dynsrc(const p: WideString); safecall;
    function Get_dynsrc: WideString; safecall;
    function Get_readyState: WideString; safecall;
    function Get_complete: WordBool; safecall;
    procedure Set_loop(p: OleVariant); safecall;
    function Get_loop: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_onabort(p: OleVariant); safecall;
    function Get_onabort: OleVariant; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_width(p: Integer); safecall;
    function Get_width: Integer; safecall;
    procedure Set_height(p: Integer); safecall;
    function Get_height: Integer; safecall;
    procedure Set_Start(const p: WideString); safecall;
    function Get_Start: WideString; safecall;
    property isMap: WordBool read Get_isMap write Set_isMap;
    property useMap: WideString read Get_useMap write Set_useMap;
    property mimeType: WideString read Get_mimeType;
    property fileSize: WideString read Get_fileSize;
    property fileCreatedDate: WideString read Get_fileCreatedDate;
    property fileModifiedDate: WideString read Get_fileModifiedDate;
    property fileUpdatedDate: WideString read Get_fileUpdatedDate;
    property protocol: WideString read Get_protocol;
    property href: WideString read Get_href;
    property nameProp: WideString read Get_nameProp;
    property border: OleVariant read Get_border write Set_border;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property alt: WideString read Get_alt write Set_alt;
    property src: WideString read Get_src write Set_src;
    property lowsrc: WideString read Get_lowsrc write Set_lowsrc;
    property vrml: WideString read Get_vrml write Set_vrml;
    property dynsrc: WideString read Get_dynsrc write Set_dynsrc;
    property readyState: WideString read Get_readyState;
    property complete: WordBool read Get_complete;
    property loop: OleVariant read Get_loop write Set_loop;
    property align: WideString read Get_align write Set_align;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property onabort: OleVariant read Get_onabort write Set_onabort;
    property name: WideString read Get_name write Set_name;
    property width: Integer read Get_width write Set_width;
    property height: Integer read Get_height write Set_height;
    property Start: WideString read Get_Start write Set_Start;
  end;

// *********************************************************************//
// DispIntf:  IHTMLImgElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F240-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImgElementDisp = dispinterface
    ['{3050F240-98B5-11CF-BB82-00AA00BDCE0B}']
    property isMap: WordBool dispid 2002;
    property useMap: WideString dispid 2008;
    property mimeType: WideString readonly dispid 2010;
    property fileSize: WideString readonly dispid 2011;
    property fileCreatedDate: WideString readonly dispid 2012;
    property fileModifiedDate: WideString readonly dispid 2013;
    property fileUpdatedDate: WideString readonly dispid 2014;
    property protocol: WideString readonly dispid 2015;
    property href: WideString readonly dispid 2016;
    property nameProp: WideString readonly dispid 2017;
    property border: OleVariant dispid 1004;
    property vspace: Integer dispid 1005;
    property hspace: Integer dispid 1006;
    property alt: WideString dispid 1002;
    property src: WideString dispid 1003;
    property lowsrc: WideString dispid 1007;
    property vrml: WideString dispid 1008;
    property dynsrc: WideString dispid 1009;
    property readyState: WideString readonly dispid - 2147412996;
    property complete: WordBool readonly dispid 1010;
    property loop: OleVariant dispid 1011;
    property align: WideString dispid - 2147418039;
    property onload: OleVariant dispid - 2147412080;
    property onerror: OleVariant dispid - 2147412083;
    property onabort: OleVariant dispid - 2147412084;
    property name: WideString dispid - 2147418112;
    property width: Integer dispid - 2147418107;
    property height: Integer dispid - 2147418106;
    property Start: WideString dispid 1013;
  end;

// *********************************************************************//
// Interface: IHTMLImgElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F826-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImgElement2 = interface(IDispatch)
    ['{3050F826-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_longDesc(const p: WideString); safecall;
    function Get_longDesc: WideString; safecall;
    property longDesc: WideString read Get_longDesc write Set_longDesc;
  end;

// *********************************************************************//
// DispIntf:  IHTMLImgElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F826-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImgElement2Disp = dispinterface
    ['{3050F826-98B5-11CF-BB82-00AA00BDCE0B}']
    property longDesc: WideString dispid 2019;
  end;

// *********************************************************************//
// Interface: IHTMLImageElementFactory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImageElementFactory = interface(IDispatch)
    ['{3050F38E-98B5-11CF-BB82-00AA00BDCE0B}']
    function create(width: OleVariant; height: OleVariant): IHTMLImgElement; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLImageElementFactoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImageElementFactoryDisp = dispinterface
    ['{3050F38E-98B5-11CF-BB82-00AA00BDCE0B}']
    function create(width: OleVariant; height: OleVariant): IHTMLImgElement; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLImg
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLImg = dispinterface
    ['{3050F51C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property isMap: WordBool dispid 2002;
    property useMap: WideString dispid 2008;
    property mimeType: WideString readonly dispid 2010;
    property fileSize: WideString readonly dispid 2011;
    property fileCreatedDate: WideString readonly dispid 2012;
    property fileModifiedDate: WideString readonly dispid 2013;
    property fileUpdatedDate: WideString readonly dispid 2014;
    property protocol: WideString readonly dispid 2015;
    property href: WideString readonly dispid 2016;
    property nameProp: WideString readonly dispid 2017;
    property border: OleVariant dispid 1004;
    property vspace: Integer dispid 1005;
    property hspace: Integer dispid 1006;
    property alt: WideString dispid 1002;
    property src: WideString dispid 1003;
    property lowsrc: WideString dispid 1007;
    property vrml: WideString dispid 1008;
    property dynsrc: WideString dispid 1009;
    property complete: WordBool readonly dispid 1010;
    property loop: OleVariant dispid 1011;
    property align: WideString dispid - 2147418039;
    property onload: OleVariant dispid - 2147412080;
    property onerror: OleVariant dispid - 2147412083;
    property onabort: OleVariant dispid - 2147412084;
    property name: WideString dispid - 2147418112;
    property width: Integer dispid - 2147418107;
    property height: Integer dispid - 2147418106;
    property Start: WideString dispid 1013;
    property longDesc: WideString dispid 2019;
  end;

// *********************************************************************//
// Interface: IHTMLBodyElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement = interface(IDispatch)
    ['{3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_background(const p: WideString); safecall;
    function Get_background: WideString; safecall;
    procedure Set_bgProperties(const p: WideString); safecall;
    function Get_bgProperties: WideString; safecall;
    procedure Set_leftMargin(p: OleVariant); safecall;
    function Get_leftMargin: OleVariant; safecall;
    procedure Set_topMargin(p: OleVariant); safecall;
    function Get_topMargin: OleVariant; safecall;
    procedure Set_rightMargin(p: OleVariant); safecall;
    function Get_rightMargin: OleVariant; safecall;
    procedure Set_bottomMargin(p: OleVariant); safecall;
    function Get_bottomMargin: OleVariant; safecall;
    procedure Set_noWrap(p: WordBool); safecall;
    function Get_noWrap: WordBool; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function Get_bgColor: OleVariant; safecall;
    procedure Set_text(p: OleVariant); safecall;
    function Get_text: OleVariant; safecall;
    procedure Set_link(p: OleVariant); safecall;
    function Get_link: OleVariant; safecall;
    procedure Set_vLink(p: OleVariant); safecall;
    function Get_vLink: OleVariant; safecall;
    procedure Set_aLink(p: OleVariant); safecall;
    function Get_aLink: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onunload(p: OleVariant); safecall;
    function Get_onunload: OleVariant; safecall;
    procedure Set_scroll(const p: WideString); safecall;
    function Get_scroll: WideString; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function Get_onselect: OleVariant; safecall;
    procedure Set_onbeforeunload(p: OleVariant); safecall;
    function Get_onbeforeunload: OleVariant; safecall;
    function createTextRange: IHTMLTxtRange; safecall;
    property background: WideString read Get_background write Set_background;
    property bgProperties: WideString read Get_bgProperties write Set_bgProperties;
    property leftMargin: OleVariant read Get_leftMargin write Set_leftMargin;
    property topMargin: OleVariant read Get_topMargin write Set_topMargin;
    property rightMargin: OleVariant read Get_rightMargin write Set_rightMargin;
    property bottomMargin: OleVariant read Get_bottomMargin write Set_bottomMargin;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property text: OleVariant read Get_text write Set_text;
    property link: OleVariant read Get_link write Set_link;
    property vLink: OleVariant read Get_vLink write Set_vLink;
    property aLink: OleVariant read Get_aLink write Set_aLink;
    property onload: OleVariant read Get_onload write Set_onload;
    property onunload: OleVariant read Get_onunload write Set_onunload;
    property scroll: WideString read Get_scroll write Set_scroll;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property onbeforeunload: OleVariant read Get_onbeforeunload write Set_onbeforeunload;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBodyElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElementDisp = dispinterface
    ['{3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}']
    property background: WideString dispid - 2147413111;
    property bgProperties: WideString dispid - 2147413067;
    property leftMargin: OleVariant dispid - 2147413072;
    property topMargin: OleVariant dispid - 2147413075;
    property rightMargin: OleVariant dispid - 2147413074;
    property bottomMargin: OleVariant dispid - 2147413073;
    property noWrap: WordBool dispid - 2147413107;
    property bgColor: OleVariant dispid - 501;
    property text: OleVariant dispid - 2147413110;
    property link: OleVariant dispid 2010;
    property vLink: OleVariant dispid 2012;
    property aLink: OleVariant dispid 2011;
    property onload: OleVariant dispid - 2147412080;
    property onunload: OleVariant dispid - 2147412079;
    property scroll: WideString dispid - 2147413033;
    property onselect: OleVariant dispid - 2147412102;
    property onbeforeunload: OleVariant dispid - 2147412073;
    function createTextRange: IHTMLTxtRange; dispid 2013;
  end;

// *********************************************************************//
// Interface: IHTMLBodyElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement2 = interface(IDispatch)
    ['{3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onbeforeprint(p: OleVariant); safecall;
    function Get_onbeforeprint: OleVariant; safecall;
    procedure Set_onafterprint(p: OleVariant); safecall;
    function Get_onafterprint: OleVariant; safecall;
    property onbeforeprint: OleVariant read Get_onbeforeprint write Set_onbeforeprint;
    property onafterprint: OleVariant read Get_onafterprint write Set_onafterprint;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBodyElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement2Disp = dispinterface
    ['{3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}']
    property onbeforeprint: OleVariant dispid - 2147412046;
    property onafterprint: OleVariant dispid - 2147412045;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBody
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F507-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBody = dispinterface
    ['{3050F507-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property background: WideString dispid - 2147413111;
    property bgProperties: WideString dispid - 2147413067;
    property leftMargin: OleVariant dispid - 2147413072;
    property topMargin: OleVariant dispid - 2147413075;
    property rightMargin: OleVariant dispid - 2147413074;
    property bottomMargin: OleVariant dispid - 2147413073;
    property noWrap: WordBool dispid - 2147413107;
    property bgColor: OleVariant dispid - 501;
    property text: OleVariant dispid - 2147413110;
    property link: OleVariant dispid 2010;
    property vLink: OleVariant dispid 2012;
    property aLink: OleVariant dispid 2011;
    property onload: OleVariant dispid - 2147412080;
    property onunload: OleVariant dispid - 2147412079;
    property scroll: WideString dispid - 2147413033;
    property onselect: OleVariant dispid - 2147412102;
    property onbeforeunload: OleVariant dispid - 2147412073;
    function createTextRange: IHTMLTxtRange; dispid 2013;
    property onbeforeprint: OleVariant dispid - 2147412046;
    property onafterprint: OleVariant dispid - 2147412045;
  end;

// *********************************************************************//
// Interface: IHTMLFontElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontElement = interface(IDispatch)
    ['{3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_color(p: OleVariant); safecall;
    function Get_color: OleVariant; safecall;
    procedure Set_face(const p: WideString); safecall;
    function Get_face: WideString; safecall;
    procedure Set_size(p: OleVariant); safecall;
    function Get_size: OleVariant; safecall;
    property color: OleVariant read Get_color write Set_color;
    property face: WideString read Get_face write Set_face;
    property size: OleVariant read Get_size write Set_size;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFontElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontElementDisp = dispinterface
    ['{3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}']
    property color: OleVariant dispid - 2147413110;
    property face: WideString dispid - 2147413094;
    property size: OleVariant dispid - 2147413093;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFontElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F512-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFontElement = dispinterface
    ['{3050F512-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property color: OleVariant dispid - 2147413110;
    property face: WideString dispid - 2147413094;
    property size: OleVariant dispid - 2147413093;
  end;

// *********************************************************************//
// DispIntf:  HTMLAnchorEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F610-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLAnchorEvents2 = dispinterface
    ['{3050F610-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLAnchorEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F29D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLAnchorEvents = dispinterface
    ['{3050F29D-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// Interface: IHTMLAnchorElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAnchorElement = interface(IDispatch)
    ['{3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    procedure Set_target(const p: WideString); safecall;
    function Get_target: WideString; safecall;
    procedure Set_rel(const p: WideString); safecall;
    function Get_rel: WideString; safecall;
    procedure Set_rev(const p: WideString); safecall;
    function Get_rev: WideString; safecall;
    procedure Set_urn(const p: WideString); safecall;
    function Get_urn: WideString; safecall;
    procedure Set_Methods(const p: WideString); safecall;
    function Get_Methods: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_host(const p: WideString); safecall;
    function Get_host: WideString; safecall;
    procedure Set_hostname(const p: WideString); safecall;
    function Get_hostname: WideString; safecall;
    procedure Set_pathname(const p: WideString); safecall;
    function Get_pathname: WideString; safecall;
    procedure Set_port(const p: WideString); safecall;
    function Get_port: WideString; safecall;
    procedure Set_protocol(const p: WideString); safecall;
    function Get_protocol: WideString; safecall;
    procedure Set_search(const p: WideString); safecall;
    function Get_search: WideString; safecall;
    procedure Set_hash(const p: WideString); safecall;
    function Get_hash: WideString; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function Get_onblur: OleVariant; safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function Get_onfocus: OleVariant; safecall;
    procedure Set_accessKey(const p: WideString); safecall;
    function Get_accessKey: WideString; safecall;
    function Get_protocolLong: WideString; safecall;
    function Get_mimeType: WideString; safecall;
    function Get_nameProp: WideString; safecall;
    procedure Set_tabIndex(p: Smallint); safecall;
    function Get_tabIndex: Smallint; safecall;
    procedure focus; safecall;
    procedure blur; safecall;
    property href: WideString read Get_href write Set_href;
    property target: WideString read Get_target write Set_target;
    property rel: WideString read Get_rel write Set_rel;
    property rev: WideString read Get_rev write Set_rev;
    property urn: WideString read Get_urn write Set_urn;
    property Methods: WideString read Get_Methods write Set_Methods;
    property name: WideString read Get_name write Set_name;
    property host: WideString read Get_host write Set_host;
    property hostname: WideString read Get_hostname write Set_hostname;
    property pathname: WideString read Get_pathname write Set_pathname;
    property port: WideString read Get_port write Set_port;
    property protocol: WideString read Get_protocol write Set_protocol;
    property search: WideString read Get_search write Set_search;
    property hash: WideString read Get_hash write Set_hash;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property accessKey: WideString read Get_accessKey write Set_accessKey;
    property protocolLong: WideString read Get_protocolLong;
    property mimeType: WideString read Get_mimeType;
    property nameProp: WideString read Get_nameProp;
    property tabIndex: Smallint read Get_tabIndex write Set_tabIndex;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAnchorElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAnchorElementDisp = dispinterface
    ['{3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: WideString dispid 0;
    property target: WideString dispid 1003;
    property rel: WideString dispid 1005;
    property rev: WideString dispid 1006;
    property urn: WideString dispid 1007;
    property Methods: WideString dispid 1008;
    property name: WideString dispid - 2147418112;
    property host: WideString dispid 1012;
    property hostname: WideString dispid 1013;
    property pathname: WideString dispid 1014;
    property port: WideString dispid 1015;
    property protocol: WideString dispid 1016;
    property search: WideString dispid 1017;
    property hash: WideString dispid 1018;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property accessKey: WideString dispid - 2147416107;
    property protocolLong: WideString readonly dispid 1031;
    property mimeType: WideString readonly dispid 1030;
    property nameProp: WideString readonly dispid 1032;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    procedure blur; dispid - 2147416110;
  end;

// *********************************************************************//
// Interface: IHTMLAnchorElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F825-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAnchorElement2 = interface(IDispatch)
    ['{3050F825-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_charset(const p: WideString); safecall;
    function Get_charset: WideString; safecall;
    procedure Set_coords(const p: WideString); safecall;
    function Get_coords: WideString; safecall;
    procedure Set_hreflang(const p: WideString); safecall;
    function Get_hreflang: WideString; safecall;
    procedure Set_shape(const p: WideString); safecall;
    function Get_shape: WideString; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    property charset: WideString read Get_charset write Set_charset;
    property coords: WideString read Get_coords write Set_coords;
    property hreflang: WideString read Get_hreflang write Set_hreflang;
    property shape: WideString read Get_shape write Set_shape;
    property type_: WideString read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAnchorElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F825-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAnchorElement2Disp = dispinterface
    ['{3050F825-98B5-11CF-BB82-00AA00BDCE0B}']
    property charset: WideString dispid 1023;
    property coords: WideString dispid 1024;
    property hreflang: WideString dispid 1025;
    property shape: WideString dispid 1026;
    property type_: WideString dispid 1027;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAnchorElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F502-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAnchorElement = dispinterface
    ['{3050F502-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property href: WideString dispid 0;
    property target: WideString dispid 1003;
    property rel: WideString dispid 1005;
    property rev: WideString dispid 1006;
    property urn: WideString dispid 1007;
    property Methods: WideString dispid 1008;
    property name: WideString dispid - 2147418112;
    property host: WideString dispid 1012;
    property hostname: WideString dispid 1013;
    property pathname: WideString dispid 1014;
    property port: WideString dispid 1015;
    property protocol: WideString dispid 1016;
    property search: WideString dispid 1017;
    property hash: WideString dispid 1018;
    property protocolLong: WideString readonly dispid 1031;
    property mimeType: WideString readonly dispid 1030;
    property nameProp: WideString readonly dispid 1032;
    property charset: WideString dispid 1023;
    property coords: WideString dispid 1024;
    property hreflang: WideString dispid 1025;
    property shape: WideString dispid 1026;
    property type_: WideString dispid 1027;
  end;

// *********************************************************************//
// DispIntf:  HTMLLabelEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLLabelEvents2 = dispinterface
    ['{3050F61C-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLLabelEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F329-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLLabelEvents = dispinterface
    ['{3050F329-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// Interface: IHTMLLabelElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F32A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLabelElement = interface(IDispatch)
    ['{3050F32A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_htmlFor(const p: WideString); safecall;
    function Get_htmlFor: WideString; safecall;
    procedure Set_accessKey(const p: WideString); safecall;
    function Get_accessKey: WideString; safecall;
    property htmlFor: WideString read Get_htmlFor write Set_htmlFor;
    property accessKey: WideString read Get_accessKey write Set_accessKey;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLabelElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F32A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLabelElementDisp = dispinterface
    ['{3050F32A-98B5-11CF-BB82-00AA00BDCE0B}']
    property htmlFor: WideString dispid 1000;
    property accessKey: WideString dispid - 2147416107;
  end;

// *********************************************************************//
// Interface: IHTMLLabelElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F832-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLabelElement2 = interface(IDispatch)
    ['{3050F832-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_form: IHTMLFormElement; safecall;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLabelElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F832-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLabelElement2Disp = dispinterface
    ['{3050F832-98B5-11CF-BB82-00AA00BDCE0B}']
    property form: IHTMLFormElement readonly dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLLabelElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F522-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLLabelElement = dispinterface
    ['{3050F522-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property htmlFor: WideString dispid 1000;
    property form: IHTMLFormElement readonly dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLListElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLListElement = interface(IDispatch)
    ['{3050F20E-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLListElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLListElementDisp = dispinterface
    ['{3050F20E-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: IHTMLListElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F822-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLListElement2 = interface(IDispatch)
    ['{3050F822-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_compact(p: WordBool); safecall;
    function Get_compact: WordBool; safecall;
    property compact: WordBool read Get_compact write Set_compact;
  end;

// *********************************************************************//
// DispIntf:  IHTMLListElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F822-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLListElement2Disp = dispinterface
    ['{3050F822-98B5-11CF-BB82-00AA00BDCE0B}']
    property compact: WordBool dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLListElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F525-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLListElement = dispinterface
    ['{3050F525-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property compact: WordBool dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLUListElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUListElement = interface(IDispatch)
    ['{3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_compact(p: WordBool); safecall;
    function Get_compact: WordBool; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    property compact: WordBool read Get_compact write Set_compact;
    property type_: WideString read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLUListElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUListElementDisp = dispinterface
    ['{3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}']
    property compact: WordBool dispid 1001;
    property type_: WideString dispid - 2147413095;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLUListElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F538-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLUListElement = dispinterface
    ['{3050F538-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property compact: WordBool dispid 1001;
    property type_: WideString dispid - 2147413095;
  end;

// *********************************************************************//
// Interface: IHTMLOListElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOListElement = interface(IDispatch)
    ['{3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_compact(p: WordBool); safecall;
    function Get_compact: WordBool; safecall;
    procedure Set_Start(p: Integer); safecall;
    function Get_Start: Integer; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    property compact: WordBool read Get_compact write Set_compact;
    property Start: Integer read Get_Start write Set_Start;
    property type_: WideString read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOListElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOListElementDisp = dispinterface
    ['{3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}']
    property compact: WordBool dispid 1001;
    property Start: Integer dispid 1003;
    property type_: WideString dispid - 2147413095;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLOListElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLOListElement = dispinterface
    ['{3050F52A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property compact: WordBool dispid 1001;
    property Start: Integer dispid 1003;
    property type_: WideString dispid - 2147413095;
  end;

// *********************************************************************//
// Interface: IHTMLLIElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLIElement = interface(IDispatch)
    ['{3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    procedure Set_value(p: Integer); safecall;
    function Get_value: Integer; safecall;
    property type_: WideString read Get_type_ write Set_type_;
    property value: Integer read Get_value write Set_value;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLIElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLIElementDisp = dispinterface
    ['{3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString dispid - 2147413095;
    property value: Integer dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLLIElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F523-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLLIElement = dispinterface
    ['{3050F523-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property type_: WideString dispid - 2147413095;
    property value: Integer dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLBlockElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F208-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBlockElement = interface(IDispatch)
    ['{3050F208-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_clear(const p: WideString); safecall;
    function Get_clear: WideString; safecall;
    property clear: WideString read Get_clear write Set_clear;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBlockElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F208-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBlockElementDisp = dispinterface
    ['{3050F208-98B5-11CF-BB82-00AA00BDCE0B}']
    property clear: WideString dispid - 2147413096;
  end;

// *********************************************************************//
// Interface: IHTMLBlockElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F823-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBlockElement2 = interface(IDispatch)
    ['{3050F823-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_cite(const p: WideString); safecall;
    function Get_cite: WideString; safecall;
    procedure Set_width(const p: WideString); safecall;
    function Get_width: WideString; safecall;
    property cite: WideString read Get_cite write Set_cite;
    property width: WideString read Get_width write Set_width;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBlockElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F823-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBlockElement2Disp = dispinterface
    ['{3050F823-98B5-11CF-BB82-00AA00BDCE0B}']
    property cite: WideString dispid 1001;
    property width: WideString dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBlockElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F506-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBlockElement = dispinterface
    ['{3050F506-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property clear: WideString dispid - 2147413096;
    property cite: WideString dispid 1001;
    property width: WideString dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLDivElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F200-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDivElement = interface(IDispatch)
    ['{3050F200-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_noWrap(p: WordBool); safecall;
    function Get_noWrap: WordBool; safecall;
    property align: WideString read Get_align write Set_align;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDivElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F200-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDivElementDisp = dispinterface
    ['{3050F200-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid - 2147418040;
    property noWrap: WordBool dispid - 2147413107;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDivElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDivElement = dispinterface
    ['{3050F50C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property align: WideString dispid - 2147418040;
    property noWrap: WordBool dispid - 2147413107;
  end;

// *********************************************************************//
// Interface: IHTMLDDElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDDElement = interface(IDispatch)
    ['{3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_noWrap(p: WordBool); safecall;
    function Get_noWrap: WordBool; safecall;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDDElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDDElementDisp = dispinterface
    ['{3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}']
    property noWrap: WordBool dispid - 2147413107;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDDElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDDElement = dispinterface
    ['{3050F50B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property noWrap: WordBool dispid - 2147413107;
  end;

// *********************************************************************//
// Interface: IHTMLDTElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDTElement = interface(IDispatch)
    ['{3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_noWrap(p: WordBool); safecall;
    function Get_noWrap: WordBool; safecall;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDTElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDTElementDisp = dispinterface
    ['{3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}']
    property noWrap: WordBool dispid - 2147413107;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDTElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDTElement = dispinterface
    ['{3050F50D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property noWrap: WordBool dispid - 2147413107;
  end;

// *********************************************************************//
// Interface: IHTMLBRElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBRElement = interface(IDispatch)
    ['{3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_clear(const p: WideString); safecall;
    function Get_clear: WideString; safecall;
    property clear: WideString read Get_clear write Set_clear;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBRElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBRElementDisp = dispinterface
    ['{3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}']
    property clear: WideString dispid - 2147413096;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBRElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F53A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBRElement = dispinterface
    ['{3050F53A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property clear: WideString dispid - 2147413096;
  end;

// *********************************************************************//
// Interface: IHTMLDListElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDListElement = interface(IDispatch)
    ['{3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_compact(p: WordBool); safecall;
    function Get_compact: WordBool; safecall;
    property compact: WordBool read Get_compact write Set_compact;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDListElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDListElementDisp = dispinterface
    ['{3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}']
    property compact: WordBool dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDListElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F53B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDListElement = dispinterface
    ['{3050F53B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property compact: WordBool dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLHRElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHRElement = interface(IDispatch)
    ['{3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_color(p: OleVariant); safecall;
    function Get_color: OleVariant; safecall;
    procedure Set_noShade(p: WordBool); safecall;
    function Get_noShade: WordBool; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_size(p: OleVariant); safecall;
    function Get_size: OleVariant; safecall;
    property align: WideString read Get_align write Set_align;
    property color: OleVariant read Get_color write Set_color;
    property noShade: WordBool read Get_noShade write Set_noShade;
    property width: OleVariant read Get_width write Set_width;
    property size: OleVariant read Get_size write Set_size;
  end;

// *********************************************************************//
// DispIntf:  IHTMLHRElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHRElementDisp = dispinterface
    ['{3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid - 2147418040;
    property color: OleVariant dispid - 2147413110;
    property noShade: WordBool dispid 1001;
    property width: OleVariant dispid - 2147418107;
    property size: OleVariant dispid - 2147418106;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLHRElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F53D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLHRElement = dispinterface
    ['{3050F53D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property align: WideString dispid - 2147418040;
    property color: OleVariant dispid - 2147413110;
    property noShade: WordBool dispid 1001;
    property width: OleVariant dispid - 2147418107;
    property size: OleVariant dispid - 2147418106;
  end;

// *********************************************************************//
// Interface: IHTMLParaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLParaElement = interface(IDispatch)
    ['{3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLParaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLParaElementDisp = dispinterface
    ['{3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid - 2147418040;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLParaElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLParaElement = dispinterface
    ['{3050F52C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property clear: WideString dispid - 2147413096;
    property align: WideString dispid - 2147418040;
  end;

// *********************************************************************//
// Interface: IHTMLElementCollection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection2 = interface(IDispatch)
    ['{3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function urns(urn: OleVariant): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementCollection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection2Disp = dispinterface
    ['{3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// Interface: IHTMLElementCollection3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F835-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection3 = interface(IDispatch)
    ['{3050F835-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementCollection3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F835-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection3Disp = dispinterface
    ['{3050F835-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; dispid 1506;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLElementCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F56B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLElementCollection = dispinterface
    ['{3050F56B-98B5-11CF-BB82-00AA00BDCE0B}']
    function toString: WideString; dispid 1501;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid - 4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
    function urns(urn: OleVariant): IDispatch; dispid 1505;
    function namedItem(const name: WideString): IDispatch; dispid 1506;
  end;

// *********************************************************************//
// Interface: IHTMLHeaderElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHeaderElement = interface(IDispatch)
    ['{3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLHeaderElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHeaderElementDisp = dispinterface
    ['{3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid - 2147418040;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLHeaderElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F515-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLHeaderElement = dispinterface
    ['{3050F515-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property clear: WideString dispid - 2147413096;
    property align: WideString dispid - 2147418040;
  end;

// *********************************************************************//
// DispIntf:  HTMLSelectElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F622-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLSelectElementEvents2 = dispinterface
    ['{3050F622-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onchange(const pEvtObj: IHTMLEventObj); dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  HTMLSelectElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F302-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLSelectElementEvents = dispinterface
    ['{3050F302-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onchange; dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLSelectElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F244-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement = interface(IDispatch)
    ['{3050F244-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_size(p: Integer); safecall;
    function Get_size: Integer; safecall;
    procedure Set_multiple(p: WordBool); safecall;
    function Get_multiple: WordBool; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    function Get_options: IDispatch; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_selectedIndex(p: Integer); safecall;
    function Get_selectedIndex: Integer; safecall;
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    procedure add(const element: IHTMLElement; before: OleVariant); safecall;
    procedure remove(index: Integer); safecall;
    procedure Set_length(p: Integer); safecall;
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(name: OleVariant; index: OleVariant): IDispatch; safecall;
    function tags(tagName: OleVariant): IDispatch; safecall;
    property size: Integer read Get_size write Set_size;
    property multiple: WordBool read Get_multiple write Set_multiple;
    property name: WideString read Get_name write Set_name;
    property options: IDispatch read Get_options;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property selectedIndex: Integer read Get_selectedIndex write Set_selectedIndex;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property length: Integer read Get_length write Set_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F244-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElementDisp = dispinterface
    ['{3050F244-98B5-11CF-BB82-00AA00BDCE0B}']
    property size: Integer dispid 1002;
    property multiple: WordBool dispid 1003;
    property name: WideString dispid - 2147418112;
    property options: IDispatch readonly dispid 1005;
    property onchange: OleVariant dispid - 2147412082;
    property selectedIndex: Integer dispid 1010;
    property type_: WideString readonly dispid 1012;
    property value: WideString dispid 1011;
    property disabled: WordBool dispid - 2147418036;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    procedure add(const element: IHTMLElement; before: OleVariant); dispid 1503;
    procedure remove(index: Integer); dispid 1504;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid - 4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
  end;

// *********************************************************************//
// Interface: IHTMLSelectElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement2 = interface(IDispatch)
    ['{3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}']
    function urns(urn: OleVariant): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement2Disp = dispinterface
    ['{3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}']
    function urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// Interface: IHTMLSelectElement4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F838-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement4 = interface(IDispatch)
    ['{3050F838-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectElement4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F838-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement4Disp = dispinterface
    ['{3050F838-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; dispid 1506;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLSelectElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F531-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLSelectElement = dispinterface
    ['{3050F531-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property size: Integer dispid 1002;
    property multiple: WordBool dispid 1003;
    property name: WideString dispid - 2147418112;
    property options: IDispatch readonly dispid 1005;
    property onchange: OleVariant dispid - 2147412082;
    property selectedIndex: Integer dispid 1010;
    property type_: WideString readonly dispid 1012;
    property value: WideString dispid 1011;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    procedure add(const element: IHTMLElement; before: OleVariant); dispid 1503;
    procedure remove(index: Integer); dispid 1504;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid - 4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
    function urns(urn: OleVariant): IDispatch; dispid 1505;
    function namedItem(const name: WideString): IDispatch; dispid 1506;
  end;

// *********************************************************************//
// Interface: IHTMLSelectionObject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectionObject = interface(IDispatch)
    ['{3050F25A-98B5-11CF-BB82-00AA00BDCE0B}']
    function createRange: IDispatch; safecall;
    procedure empty; safecall;
    procedure clear; safecall;
    function Get_type_: WideString; safecall;
    property type_: WideString read Get_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectionObjectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectionObjectDisp = dispinterface
    ['{3050F25A-98B5-11CF-BB82-00AA00BDCE0B}']
    function createRange: IDispatch; dispid 1001;
    procedure empty; dispid 1002;
    procedure clear; dispid 1003;
    property type_: WideString readonly dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLSelectionObject2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectionObject2 = interface(IDispatch)
    ['{3050F7EC-98B5-11CF-BB82-00AA00BDCE0B}']
    function createRangeCollection: IDispatch; safecall;
    function Get_typeDetail: WideString; safecall;
    property typeDetail: WideString read Get_typeDetail;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectionObject2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectionObject2Disp = dispinterface
    ['{3050F7EC-98B5-11CF-BB82-00AA00BDCE0B}']
    function createRangeCollection: IDispatch; dispid 1005;
    property typeDetail: WideString readonly dispid 1006;
  end;

// *********************************************************************//
// Interface: IHTMLOptionElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F211-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElement = interface(IDispatch)
    ['{3050F211-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_selected(p: WordBool); safecall;
    function Get_selected: WordBool; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_defaultSelected(p: WordBool); safecall;
    function Get_defaultSelected: WordBool; safecall;
    procedure Set_index(p: Integer); safecall;
    function Get_index: Integer; safecall;
    procedure Set_text(const p: WideString); safecall;
    function Get_text: WideString; safecall;
    function Get_form: IHTMLFormElement; safecall;
    property selected: WordBool read Get_selected write Set_selected;
    property value: WideString read Get_value write Set_value;
    property defaultSelected: WordBool read Get_defaultSelected write Set_defaultSelected;
    property index: Integer read Get_index write Set_index;
    property text: WideString read Get_text write Set_text;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F211-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElementDisp = dispinterface
    ['{3050F211-98B5-11CF-BB82-00AA00BDCE0B}']
    property selected: WordBool dispid 1001;
    property value: WideString dispid 1002;
    property defaultSelected: WordBool dispid 1003;
    property index: Integer dispid 1005;
    property text: WideString dispid 1004;
    property form: IHTMLFormElement readonly dispid 1006;
  end;

// *********************************************************************//
// Interface: IHTMLOptionElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F820-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElement3 = interface(IDispatch)
    ['{3050F820-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_label_(const p: WideString); safecall;
    function Get_label_: WideString; safecall;
    property label_: WideString read Get_label_ write Set_label_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F820-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElement3Disp = dispinterface
    ['{3050F820-98B5-11CF-BB82-00AA00BDCE0B}']
    property label_: WideString dispid 1007;
  end;

// *********************************************************************//
// Interface: IHTMLOptionElementFactory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElementFactory = interface(IDispatch)
    ['{3050F38C-98B5-11CF-BB82-00AA00BDCE0B}']
    function create(text: OleVariant; value: OleVariant; defaultSelected: OleVariant;
      selected: OleVariant): IHTMLOptionElement; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionElementFactoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElementFactoryDisp = dispinterface
    ['{3050F38C-98B5-11CF-BB82-00AA00BDCE0B}']
    function create(text: OleVariant; value: OleVariant; defaultSelected: OleVariant;
      selected: OleVariant): IHTMLOptionElement; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLOptionElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLOptionElement = dispinterface
    ['{3050F52B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property selected: WordBool dispid 1001;
    property value: WideString dispid 1002;
    property defaultSelected: WordBool dispid 1003;
    property index: Integer dispid 1005;
    property text: WideString dispid 1004;
    property form: IHTMLFormElement readonly dispid 1006;
    property label_: WideString dispid 1007;
  end;

// *********************************************************************//
// DispIntf:  HTMLButtonElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F617-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLButtonElementEvents2 = dispinterface
    ['{3050F617-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLButtonElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2B3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLButtonElementEvents = dispinterface
    ['{3050F2B3-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputTextElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F618-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputTextElementEvents2 = dispinterface
    ['{3050F618-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    function onchange(const pEvtObj: IHTMLEventObj): WordBool; dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLOptionButtonElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F619-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLOptionButtonElementEvents2 = dispinterface
    ['{3050F619-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    function onchange(const pEvtObj: IHTMLEventObj): WordBool; dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputFileElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputFileElementEvents2 = dispinterface
    ['{3050F61A-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    function onchange(const pEvtObj: IHTMLEventObj): WordBool; dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputImageEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputImageEvents2 = dispinterface
    ['{3050F61B-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputTextElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2A7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputTextElementEvents = dispinterface
    ['{3050F2A7-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    function onchange: WordBool; dispid 1001;
    procedure onselect; dispid 1006;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLOptionButtonElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2BD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLOptionButtonElementEvents = dispinterface
    ['{3050F2BD-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    function onchange: WordBool; dispid 1001;
    procedure onselect; dispid 1006;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputFileElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2AF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputFileElementEvents = dispinterface
    ['{3050F2AF-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    function onchange: WordBool; dispid 1001;
    procedure onselect; dispid 1006;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputImageEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2C3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputImageEvents = dispinterface
    ['{3050F2C3-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// Interface: IHTMLInputElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputElement = interface(IDispatch)
    ['{3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_status(p: WordBool); safecall;
    function Get_status: WordBool; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    procedure Set_size(p: Integer); safecall;
    function Get_size: Integer; safecall;
    procedure Set_maxLength(p: Integer); safecall;
    function Get_maxLength: Integer; safecall;
    procedure select; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function Get_onselect: OleVariant; safecall;
    procedure Set_defaultValue(const p: WideString); safecall;
    function Get_defaultValue: WideString; safecall;
    procedure Set_readOnly(p: WordBool); safecall;
    function Get_readOnly: WordBool; safecall;
    function createTextRange: IHTMLTxtRange; safecall;
    procedure Set_indeterminate(p: WordBool); safecall;
    function Get_indeterminate: WordBool; safecall;
    procedure Set_defaultChecked(p: WordBool); safecall;
    function Get_defaultChecked: WordBool; safecall;
    procedure Set_checked(p: WordBool); safecall;
    function Get_checked: WordBool; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function Get_border: OleVariant; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function Get_hspace: Integer; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function Get_alt: WideString; safecall;
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_lowsrc(const p: WideString); safecall;
    function Get_lowsrc: WideString; safecall;
    procedure Set_vrml(const p: WideString); safecall;
    function Get_vrml: WideString; safecall;
    procedure Set_dynsrc(const p: WideString); safecall;
    function Get_dynsrc: WideString; safecall;
    function Get_readyState: WideString; safecall;
    function Get_complete: WordBool; safecall;
    procedure Set_loop(p: OleVariant); safecall;
    function Get_loop: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_onabort(p: OleVariant); safecall;
    function Get_onabort: OleVariant; safecall;
    procedure Set_width(p: Integer); safecall;
    function Get_width: Integer; safecall;
    procedure Set_height(p: Integer); safecall;
    function Get_height: Integer; safecall;
    procedure Set_Start(const p: WideString); safecall;
    function Get_Start: WideString; safecall;
    property type_: WideString read Get_type_ write Set_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: WordBool read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property size: Integer read Get_size write Set_size;
    property maxLength: Integer read Get_maxLength write Set_maxLength;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property defaultValue: WideString read Get_defaultValue write Set_defaultValue;
    property readOnly: WordBool read Get_readOnly write Set_readOnly;
    property indeterminate: WordBool read Get_indeterminate write Set_indeterminate;
    property defaultChecked: WordBool read Get_defaultChecked write Set_defaultChecked;
    property checked: WordBool read Get_checked write Set_checked;
    property border: OleVariant read Get_border write Set_border;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property alt: WideString read Get_alt write Set_alt;
    property src: WideString read Get_src write Set_src;
    property lowsrc: WideString read Get_lowsrc write Set_lowsrc;
    property vrml: WideString read Get_vrml write Set_vrml;
    property dynsrc: WideString read Get_dynsrc write Set_dynsrc;
    property readyState: WideString read Get_readyState;
    property complete: WordBool read Get_complete;
    property loop: OleVariant read Get_loop write Set_loop;
    property align: WideString read Get_align write Set_align;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property onabort: OleVariant read Get_onabort write Set_onabort;
    property width: Integer read Get_width write Set_width;
    property height: Integer read Get_height write Set_height;
    property Start: WideString read Get_Start write Set_Start;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputElementDisp = dispinterface
    ['{3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString dispid 2000;
    property value: WideString dispid - 2147413011;
    property name: WideString dispid - 2147418112;
    property status: WordBool dispid 2001;
    property disabled: WordBool dispid - 2147418036;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid - 2147412082;
    property onselect: OleVariant dispid - 2147412102;
    property defaultValue: WideString dispid - 2147413029;
    property readOnly: WordBool dispid 2005;
    function createTextRange: IHTMLTxtRange; dispid 2006;
    property indeterminate: WordBool dispid 2007;
    property defaultChecked: WordBool dispid 2008;
    property checked: WordBool dispid 2009;
    property border: OleVariant dispid 2012;
    property vspace: Integer dispid 2013;
    property hspace: Integer dispid 2014;
    property alt: WideString dispid 2010;
    property src: WideString dispid 2011;
    property lowsrc: WideString dispid 2015;
    property vrml: WideString dispid 2016;
    property dynsrc: WideString dispid 2017;
    property readyState: WideString readonly dispid - 2147412996;
    property complete: WordBool readonly dispid 2018;
    property loop: OleVariant dispid 2019;
    property align: WideString dispid - 2147418039;
    property onload: OleVariant dispid - 2147412080;
    property onerror: OleVariant dispid - 2147412083;
    property onabort: OleVariant dispid - 2147412084;
    property width: Integer dispid - 2147418107;
    property height: Integer dispid - 2147418106;
    property Start: WideString dispid 2020;
  end;

// *********************************************************************//
// Interface: IHTMLInputElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F821-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputElement2 = interface(IDispatch)
    ['{3050F821-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_accept(const p: WideString); safecall;
    function Get_accept: WideString; safecall;
    procedure Set_useMap(const p: WideString); safecall;
    function Get_useMap: WideString; safecall;
    property accept: WideString read Get_accept write Set_accept;
    property useMap: WideString read Get_useMap write Set_useMap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F821-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputElement2Disp = dispinterface
    ['{3050F821-98B5-11CF-BB82-00AA00BDCE0B}']
    property accept: WideString dispid 2022;
    property useMap: WideString dispid 2023;
  end;

// *********************************************************************//
// Interface: IHTMLInputButtonElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputButtonElement = interface(IDispatch)
    ['{3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    function createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputButtonElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputButtonElementDisp = dispinterface
    ['{3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid - 2147413011;
    property name: WideString dispid - 2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid - 2147418036;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    function createTextRange: IHTMLTxtRange; dispid 2006;
  end;

// *********************************************************************//
// Interface: IHTMLInputHiddenElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputHiddenElement = interface(IDispatch)
    ['{3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    function createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputHiddenElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputHiddenElementDisp = dispinterface
    ['{3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid - 2147413011;
    property name: WideString dispid - 2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid - 2147418036;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    function createTextRange: IHTMLTxtRange; dispid 2006;
  end;

// *********************************************************************//
// Interface: IHTMLInputTextElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputTextElement = interface(IDispatch)
    ['{3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    procedure Set_defaultValue(const p: WideString); safecall;
    function Get_defaultValue: WideString; safecall;
    procedure Set_size(p: Integer); safecall;
    function Get_size: Integer; safecall;
    procedure Set_maxLength(p: Integer); safecall;
    function Get_maxLength: Integer; safecall;
    procedure select; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function Get_onselect: OleVariant; safecall;
    procedure Set_readOnly(p: WordBool); safecall;
    function Get_readOnly: WordBool; safecall;
    function createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property defaultValue: WideString read Get_defaultValue write Set_defaultValue;
    property size: Integer read Get_size write Set_size;
    property maxLength: Integer read Get_maxLength write Set_maxLength;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property readOnly: WordBool read Get_readOnly write Set_readOnly;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputTextElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputTextElementDisp = dispinterface
    ['{3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid - 2147413011;
    property name: WideString dispid - 2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid - 2147418036;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    property defaultValue: WideString dispid - 2147413029;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid - 2147412082;
    property onselect: OleVariant dispid - 2147412102;
    property readOnly: WordBool dispid 2005;
    function createTextRange: IHTMLTxtRange; dispid 2006;
  end;

// *********************************************************************//
// Interface: IHTMLInputFileElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputFileElement = interface(IDispatch)
    ['{3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    procedure Set_size(p: Integer); safecall;
    function Get_size: Integer; safecall;
    procedure Set_maxLength(p: Integer); safecall;
    function Get_maxLength: Integer; safecall;
    procedure select; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function Get_onselect: OleVariant; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    property type_: WideString read Get_type_;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property size: Integer read Get_size write Set_size;
    property maxLength: Integer read Get_maxLength write Set_maxLength;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property value: WideString read Get_value write Set_value;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputFileElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputFileElementDisp = dispinterface
    ['{3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property name: WideString dispid - 2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid - 2147418036;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid - 2147412082;
    property onselect: OleVariant dispid - 2147412102;
    property value: WideString dispid - 2147413011;
  end;

// *********************************************************************//
// Interface: IHTMLOptionButtonElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionButtonElement = interface(IDispatch)
    ['{3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    function Get_type_: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_checked(p: WordBool); safecall;
    function Get_checked: WordBool; safecall;
    procedure Set_defaultChecked(p: WordBool); safecall;
    function Get_defaultChecked: WordBool; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    procedure Set_status(p: WordBool); safecall;
    function Get_status: WordBool; safecall;
    procedure Set_indeterminate(p: WordBool); safecall;
    function Get_indeterminate: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    property value: WideString read Get_value write Set_value;
    property type_: WideString read Get_type_;
    property name: WideString read Get_name write Set_name;
    property checked: WordBool read Get_checked write Set_checked;
    property defaultChecked: WordBool read Get_defaultChecked write Set_defaultChecked;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property status: WordBool read Get_status write Set_status;
    property indeterminate: WordBool read Get_indeterminate write Set_indeterminate;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionButtonElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionButtonElementDisp = dispinterface
    ['{3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}']
    property value: WideString dispid - 2147413011;
    property type_: WideString readonly dispid 2000;
    property name: WideString dispid - 2147418112;
    property checked: WordBool dispid 2009;
    property defaultChecked: WordBool dispid 2008;
    property onchange: OleVariant dispid - 2147412082;
    property disabled: WordBool dispid - 2147418036;
    property status: WordBool dispid 2001;
    property indeterminate: WordBool dispid 2007;
    property form: IHTMLFormElement readonly dispid - 2147416108;
  end;

// *********************************************************************//
// Interface: IHTMLInputImage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputImage = interface(IDispatch)
    ['{3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function Get_border: OleVariant; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function Get_hspace: Integer; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function Get_alt: WideString; safecall;
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_lowsrc(const p: WideString); safecall;
    function Get_lowsrc: WideString; safecall;
    procedure Set_vrml(const p: WideString); safecall;
    function Get_vrml: WideString; safecall;
    procedure Set_dynsrc(const p: WideString); safecall;
    function Get_dynsrc: WideString; safecall;
    function Get_readyState: WideString; safecall;
    function Get_complete: WordBool; safecall;
    procedure Set_loop(p: OleVariant); safecall;
    function Get_loop: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_onabort(p: OleVariant); safecall;
    function Get_onabort: OleVariant; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_width(p: Integer); safecall;
    function Get_width: Integer; safecall;
    procedure Set_height(p: Integer); safecall;
    function Get_height: Integer; safecall;
    procedure Set_Start(const p: WideString); safecall;
    function Get_Start: WideString; safecall;
    property type_: WideString read Get_type_;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property border: OleVariant read Get_border write Set_border;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property alt: WideString read Get_alt write Set_alt;
    property src: WideString read Get_src write Set_src;
    property lowsrc: WideString read Get_lowsrc write Set_lowsrc;
    property vrml: WideString read Get_vrml write Set_vrml;
    property dynsrc: WideString read Get_dynsrc write Set_dynsrc;
    property readyState: WideString read Get_readyState;
    property complete: WordBool read Get_complete;
    property loop: OleVariant read Get_loop write Set_loop;
    property align: WideString read Get_align write Set_align;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property onabort: OleVariant read Get_onabort write Set_onabort;
    property name: WideString read Get_name write Set_name;
    property width: Integer read Get_width write Set_width;
    property height: Integer read Get_height write Set_height;
    property Start: WideString read Get_Start write Set_Start;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputImageDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputImageDisp = dispinterface
    ['{3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property disabled: WordBool dispid - 2147418036;
    property border: OleVariant dispid 2012;
    property vspace: Integer dispid 2013;
    property hspace: Integer dispid 2014;
    property alt: WideString dispid 2010;
    property src: WideString dispid 2011;
    property lowsrc: WideString dispid 2015;
    property vrml: WideString dispid 2016;
    property dynsrc: WideString dispid 2017;
    property readyState: WideString readonly dispid - 2147412996;
    property complete: WordBool readonly dispid 2018;
    property loop: OleVariant dispid 2019;
    property align: WideString dispid - 2147418039;
    property onload: OleVariant dispid - 2147412080;
    property onerror: OleVariant dispid - 2147412083;
    property onabort: OleVariant dispid - 2147412084;
    property name: WideString dispid - 2147418112;
    property width: Integer dispid - 2147418107;
    property height: Integer dispid - 2147418106;
    property Start: WideString dispid 2020;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLInputElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F57D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLInputElement = dispinterface
    ['{3050F57D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property type_: WideString dispid 2000;
    property value: WideString dispid - 2147413011;
    property name: WideString dispid - 2147418112;
    property status: WordBool dispid 2001;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid - 2147412082;
    property onselect: OleVariant dispid - 2147412102;
    property defaultValue: WideString dispid - 2147413029;
    property readOnly: WordBool dispid 2005;
    function createTextRange: IHTMLTxtRange; dispid 2006;
    property indeterminate: WordBool dispid 2007;
    property defaultChecked: WordBool dispid 2008;
    property checked: WordBool dispid 2009;
    property border: OleVariant dispid 2012;
    property vspace: Integer dispid 2013;
    property hspace: Integer dispid 2014;
    property alt: WideString dispid 2010;
    property src: WideString dispid 2011;
    property lowsrc: WideString dispid 2015;
    property vrml: WideString dispid 2016;
    property dynsrc: WideString dispid 2017;
    property complete: WordBool readonly dispid 2018;
    property loop: OleVariant dispid 2019;
    property align: WideString dispid - 2147418039;
    property onload: OleVariant dispid - 2147412080;
    property onerror: OleVariant dispid - 2147412083;
    property onabort: OleVariant dispid - 2147412084;
    property width: Integer dispid - 2147418107;
    property height: Integer dispid - 2147418106;
    property Start: WideString dispid 2020;
    property accept: WideString dispid 2022;
    property useMap: WideString dispid 2023;
  end;

// *********************************************************************//
// Interface: IHTMLTextAreaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextAreaElement = interface(IDispatch)
    ['{3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    procedure Set_defaultValue(const p: WideString); safecall;
    function Get_defaultValue: WideString; safecall;
    procedure select; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function Get_onselect: OleVariant; safecall;
    procedure Set_readOnly(p: WordBool); safecall;
    function Get_readOnly: WordBool; safecall;
    procedure Set_rows(p: Integer); safecall;
    function Get_rows: Integer; safecall;
    procedure Set_cols(p: Integer); safecall;
    function Get_cols: Integer; safecall;
    procedure Set_wrap(const p: WideString); safecall;
    function Get_wrap: WideString; safecall;
    function createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property defaultValue: WideString read Get_defaultValue write Set_defaultValue;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property readOnly: WordBool read Get_readOnly write Set_readOnly;
    property rows: Integer read Get_rows write Set_rows;
    property cols: Integer read Get_cols write Set_cols;
    property wrap: WideString read Get_wrap write Set_wrap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextAreaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextAreaElementDisp = dispinterface
    ['{3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid - 2147413011;
    property name: WideString dispid - 2147418112;
    property status: OleVariant dispid 2001;
    property disabled: WordBool dispid - 2147418036;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    property defaultValue: WideString dispid - 2147413029;
    procedure select; dispid 7005;
    property onchange: OleVariant dispid - 2147412082;
    property onselect: OleVariant dispid - 2147412102;
    property readOnly: WordBool dispid 7004;
    property rows: Integer dispid 7001;
    property cols: Integer dispid 7002;
    property wrap: WideString dispid 7003;
    function createTextRange: IHTMLTxtRange; dispid 7006;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTextAreaElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F521-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTextAreaElement = dispinterface
    ['{3050F521-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid - 2147413011;
    property name: WideString dispid - 2147418112;
    property status: OleVariant dispid 2001;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    property defaultValue: WideString dispid - 2147413029;
    procedure select; dispid 7005;
    property onchange: OleVariant dispid - 2147412082;
    property onselect: OleVariant dispid - 2147412102;
    property readOnly: WordBool dispid 7004;
    property rows: Integer dispid 7001;
    property cols: Integer dispid 7002;
    property wrap: WideString dispid 7003;
    function createTextRange: IHTMLTxtRange; dispid 7006;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLRichtextElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F54D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLRichtextElement = dispinterface
    ['{3050F54D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid - 2147413011;
    property name: WideString dispid - 2147418112;
    property status: OleVariant dispid 2001;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    property defaultValue: WideString dispid - 2147413029;
    procedure select; dispid 7005;
    property onchange: OleVariant dispid - 2147412082;
    property onselect: OleVariant dispid - 2147412102;
    property readOnly: WordBool dispid 7004;
    property rows: Integer dispid 7001;
    property cols: Integer dispid 7002;
    property wrap: WideString dispid 7003;
    function createTextRange: IHTMLTxtRange; dispid 7006;
  end;

// *********************************************************************//
// Interface: IHTMLButtonElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLButtonElement = interface(IDispatch)
    ['{3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    function createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLButtonElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLButtonElementDisp = dispinterface
    ['{3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid - 2147413011;
    property name: WideString dispid - 2147418112;
    property status: OleVariant dispid 8001;
    property disabled: WordBool dispid - 2147418036;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    function createTextRange: IHTMLTxtRange; dispid 8002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLButtonElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLButtonElement = dispinterface
    ['{3050F51F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid - 2147413011;
    property name: WideString dispid - 2147418112;
    property status: OleVariant dispid 8001;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    function createTextRange: IHTMLTxtRange; dispid 8002;
  end;

// *********************************************************************//
// DispIntf:  HTMLMarqueeElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLMarqueeElementEvents2 = dispinterface
    ['{3050F61F-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onchange(const pEvtObj: IHTMLEventObj); dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
    procedure onbounce(const pEvtObj: IHTMLEventObj); dispid 1009;
    procedure onfinish(const pEvtObj: IHTMLEventObj); dispid 1010;
    procedure onstart(const pEvtObj: IHTMLEventObj); dispid 1011;
  end;

// *********************************************************************//
// DispIntf:  HTMLMarqueeElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2B8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLMarqueeElementEvents = dispinterface
    ['{3050F2B8-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onchange; dispid 1001;
    procedure onselect; dispid 1006;
    procedure onbounce; dispid 1009;
    procedure onfinish; dispid 1010;
    procedure onstart; dispid 1011;
  end;

// *********************************************************************//
// Interface: IHTMLMarqueeElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMarqueeElement = interface(IDispatch)
    ['{3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_bgColor(p: OleVariant); safecall;
    function Get_bgColor: OleVariant; safecall;
    procedure Set_scrollDelay(p: Integer); safecall;
    function Get_scrollDelay: Integer; safecall;
    procedure Set_direction(const p: WideString); safecall;
    function Get_direction: WideString; safecall;
    procedure Set_behavior(const p: WideString); safecall;
    function Get_behavior: WideString; safecall;
    procedure Set_scrollAmount(p: Integer); safecall;
    function Get_scrollAmount: Integer; safecall;
    procedure Set_loop(p: Integer); safecall;
    function Get_loop: Integer; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function Get_hspace: Integer; safecall;
    procedure Set_onfinish(p: OleVariant); safecall;
    function Get_onfinish: OleVariant; safecall;
    procedure Set_onstart(p: OleVariant); safecall;
    function Get_onstart: OleVariant; safecall;
    procedure Set_onbounce(p: OleVariant); safecall;
    function Get_onbounce: OleVariant; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    procedure Set_trueSpeed(p: WordBool); safecall;
    function Get_trueSpeed: WordBool; safecall;
    procedure Start; safecall;
    procedure stop; safecall;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property scrollDelay: Integer read Get_scrollDelay write Set_scrollDelay;
    property direction: WideString read Get_direction write Set_direction;
    property behavior: WideString read Get_behavior write Set_behavior;
    property scrollAmount: Integer read Get_scrollAmount write Set_scrollAmount;
    property loop: Integer read Get_loop write Set_loop;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property onfinish: OleVariant read Get_onfinish write Set_onfinish;
    property onstart: OleVariant read Get_onstart write Set_onstart;
    property onbounce: OleVariant read Get_onbounce write Set_onbounce;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property trueSpeed: WordBool read Get_trueSpeed write Set_trueSpeed;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMarqueeElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMarqueeElementDisp = dispinterface
    ['{3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}']
    property bgColor: OleVariant dispid - 501;
    property scrollDelay: Integer dispid 6000;
    property direction: WideString dispid 6001;
    property behavior: WideString dispid 6002;
    property scrollAmount: Integer dispid 6003;
    property loop: Integer dispid 6004;
    property vspace: Integer dispid 6005;
    property hspace: Integer dispid 6006;
    property onfinish: OleVariant dispid - 2147412086;
    property onstart: OleVariant dispid - 2147412085;
    property onbounce: OleVariant dispid - 2147412092;
    property width: OleVariant dispid - 2147418107;
    property height: OleVariant dispid - 2147418106;
    property trueSpeed: WordBool dispid 6007;
    procedure Start; dispid 6010;
    procedure stop; dispid 6011;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLMarqueeElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F527-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLMarqueeElement = dispinterface
    ['{3050F527-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property bgColor: OleVariant dispid - 501;
    property scrollDelay: Integer dispid 6000;
    property direction: WideString dispid 6001;
    property behavior: WideString dispid 6002;
    property scrollAmount: Integer dispid 6003;
    property loop: Integer dispid 6004;
    property vspace: Integer dispid 6005;
    property hspace: Integer dispid 6006;
    property onfinish: OleVariant dispid - 2147412086;
    property onstart: OleVariant dispid - 2147412085;
    property onbounce: OleVariant dispid - 2147412092;
    property width: OleVariant dispid - 2147418107;
    property height: OleVariant dispid - 2147418106;
    property trueSpeed: WordBool dispid 6007;
    procedure Start; dispid 6010;
    procedure stop; dispid 6011;
  end;

// *********************************************************************//
// Interface: IHTMLHtmlElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHtmlElement = interface(IDispatch)
    ['{3050F81C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_version(const p: WideString); safecall;
    function Get_version: WideString; safecall;
    property version: WideString read Get_version write Set_version;
  end;

// *********************************************************************//
// DispIntf:  IHTMLHtmlElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHtmlElementDisp = dispinterface
    ['{3050F81C-98B5-11CF-BB82-00AA00BDCE0B}']
    property version: WideString dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLHeadElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHeadElement = interface(IDispatch)
    ['{3050F81D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_profile(const p: WideString); safecall;
    function Get_profile: WideString; safecall;
    property profile: WideString read Get_profile write Set_profile;
  end;

// *********************************************************************//
// DispIntf:  IHTMLHeadElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHeadElementDisp = dispinterface
    ['{3050F81D-98B5-11CF-BB82-00AA00BDCE0B}']
    property profile: WideString dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLTitleElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F322-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTitleElement = interface(IDispatch)
    ['{3050F322-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_text(const p: WideString); safecall;
    function Get_text: WideString; safecall;
    property text: WideString read Get_text write Set_text;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTitleElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F322-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTitleElementDisp = dispinterface
    ['{3050F322-98B5-11CF-BB82-00AA00BDCE0B}']
    property text: WideString dispid - 2147413011;
  end;

// *********************************************************************//
// Interface: IHTMLMetaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F203-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMetaElement = interface(IDispatch)
    ['{3050F203-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_httpEquiv(const p: WideString); safecall;
    function Get_httpEquiv: WideString; safecall;
    procedure Set_content(const p: WideString); safecall;
    function Get_content: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_url(const p: WideString); safecall;
    function Get_url: WideString; safecall;
    procedure Set_charset(const p: WideString); safecall;
    function Get_charset: WideString; safecall;
    property httpEquiv: WideString read Get_httpEquiv write Set_httpEquiv;
    property content: WideString read Get_content write Set_content;
    property name: WideString read Get_name write Set_name;
    property url: WideString read Get_url write Set_url;
    property charset: WideString read Get_charset write Set_charset;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMetaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F203-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMetaElementDisp = dispinterface
    ['{3050F203-98B5-11CF-BB82-00AA00BDCE0B}']
    property httpEquiv: WideString dispid 1001;
    property content: WideString dispid 1002;
    property name: WideString dispid - 2147418112;
    property url: WideString dispid 1003;
    property charset: WideString dispid 1013;
  end;

// *********************************************************************//
// Interface: IHTMLMetaElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMetaElement2 = interface(IDispatch)
    ['{3050F81F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_scheme(const p: WideString); safecall;
    function Get_scheme: WideString; safecall;
    property scheme: WideString read Get_scheme write Set_scheme;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMetaElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMetaElement2Disp = dispinterface
    ['{3050F81F-98B5-11CF-BB82-00AA00BDCE0B}']
    property scheme: WideString dispid 1020;
  end;

// *********************************************************************//
// Interface: IHTMLBaseElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F204-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBaseElement = interface(IDispatch)
    ['{3050F204-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    procedure Set_target(const p: WideString); safecall;
    function Get_target: WideString; safecall;
    property href: WideString read Get_href write Set_href;
    property target: WideString read Get_target write Set_target;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBaseElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F204-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBaseElementDisp = dispinterface
    ['{3050F204-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: WideString dispid 1003;
    property target: WideString dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLIsIndexElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F206-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIsIndexElement = interface(IDispatch)
    ['{3050F206-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_prompt(const p: WideString); safecall;
    function Get_prompt: WideString; safecall;
    procedure Set_action(const p: WideString); safecall;
    function Get_action: WideString; safecall;
    property prompt: WideString read Get_prompt write Set_prompt;
    property action: WideString read Get_action write Set_action;
  end;

// *********************************************************************//
// DispIntf:  IHTMLIsIndexElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F206-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIsIndexElementDisp = dispinterface
    ['{3050F206-98B5-11CF-BB82-00AA00BDCE0B}']
    property prompt: WideString dispid 1010;
    property action: WideString dispid 1011;
  end;

// *********************************************************************//
// Interface: IHTMLIsIndexElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIsIndexElement2 = interface(IDispatch)
    ['{3050F82F-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_form: IHTMLFormElement; safecall;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLIsIndexElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIsIndexElement2Disp = dispinterface
    ['{3050F82F-98B5-11CF-BB82-00AA00BDCE0B}']
    property form: IHTMLFormElement readonly dispid 1012;
  end;

// *********************************************************************//
// Interface: IHTMLNextIdElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F207-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNextIdElement = interface(IDispatch)
    ['{3050F207-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_n(const p: WideString); safecall;
    function Get_n: WideString; safecall;
    property n: WideString read Get_n write Set_n;
  end;

// *********************************************************************//
// DispIntf:  IHTMLNextIdElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F207-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNextIdElementDisp = dispinterface
    ['{3050F207-98B5-11CF-BB82-00AA00BDCE0B}']
    property n: WideString dispid 1012;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLHtmlElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F560-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLHtmlElement = dispinterface
    ['{3050F560-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property version: WideString dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLHeadElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F561-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLHeadElement = dispinterface
    ['{3050F561-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property profile: WideString dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTitleElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F516-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTitleElement = dispinterface
    ['{3050F516-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property text: WideString dispid - 2147413011;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLMetaElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F517-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLMetaElement = dispinterface
    ['{3050F517-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property httpEquiv: WideString dispid 1001;
    property content: WideString dispid 1002;
    property name: WideString dispid - 2147418112;
    property url: WideString dispid 1003;
    property charset: WideString dispid 1013;
    property scheme: WideString dispid 1020;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBaseElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F518-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBaseElement = dispinterface
    ['{3050F518-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property href: WideString dispid 1003;
    property target: WideString dispid 1004;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLIsIndexElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F519-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLIsIndexElement = dispinterface
    ['{3050F519-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property prompt: WideString dispid 1010;
    property action: WideString dispid 1011;
    property form: IHTMLFormElement readonly dispid 1012;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLNextIdElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLNextIdElement = dispinterface
    ['{3050F51A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property n: WideString dispid 1012;
  end;

// *********************************************************************//
// Interface: IHTMLBaseFontElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F202-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBaseFontElement = interface(IDispatch)
    ['{3050F202-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_color(p: OleVariant); safecall;
    function Get_color: OleVariant; safecall;
    procedure Set_face(const p: WideString); safecall;
    function Get_face: WideString; safecall;
    procedure Set_size(p: Integer); safecall;
    function Get_size: Integer; safecall;
    property color: OleVariant read Get_color write Set_color;
    property face: WideString read Get_face write Set_face;
    property size: Integer read Get_size write Set_size;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBaseFontElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F202-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBaseFontElementDisp = dispinterface
    ['{3050F202-98B5-11CF-BB82-00AA00BDCE0B}']
    property color: OleVariant dispid - 2147413110;
    property face: WideString dispid - 2147413094;
    property size: Integer dispid - 2147413086;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBaseFontElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F504-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBaseFontElement = dispinterface
    ['{3050F504-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property color: OleVariant dispid - 2147413110;
    property face: WideString dispid - 2147413094;
    property size: Integer dispid - 2147413086;
  end;

// *********************************************************************//
// Interface: IHTMLUnknownElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F209-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUnknownElement = interface(IDispatch)
    ['{3050F209-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLUnknownElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F209-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUnknownElementDisp = dispinterface
    ['{3050F209-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTMLUnknownElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F539-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLUnknownElement = dispinterface
    ['{3050F539-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
  end;

// *********************************************************************//
// Interface: IOmHistory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FECEAAA2-8405-11CF-8BA1-00AA00476DA6}
// *********************************************************************//
  IOmHistory = interface(IDispatch)
    ['{FECEAAA2-8405-11CF-8BA1-00AA00476DA6}']
    function Get_length: Smallint; safecall;
    procedure back(var pvargdistance: OleVariant); safecall;
    procedure forward(var pvargdistance: OleVariant); safecall;
    procedure go(var pvargdistance: OleVariant); safecall;
    property length: Smallint read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IOmHistoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FECEAAA2-8405-11CF-8BA1-00AA00476DA6}
// *********************************************************************//
  IOmHistoryDisp = dispinterface
    ['{FECEAAA2-8405-11CF-8BA1-00AA00476DA6}']
    property length: Smallint readonly dispid 1;
    procedure back(var pvargdistance: OleVariant); dispid 2;
    procedure forward(var pvargdistance: OleVariant); dispid 3;
    procedure go(var pvargdistance: OleVariant); dispid 4;
  end;

// *********************************************************************//
// Interface: IHTMLMimeTypesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMimeTypesCollection = interface(IDispatch)
    ['{3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMimeTypesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMimeTypesCollectionDisp = dispinterface
    ['{3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface: IHTMLPluginsCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPluginsCollection = interface(IDispatch)
    ['{3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    procedure refresh(reload: WordBool); safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLPluginsCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPluginsCollectionDisp = dispinterface
    ['{3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1;
    procedure refresh(reload: WordBool); dispid 2;
  end;

// *********************************************************************//
// Interface: IHTMLOpsProfile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F401-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOpsProfile = interface(IDispatch)
    ['{3050F401-98B5-11CF-BB82-00AA00BDCE0B}']
    function addRequest(const name: WideString; reserved: OleVariant): WordBool; safecall;
    procedure clearRequest; safecall;
    procedure doRequest(usage: OleVariant; fname: OleVariant; domain: OleVariant; path: OleVariant;
      expire: OleVariant; reserved: OleVariant); safecall;
    function getAttribute(const name: WideString): WideString; safecall;
    function setAttribute(const name: WideString; const value: WideString; prefs: OleVariant): WordBool; safecall;
    function commitChanges: WordBool; safecall;
    function addReadRequest(const name: WideString; reserved: OleVariant): WordBool; safecall;
    procedure doReadRequest(usage: OleVariant; fname: OleVariant; domain: OleVariant;
      path: OleVariant; expire: OleVariant; reserved: OleVariant); safecall;
    function doWriteRequest: WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOpsProfileDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F401-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOpsProfileDisp = dispinterface
    ['{3050F401-98B5-11CF-BB82-00AA00BDCE0B}']
    function addRequest(const name: WideString; reserved: OleVariant): WordBool; dispid 1;
    procedure clearRequest; dispid 2;
    procedure doRequest(usage: OleVariant; fname: OleVariant; domain: OleVariant; path: OleVariant;
      expire: OleVariant; reserved: OleVariant); dispid 3;
    function getAttribute(const name: WideString): WideString; dispid 4;
    function setAttribute(const name: WideString; const value: WideString; prefs: OleVariant): WordBool; dispid 5;
    function commitChanges: WordBool; dispid 6;
    function addReadRequest(const name: WideString; reserved: OleVariant): WordBool; dispid 7;
    procedure doReadRequest(usage: OleVariant; fname: OleVariant; domain: OleVariant;
      path: OleVariant; expire: OleVariant; reserved: OleVariant); dispid 8;
    function doWriteRequest: WordBool; dispid 9;
  end;

// *********************************************************************//
// Interface: IOmNavigator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FECEAAA5-8405-11CF-8BA1-00AA00476DA6}
// *********************************************************************//
  IOmNavigator = interface(IDispatch)
    ['{FECEAAA5-8405-11CF-8BA1-00AA00476DA6}']
    function Get_appCodeName: WideString; safecall;
    function Get_appName: WideString; safecall;
    function Get_appVersion: WideString; safecall;
    function Get_userAgent: WideString; safecall;
    function javaEnabled: WordBool; safecall;
    function taintEnabled: WordBool; safecall;
    function Get_mimeTypes: IHTMLMimeTypesCollection; safecall;
    function Get_plugins: IHTMLPluginsCollection; safecall;
    function Get_cookieEnabled: WordBool; safecall;
    function Get_opsProfile: IHTMLOpsProfile; safecall;
    function toString: WideString; safecall;
    function Get_cpuClass: WideString; safecall;
    function Get_systemLanguage: WideString; safecall;
    function Get_browserLanguage: WideString; safecall;
    function Get_userLanguage: WideString; safecall;
    function Get_platform: WideString; safecall;
    function Get_appMinorVersion: WideString; safecall;
    function Get_connectionSpeed: Integer; safecall;
    function Get_onLine: WordBool; safecall;
    function Get_userProfile: IHTMLOpsProfile; safecall;
    property appCodeName: WideString read Get_appCodeName;
    property appName: WideString read Get_appName;
    property appVersion: WideString read Get_appVersion;
    property userAgent: WideString read Get_userAgent;
    property mimeTypes: IHTMLMimeTypesCollection read Get_mimeTypes;
    property plugins: IHTMLPluginsCollection read Get_plugins;
    property cookieEnabled: WordBool read Get_cookieEnabled;
    property opsProfile: IHTMLOpsProfile read Get_opsProfile;
    property cpuClass: WideString read Get_cpuClass;
    property systemLanguage: WideString read Get_systemLanguage;
    property browserLanguage: WideString read Get_browserLanguage;
    property userLanguage: WideString read Get_userLanguage;
    property platform: WideString read Get_platform;
    property appMinorVersion: WideString read Get_appMinorVersion;
    property connectionSpeed: Integer read Get_connectionSpeed;
    property onLine: WordBool read Get_onLine;
    property userProfile: IHTMLOpsProfile read Get_userProfile;
  end;

// *********************************************************************//
// DispIntf:  IOmNavigatorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FECEAAA5-8405-11CF-8BA1-00AA00476DA6}
// *********************************************************************//
  IOmNavigatorDisp = dispinterface
    ['{FECEAAA5-8405-11CF-8BA1-00AA00476DA6}']
    property appCodeName: WideString readonly dispid 1;
    property appName: WideString readonly dispid 2;
    property appVersion: WideString readonly dispid 3;
    property userAgent: WideString readonly dispid 4;
    function javaEnabled: WordBool; dispid 5;
    function taintEnabled: WordBool; dispid 6;
    property mimeTypes: IHTMLMimeTypesCollection readonly dispid 7;
    property plugins: IHTMLPluginsCollection readonly dispid 8;
    property cookieEnabled: WordBool readonly dispid 9;
    property opsProfile: IHTMLOpsProfile readonly dispid 10;
    function toString: WideString; dispid 11;
    property cpuClass: WideString readonly dispid 12;
    property systemLanguage: WideString readonly dispid 13;
    property browserLanguage: WideString readonly dispid 14;
    property userLanguage: WideString readonly dispid 15;
    property platform: WideString readonly dispid 16;
    property appMinorVersion: WideString readonly dispid 17;
    property connectionSpeed: Integer readonly dispid 18;
    property onLine: WordBool readonly dispid 19;
    property userProfile: IHTMLOpsProfile readonly dispid 20;
  end;

// *********************************************************************//
// Interface: IHTMLLocation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {163BB1E0-6E00-11CF-837A-48DC04C10000}
// *********************************************************************//
  IHTMLLocation = interface(IDispatch)
    ['{163BB1E0-6E00-11CF-837A-48DC04C10000}']
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    procedure Set_protocol(const p: WideString); safecall;
    function Get_protocol: WideString; safecall;
    procedure Set_host(const p: WideString); safecall;
    function Get_host: WideString; safecall;
    procedure Set_hostname(const p: WideString); safecall;
    function Get_hostname: WideString; safecall;
    procedure Set_port(const p: WideString); safecall;
    function Get_port: WideString; safecall;
    procedure Set_pathname(const p: WideString); safecall;
    function Get_pathname: WideString; safecall;
    procedure Set_search(const p: WideString); safecall;
    function Get_search: WideString; safecall;
    procedure Set_hash(const p: WideString); safecall;
    function Get_hash: WideString; safecall;
    procedure reload(flag: WordBool); safecall;
    procedure replace(const bstr: WideString); safecall;
    procedure assign(const bstr: WideString); safecall;
    function toString: WideString; safecall;
    property href: WideString read Get_href write Set_href;
    property protocol: WideString read Get_protocol write Set_protocol;
    property host: WideString read Get_host write Set_host;
    property hostname: WideString read Get_hostname write Set_hostname;
    property port: WideString read Get_port write Set_port;
    property pathname: WideString read Get_pathname write Set_pathname;
    property search: WideString read Get_search write Set_search;
    property hash: WideString read Get_hash write Set_hash;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLocationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {163BB1E0-6E00-11CF-837A-48DC04C10000}
// *********************************************************************//
  IHTMLLocationDisp = dispinterface
    ['{163BB1E0-6E00-11CF-837A-48DC04C10000}']
    property href: WideString dispid 0;
    property protocol: WideString dispid 1;
    property host: WideString dispid 2;
    property hostname: WideString dispid 3;
    property port: WideString dispid 4;
    property pathname: WideString dispid 5;
    property search: WideString dispid 6;
    property hash: WideString dispid 7;
    procedure reload(flag: WordBool); dispid 8;
    procedure replace(const bstr: WideString); dispid 9;
    procedure assign(const bstr: WideString); dispid 10;
    function toString: WideString; dispid 11;
  end;

// *********************************************************************//
// Interface: IHTMLBookmarkCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBookmarkCollection = interface(IDispatch)
    ['{3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(index: Integer): OleVariant; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBookmarkCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBookmarkCollectionDisp = dispinterface
    ['{3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1501;
    property _newEnum: IUnknown readonly dispid - 4;
    function item(index: Integer): OleVariant; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLDataTransfer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDataTransfer = interface(IDispatch)
    ['{3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}']
    function setData(const format: WideString; var data: OleVariant): WordBool; safecall;
    function getData(const format: WideString): OleVariant; safecall;
    function clearData(const format: WideString): WordBool; safecall;
    procedure Set_dropEffect(const p: WideString); safecall;
    function Get_dropEffect: WideString; safecall;
    procedure Set_effectAllowed(const p: WideString); safecall;
    function Get_effectAllowed: WideString; safecall;
    property dropEffect: WideString read Get_dropEffect write Set_dropEffect;
    property effectAllowed: WideString read Get_effectAllowed write Set_effectAllowed;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDataTransferDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDataTransferDisp = dispinterface
    ['{3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}']
    function setData(const format: WideString; var data: OleVariant): WordBool; dispid 1001;
    function getData(const format: WideString): OleVariant; dispid 1002;
    function clearData(const format: WideString): WordBool; dispid 1003;
    property dropEffect: WideString dispid 1004;
    property effectAllowed: WideString dispid 1005;
  end;

// *********************************************************************//
// Interface: IHTMLEventObj2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F48B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj2 = interface(IDispatch)
    ['{3050F48B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); safecall;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; safecall;
    procedure Set_propertyName(const p: WideString); safecall;
    function Get_propertyName: WideString; safecall;
    procedure _Set_bookmarks(const p: IHTMLBookmarkCollection); safecall;
    function Get_bookmarks: IHTMLBookmarkCollection; safecall;
    procedure _Set_recordset(const p: IDispatch); safecall;
    function Get_recordset: IDispatch; safecall;
    procedure Set_dataFld(const p: WideString); safecall;
    function Get_dataFld: WideString; safecall;
    procedure _Set_boundElements(const p: IHTMLElementCollection); safecall;
    function Get_boundElements: IHTMLElementCollection; safecall;
    procedure Set_repeat_(p: WordBool); safecall;
    function Get_repeat_: WordBool; safecall;
    procedure Set_srcUrn(const p: WideString); safecall;
    function Get_srcUrn: WideString; safecall;
    procedure _Set_srcElement(const p: IHTMLElement); safecall;
    function Get_srcElement: IHTMLElement; safecall;
    procedure Set_altKey(p: WordBool); safecall;
    function Get_altKey: WordBool; safecall;
    procedure Set_ctrlKey(p: WordBool); safecall;
    function Get_ctrlKey: WordBool; safecall;
    procedure Set_shiftKey(p: WordBool); safecall;
    function Get_shiftKey: WordBool; safecall;
    procedure _Set_fromElement(const p: IHTMLElement); safecall;
    function Get_fromElement: IHTMLElement; safecall;
    procedure _Set_toElement(const p: IHTMLElement); safecall;
    function Get_toElement: IHTMLElement; safecall;
    procedure Set_button(p: Integer); safecall;
    function Get_button: Integer; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    procedure Set_qualifier(const p: WideString); safecall;
    function Get_qualifier: WideString; safecall;
    procedure Set_reason(p: Integer); safecall;
    function Get_reason: Integer; safecall;
    procedure Set_x(p: Integer); safecall;
    function Get_x: Integer; safecall;
    procedure Set_y(p: Integer); safecall;
    function Get_y: Integer; safecall;
    procedure Set_clientX(p: Integer); safecall;
    function Get_clientX: Integer; safecall;
    procedure Set_clientY(p: Integer); safecall;
    function Get_clientY: Integer; safecall;
    procedure Set_offsetX(p: Integer); safecall;
    function Get_offsetX: Integer; safecall;
    procedure Set_offsetY(p: Integer); safecall;
    function Get_offsetY: Integer; safecall;
    procedure Set_screenX(p: Integer); safecall;
    function Get_screenX: Integer; safecall;
    procedure Set_screenY(p: Integer); safecall;
    function Get_screenY: Integer; safecall;
    procedure _Set_srcFilter(const p: IDispatch); safecall;
    function Get_srcFilter: IDispatch; safecall;
    function Get_dataTransfer: IHTMLDataTransfer; safecall;
    property propertyName: WideString read Get_propertyName write Set_propertyName;
    property bookmarks: IHTMLBookmarkCollection read Get_bookmarks write _Set_bookmarks;
    property recordset: IDispatch read Get_recordset write _Set_recordset;
    property dataFld: WideString read Get_dataFld write Set_dataFld;
    property boundElements: IHTMLElementCollection read Get_boundElements write _Set_boundElements;
    property repeat_: WordBool read Get_repeat_ write Set_repeat_;
    property srcUrn: WideString read Get_srcUrn write Set_srcUrn;
    property srcElement: IHTMLElement read Get_srcElement write _Set_srcElement;
    property altKey: WordBool read Get_altKey write Set_altKey;
    property ctrlKey: WordBool read Get_ctrlKey write Set_ctrlKey;
    property shiftKey: WordBool read Get_shiftKey write Set_shiftKey;
    property fromElement: IHTMLElement read Get_fromElement write _Set_fromElement;
    property toElement: IHTMLElement read Get_toElement write _Set_toElement;
    property button: Integer read Get_button write Set_button;
    property type_: WideString read Get_type_ write Set_type_;
    property qualifier: WideString read Get_qualifier write Set_qualifier;
    property reason: Integer read Get_reason write Set_reason;
    property x: Integer read Get_x write Set_x;
    property y: Integer read Get_y write Set_y;
    property clientX: Integer read Get_clientX write Set_clientX;
    property clientY: Integer read Get_clientY write Set_clientY;
    property offsetX: Integer read Get_offsetX write Set_offsetX;
    property offsetY: Integer read Get_offsetY write Set_offsetY;
    property screenX: Integer read Get_screenX write Set_screenX;
    property screenY: Integer read Get_screenY write Set_screenY;
    property srcFilter: IDispatch read Get_srcFilter write _Set_srcFilter;
    property dataTransfer: IHTMLDataTransfer read Get_dataTransfer;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEventObj2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F48B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj2Disp = dispinterface
    ['{3050F48B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property propertyName: WideString dispid 1027;
    property bookmarks: IHTMLBookmarkCollection dispid 1031;
    property recordset: IDispatch dispid 1032;
    property dataFld: WideString dispid 1033;
    property boundElements: IHTMLElementCollection dispid 1034;
    property repeat_: WordBool dispid 1035;
    property srcUrn: WideString dispid 1036;
    property srcElement: IHTMLElement dispid 1001;
    property altKey: WordBool dispid 1002;
    property ctrlKey: WordBool dispid 1003;
    property shiftKey: WordBool dispid 1004;
    property fromElement: IHTMLElement dispid 1009;
    property toElement: IHTMLElement dispid 1010;
    property button: Integer dispid 1012;
    property type_: WideString dispid 1013;
    property qualifier: WideString dispid 1014;
    property reason: Integer dispid 1015;
    property x: Integer dispid 1005;
    property y: Integer dispid 1006;
    property clientX: Integer dispid 1020;
    property clientY: Integer dispid 1021;
    property offsetX: Integer dispid 1022;
    property offsetY: Integer dispid 1023;
    property screenX: Integer dispid 1024;
    property screenY: Integer dispid 1025;
    property srcFilter: IDispatch dispid 1026;
    property dataTransfer: IHTMLDataTransfer readonly dispid 1037;
  end;

// *********************************************************************//
// Interface: IHTMLEventObj3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F680-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj3 = interface(IDispatch)
    ['{3050F680-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_contentOverflow: WordBool; safecall;
    procedure Set_shiftLeft(p: WordBool); safecall;
    function Get_shiftLeft: WordBool; safecall;
    procedure Set_altLeft(p: WordBool); safecall;
    function Get_altLeft: WordBool; safecall;
    procedure Set_ctrlLeft(p: WordBool); safecall;
    function Get_ctrlLeft: WordBool; safecall;
    function Get_imeCompositionChange: LONG_PTR; safecall;
    function Get_imeNotifyCommand: LONG_PTR; safecall;
    function Get_imeNotifyData: LONG_PTR; safecall;
    function Get_imeRequest: LONG_PTR; safecall;
    function Get_imeRequestData: LONG_PTR; safecall;
    function Get_keyboardLayout: LONG_PTR; safecall;
    function Get_behaviorCookie: Integer; safecall;
    function Get_behaviorPart: Integer; safecall;
    function Get_nextPage: WideString; safecall;
    property contentOverflow: WordBool read Get_contentOverflow;
    property shiftLeft: WordBool read Get_shiftLeft write Set_shiftLeft;
    property altLeft: WordBool read Get_altLeft write Set_altLeft;
    property ctrlLeft: WordBool read Get_ctrlLeft write Set_ctrlLeft;
    property imeCompositionChange: LONG_PTR read Get_imeCompositionChange;
    property imeNotifyCommand: LONG_PTR read Get_imeNotifyCommand;
    property imeNotifyData: LONG_PTR read Get_imeNotifyData;
    property imeRequest: LONG_PTR read Get_imeRequest;
    property imeRequestData: LONG_PTR read Get_imeRequestData;
    property keyboardLayout: LONG_PTR read Get_keyboardLayout;
    property behaviorCookie: Integer read Get_behaviorCookie;
    property behaviorPart: Integer read Get_behaviorPart;
    property nextPage: WideString read Get_nextPage;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEventObj3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F680-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj3Disp = dispinterface
    ['{3050F680-98B5-11CF-BB82-00AA00BDCE0B}']
    property contentOverflow: WordBool readonly dispid 1038;
    property shiftLeft: WordBool dispid 1039;
    property altLeft: WordBool dispid 1040;
    property ctrlLeft: WordBool dispid 1041;
    property imeCompositionChange: LONG_PTR readonly dispid 1042;
    property imeNotifyCommand: LONG_PTR readonly dispid 1043;
    property imeNotifyData: LONG_PTR readonly dispid 1044;
    property imeRequest: LONG_PTR readonly dispid 1046;
    property imeRequestData: LONG_PTR readonly dispid 1047;
    property keyboardLayout: LONG_PTR readonly dispid 1045;
    property behaviorCookie: Integer readonly dispid 1048;
    property behaviorPart: Integer readonly dispid 1049;
    property nextPage: WideString readonly dispid 1050;
  end;

// *********************************************************************//
// Interface: IHTMLEventObj4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F814-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj4 = interface(IDispatch)
    ['{3050F814-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_wheelDelta: Integer; safecall;
    property wheelDelta: Integer read Get_wheelDelta;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEventObj4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F814-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj4Disp = dispinterface
    ['{3050F814-98B5-11CF-BB82-00AA00BDCE0B}']
    property wheelDelta: Integer readonly dispid 1051;
  end;

// *********************************************************************//
// DispIntf:  DispCEventObj
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F558-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispCEventObj = dispinterface
    ['{3050F558-98B5-11CF-BB82-00AA00BDCE0B}']
    property returnValue: OleVariant dispid 1007;
    property cancelBubble: WordBool dispid 1008;
    property keyCode: Integer dispid 1011;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property propertyName: WideString dispid 1027;
    property bookmarks: IHTMLBookmarkCollection dispid 1031;
    property recordset: IDispatch dispid 1032;
    property dataFld: WideString dispid 1033;
    property boundElements: IHTMLElementCollection dispid 1034;
    property repeat_: WordBool dispid 1035;
    property srcUrn: WideString dispid 1036;
    property srcElement: IHTMLElement dispid 1001;
    property altKey: WordBool dispid 1002;
    property ctrlKey: WordBool dispid 1003;
    property shiftKey: WordBool dispid 1004;
    property fromElement: IHTMLElement dispid 1009;
    property toElement: IHTMLElement dispid 1010;
    property button: Integer dispid 1012;
    property type_: WideString dispid 1013;
    property qualifier: WideString dispid 1014;
    property reason: Integer dispid 1015;
    property x: Integer dispid 1005;
    property y: Integer dispid 1006;
    property clientX: Integer dispid 1020;
    property clientY: Integer dispid 1021;
    property offsetX: Integer dispid 1022;
    property offsetY: Integer dispid 1023;
    property screenX: Integer dispid 1024;
    property screenY: Integer dispid 1025;
    property srcFilter: IDispatch dispid 1026;
    property dataTransfer: IHTMLDataTransfer readonly dispid 1037;
    property contentOverflow: WordBool readonly dispid 1038;
    property shiftLeft: WordBool dispid 1039;
    property altLeft: WordBool dispid 1040;
    property ctrlLeft: WordBool dispid 1041;
    property imeCompositionChange: LONG_PTR readonly dispid 1042;
    property imeNotifyCommand: LONG_PTR readonly dispid 1043;
    property imeNotifyData: LONG_PTR readonly dispid 1044;
    property imeRequest: LONG_PTR readonly dispid 1046;
    property imeRequestData: LONG_PTR readonly dispid 1047;
    property keyboardLayout: LONG_PTR readonly dispid 1045;
    property behaviorCookie: Integer readonly dispid 1048;
    property behaviorPart: Integer readonly dispid 1049;
    property nextPage: WideString readonly dispid 1050;
    property wheelDelta: Integer readonly dispid 1051;
  end;

// *********************************************************************//
// DispIntf:  HTMLWindowEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F625-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLWindowEvents2 = dispinterface
    ['{3050F625-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onunload(const pEvtObj: IHTMLEventObj); dispid 1008;
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onerror(const description: WideString; const url: WideString; line: Integer); dispid 1002;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onbeforeunload(const pEvtObj: IHTMLEventObj); dispid 1017;
    procedure onbeforeprint(const pEvtObj: IHTMLEventObj); dispid 1024;
    procedure onafterprint(const pEvtObj: IHTMLEventObj); dispid 1025;
  end;

// *********************************************************************//
// DispIntf:  HTMLWindowEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {96A0A4E0-D062-11CF-94B6-00AA0060275C}
// *********************************************************************//
  HTMLWindowEvents = dispinterface
    ['{96A0A4E0-D062-11CF-94B6-00AA0060275C}']
    procedure onload; dispid 1003;
    procedure onunload; dispid 1008;
    function onhelp: WordBool; dispid - 2147418102;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onerror(const description: WideString; const url: WideString; line: Integer); dispid 1002;
    procedure onresize; dispid 1016;
    procedure onscroll; dispid 1014;
    procedure onbeforeunload; dispid 1017;
    procedure onbeforeprint; dispid 1024;
    procedure onafterprint; dispid 1025;
  end;

// *********************************************************************//
// Interface: IHTMLDocument2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4425-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLDocument2 = interface(IHTMLDocument)
    ['{332C4425-26CB-11D0-B483-00C04FD90119}']
    function Get_all: IHTMLElementCollection; safecall;
    function Get_body: IHTMLElement; safecall;
    function Get_activeElement: IHTMLElement; safecall;
    function Get_images: IHTMLElementCollection; safecall;
    function Get_applets: IHTMLElementCollection; safecall;
    function Get_links: IHTMLElementCollection; safecall;
    function Get_forms: IHTMLElementCollection; safecall;
    function Get_anchors: IHTMLElementCollection; safecall;
    procedure Set_title(const p: WideString); safecall;
    function Get_title: WideString; safecall;
    function Get_scripts: IHTMLElementCollection; safecall;
    procedure Set_designMode(const p: WideString); safecall;
    function Get_designMode: WideString; safecall;
    function Get_selection: IHTMLSelectionObject; safecall;
    function Get_readyState: WideString; safecall;
    function Get_frames: IHTMLFramesCollection2; safecall;
    function Get_embeds: IHTMLElementCollection; safecall;
    function Get_plugins: IHTMLElementCollection; safecall;
    procedure Set_alinkColor(p: OleVariant); safecall;
    function Get_alinkColor: OleVariant; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function Get_bgColor: OleVariant; safecall;
    procedure Set_fgColor(p: OleVariant); safecall;
    function Get_fgColor: OleVariant; safecall;
    procedure Set_linkColor(p: OleVariant); safecall;
    function Get_linkColor: OleVariant; safecall;
    procedure Set_vlinkColor(p: OleVariant); safecall;
    function Get_vlinkColor: OleVariant; safecall;
    function Get_referrer: WideString; safecall;
    function Get_location: IHTMLLocation; safecall;
    function Get_lastModified: WideString; safecall;
    procedure Set_url(const p: WideString); safecall;
    function Get_url: WideString; safecall;
    procedure Set_domain(const p: WideString); safecall;
    function Get_domain: WideString; safecall;
    procedure Set_cookie(const p: WideString); safecall;
    function Get_cookie: WideString; safecall;
    procedure Set_expando(p: WordBool); safecall;
    function Get_expando: WordBool; safecall;
    procedure Set_charset(const p: WideString); safecall;
    function Get_charset: WideString; safecall;
    procedure Set_defaultCharset(const p: WideString); safecall;
    function Get_defaultCharset: WideString; safecall;
    function Get_mimeType: WideString; safecall;
    function Get_fileSize: WideString; safecall;
    function Get_fileCreatedDate: WideString; safecall;
    function Get_fileModifiedDate: WideString; safecall;
    function Get_fileUpdatedDate: WideString; safecall;
    function Get_security: WideString; safecall;
    function Get_protocol: WideString; safecall;
    function Get_nameProp: WideString; safecall;
    procedure write(psarray: PSafeArray); safecall;
    procedure writeln(psarray: PSafeArray); safecall;
    function open(const url: WideString; name: OleVariant; features: OleVariant; replace: OleVariant): IDispatch; safecall;
    procedure close; safecall;
    procedure clear; safecall;
    function queryCommandSupported(const cmdID: WideString): WordBool; safecall;
    function queryCommandEnabled(const cmdID: WideString): WordBool; safecall;
    function queryCommandState(const cmdID: WideString): WordBool; safecall;
    function queryCommandIndeterm(const cmdID: WideString): WordBool; safecall;
    function queryCommandText(const cmdID: WideString): WideString; safecall;
    function queryCommandValue(const cmdID: WideString): OleVariant; safecall;
    function execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; safecall;
    function execCommandShowHelp(const cmdID: WideString): WordBool; safecall;
    function createElement(const eTag: WideString): IHTMLElement; safecall;
    procedure Set_onhelp(p: OleVariant); safecall;
    function Get_onhelp: OleVariant; safecall;
    procedure Set_onclick(p: OleVariant); safecall;
    function Get_onclick: OleVariant; safecall;
    procedure Set_ondblclick(p: OleVariant); safecall;
    function Get_ondblclick: OleVariant; safecall;
    procedure Set_onkeyup(p: OleVariant); safecall;
    function Get_onkeyup: OleVariant; safecall;
    procedure Set_onkeydown(p: OleVariant); safecall;
    function Get_onkeydown: OleVariant; safecall;
    procedure Set_onkeypress(p: OleVariant); safecall;
    function Get_onkeypress: OleVariant; safecall;
    procedure Set_onmouseup(p: OleVariant); safecall;
    function Get_onmouseup: OleVariant; safecall;
    procedure Set_onmousedown(p: OleVariant); safecall;
    function Get_onmousedown: OleVariant; safecall;
    procedure Set_onmousemove(p: OleVariant); safecall;
    function Get_onmousemove: OleVariant; safecall;
    procedure Set_onmouseout(p: OleVariant); safecall;
    function Get_onmouseout: OleVariant; safecall;
    procedure Set_onmouseover(p: OleVariant); safecall;
    function Get_onmouseover: OleVariant; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onafterupdate(p: OleVariant); safecall;
    function Get_onafterupdate: OleVariant; safecall;
    procedure Set_onrowexit(p: OleVariant); safecall;
    function Get_onrowexit: OleVariant; safecall;
    procedure Set_onrowenter(p: OleVariant); safecall;
    function Get_onrowenter: OleVariant; safecall;
    procedure Set_ondragstart(p: OleVariant); safecall;
    function Get_ondragstart: OleVariant; safecall;
    procedure Set_onselectstart(p: OleVariant); safecall;
    function Get_onselectstart: OleVariant; safecall;
    function elementFromPoint(x: Integer; y: Integer): IHTMLElement; safecall;
    function Get_parentWindow: IHTMLWindow2; safecall;
    function Get_styleSheets: IHTMLStyleSheetsCollection; safecall;
    procedure Set_onbeforeupdate(p: OleVariant); safecall;
    function Get_onbeforeupdate: OleVariant; safecall;
    procedure Set_onerrorupdate(p: OleVariant); safecall;
    function Get_onerrorupdate: OleVariant; safecall;
    function toString: WideString; safecall;
    function createStyleSheet(const bstrHref: WideString; lIndex: Integer): IHTMLStyleSheet; safecall;
    property all: IHTMLElementCollection read Get_all;
    property body: IHTMLElement read Get_body;
    property activeElement: IHTMLElement read Get_activeElement;
    property images: IHTMLElementCollection read Get_images;
    property applets: IHTMLElementCollection read Get_applets;
    property links: IHTMLElementCollection read Get_links;
    property forms: IHTMLElementCollection read Get_forms;
    property anchors: IHTMLElementCollection read Get_anchors;
    property title: WideString read Get_title write Set_title;
    property scripts: IHTMLElementCollection read Get_scripts;
    property designMode: WideString read Get_designMode write Set_designMode;
    property selection: IHTMLSelectionObject read Get_selection;
    property readyState: WideString read Get_readyState;
    property frames: IHTMLFramesCollection2 read Get_frames;
    property embeds: IHTMLElementCollection read Get_embeds;
    property plugins: IHTMLElementCollection read Get_plugins;
    property alinkColor: OleVariant read Get_alinkColor write Set_alinkColor;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property fgColor: OleVariant read Get_fgColor write Set_fgColor;
    property linkColor: OleVariant read Get_linkColor write Set_linkColor;
    property vlinkColor: OleVariant read Get_vlinkColor write Set_vlinkColor;
    property referrer: WideString read Get_referrer;
    property location: IHTMLLocation read Get_location;
    property lastModified: WideString read Get_lastModified;
    property url: WideString read Get_url write Set_url;
    property domain: WideString read Get_domain write Set_domain;
    property cookie: WideString read Get_cookie write Set_cookie;
    property expando: WordBool read Get_expando write Set_expando;
    property charset: WideString read Get_charset write Set_charset;
    property defaultCharset: WideString read Get_defaultCharset write Set_defaultCharset;
    property mimeType: WideString read Get_mimeType;
    property fileSize: WideString read Get_fileSize;
    property fileCreatedDate: WideString read Get_fileCreatedDate;
    property fileModifiedDate: WideString read Get_fileModifiedDate;
    property fileUpdatedDate: WideString read Get_fileUpdatedDate;
    property security: WideString read Get_security;
    property protocol: WideString read Get_protocol;
    property nameProp: WideString read Get_nameProp;
    property onhelp: OleVariant read Get_onhelp write Set_onhelp;
    property onclick: OleVariant read Get_onclick write Set_onclick;
    property ondblclick: OleVariant read Get_ondblclick write Set_ondblclick;
    property onkeyup: OleVariant read Get_onkeyup write Set_onkeyup;
    property onkeydown: OleVariant read Get_onkeydown write Set_onkeydown;
    property onkeypress: OleVariant read Get_onkeypress write Set_onkeypress;
    property onmouseup: OleVariant read Get_onmouseup write Set_onmouseup;
    property onmousedown: OleVariant read Get_onmousedown write Set_onmousedown;
    property onmousemove: OleVariant read Get_onmousemove write Set_onmousemove;
    property onmouseout: OleVariant read Get_onmouseout write Set_onmouseout;
    property onmouseover: OleVariant read Get_onmouseover write Set_onmouseover;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onafterupdate: OleVariant read Get_onafterupdate write Set_onafterupdate;
    property onrowexit: OleVariant read Get_onrowexit write Set_onrowexit;
    property onrowenter: OleVariant read Get_onrowenter write Set_onrowenter;
    property ondragstart: OleVariant read Get_ondragstart write Set_ondragstart;
    property onselectstart: OleVariant read Get_onselectstart write Set_onselectstart;
    property parentWindow: IHTMLWindow2 read Get_parentWindow;
    property styleSheets: IHTMLStyleSheetsCollection read Get_styleSheets;
    property onbeforeupdate: OleVariant read Get_onbeforeupdate write Set_onbeforeupdate;
    property onerrorupdate: OleVariant read Get_onerrorupdate write Set_onerrorupdate;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocument2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4425-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLDocument2Disp = dispinterface
    ['{332C4425-26CB-11D0-B483-00C04FD90119}']
    property all: IHTMLElementCollection readonly dispid 1003;
    property body: IHTMLElement readonly dispid 1004;
    property activeElement: IHTMLElement readonly dispid 1005;
    property images: IHTMLElementCollection readonly dispid 1011;
    property applets: IHTMLElementCollection readonly dispid 1008;
    property links: IHTMLElementCollection readonly dispid 1009;
    property forms: IHTMLElementCollection readonly dispid 1010;
    property anchors: IHTMLElementCollection readonly dispid 1007;
    property title: WideString dispid 1012;
    property scripts: IHTMLElementCollection readonly dispid 1013;
    property designMode: WideString dispid 1014;
    property selection: IHTMLSelectionObject readonly dispid 1017;
    property readyState: WideString readonly dispid 1018;
    property frames: IHTMLFramesCollection2 readonly dispid 1019;
    property embeds: IHTMLElementCollection readonly dispid 1015;
    property plugins: IHTMLElementCollection readonly dispid 1021;
    property alinkColor: OleVariant dispid 1022;
    property bgColor: OleVariant dispid - 501;
    property fgColor: OleVariant dispid - 2147413110;
    property linkColor: OleVariant dispid 1024;
    property vlinkColor: OleVariant dispid 1023;
    property referrer: WideString readonly dispid 1027;
    property location: IHTMLLocation readonly dispid 1026;
    property lastModified: WideString readonly dispid 1028;
    property url: WideString dispid 1025;
    property domain: WideString dispid 1029;
    property cookie: WideString dispid 1030;
    property expando: WordBool dispid 1031;
    property charset: WideString dispid 1032;
    property defaultCharset: WideString dispid 1033;
    property mimeType: WideString readonly dispid 1041;
    property fileSize: WideString readonly dispid 1042;
    property fileCreatedDate: WideString readonly dispid 1043;
    property fileModifiedDate: WideString readonly dispid 1044;
    property fileUpdatedDate: WideString readonly dispid 1045;
    property security: WideString readonly dispid 1046;
    property protocol: WideString readonly dispid 1047;
    property nameProp: WideString readonly dispid 1048;
    procedure write(psarray: {??PSafeArray} OleVariant); dispid 1054;
    procedure writeln(psarray: {??PSafeArray} OleVariant); dispid 1055;
    function open(const url: WideString; name: OleVariant; features: OleVariant; replace: OleVariant): IDispatch; dispid 1056;
    procedure close; dispid 1057;
    procedure clear; dispid 1058;
    function queryCommandSupported(const cmdID: WideString): WordBool; dispid 1059;
    function queryCommandEnabled(const cmdID: WideString): WordBool; dispid 1060;
    function queryCommandState(const cmdID: WideString): WordBool; dispid 1061;
    function queryCommandIndeterm(const cmdID: WideString): WordBool; dispid 1062;
    function queryCommandText(const cmdID: WideString): WideString; dispid 1063;
    function queryCommandValue(const cmdID: WideString): OleVariant; dispid 1064;
    function execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; dispid 1065;
    function execCommandShowHelp(const cmdID: WideString): WordBool; dispid 1066;
    function createElement(const eTag: WideString): IHTMLElement; dispid 1067;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseup: OleVariant dispid - 2147412109;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondragstart: OleVariant dispid - 2147412077;
    property onselectstart: OleVariant dispid - 2147412075;
    function elementFromPoint(x: Integer; y: Integer): IHTMLElement; dispid 1068;
    property parentWindow: IHTMLWindow2 readonly dispid 1034;
    property styleSheets: IHTMLStyleSheetsCollection readonly dispid 1069;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onerrorupdate: OleVariant dispid - 2147412074;
    function toString: WideString; dispid 1070;
    function createStyleSheet(const bstrHref: WideString; lIndex: Integer): IHTMLStyleSheet; dispid 1071;
    property Script: IDispatch readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLFramesCollection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4426-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLFramesCollection2 = interface(IDispatch)
    ['{332C4426-26CB-11D0-B483-00C04FD90119}']
    // !! API fix decl
    function item(const pvarIndex: OleVariant): OleVariant; safecall;
    function Get_length: Integer; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFramesCollection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4426-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLFramesCollection2Disp = dispinterface
    ['{332C4426-26CB-11D0-B483-00C04FD90119}']
    // !! API fix decl
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
    property length: Integer readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLWindow2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4427-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLWindow2 = interface(IHTMLFramesCollection2)
    ['{332C4427-26CB-11D0-B483-00C04FD90119}']
    function Get_frames: IHTMLFramesCollection2; safecall;
    procedure Set_defaultStatus(const p: WideString); safecall;
    function Get_defaultStatus: WideString; safecall;
    procedure Set_status(const p: WideString); safecall;
    function Get_status: WideString; safecall;
    function setTimeout(const expression: WideString; msec: Integer; var language: OleVariant): Integer; safecall;
    procedure clearTimeout(timerID: Integer); safecall;
    procedure alert(const message: WideString); safecall;
    function confirm(const message: WideString): WordBool; safecall;
    function prompt(const message: WideString; const defstr: WideString): OleVariant; safecall;
    function Get_Image: IHTMLImageElementFactory; safecall;
    function Get_location: IHTMLLocation; safecall;
    function Get_history: IOmHistory; safecall;
    procedure close; safecall;
    procedure Set_opener(p: OleVariant); safecall;
    function Get_opener: OleVariant; safecall;
    function Get_navigator: IOmNavigator; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    function Get_parent: IHTMLWindow2; safecall;
    function open(const url: WideString; const name: WideString; const features: WideString;
      replace: WordBool): IHTMLWindow2; safecall;
    function Get_self: IHTMLWindow2; safecall;
    function Get_top: IHTMLWindow2; safecall;
    function Get_window: IHTMLWindow2; safecall;
    procedure navigate(const url: WideString); safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function Get_onfocus: OleVariant; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function Get_onblur: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onbeforeunload(p: OleVariant); safecall;
    function Get_onbeforeunload: OleVariant; safecall;
    procedure Set_onunload(p: OleVariant); safecall;
    function Get_onunload: OleVariant; safecall;
    procedure Set_onhelp(p: OleVariant); safecall;
    function Get_onhelp: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_onresize(p: OleVariant); safecall;
    function Get_onresize: OleVariant; safecall;
    procedure Set_onscroll(p: OleVariant); safecall;
    function Get_onscroll: OleVariant; safecall;
    function Get_document: IHTMLDocument2; safecall;
    function Get_event: IHTMLEventObj; safecall;
    function Get__newEnum: IUnknown; safecall;
    function showModalDialog(const dialog: WideString; var varArgIn: OleVariant;
      var varOptions: OleVariant): OleVariant; safecall;
    procedure showHelp(const helpURL: WideString; helpArg: OleVariant; const features: WideString); safecall;
    function Get_screen: IHTMLScreen; safecall;
    function Get_Option: IHTMLOptionElementFactory; safecall;
    procedure focus; safecall;
    function Get_closed: WordBool; safecall;
    procedure blur; safecall;
    procedure scroll(x: Integer; y: Integer); safecall;
    function Get_clientInformation: IOmNavigator; safecall;
    function setInterval(const expression: WideString; msec: Integer; var language: OleVariant): Integer; safecall;
    procedure clearInterval(timerID: Integer); safecall;
    procedure Set_offscreenBuffering(p: OleVariant); safecall;
    function Get_offscreenBuffering: OleVariant; safecall;
    function execScript(const code: WideString; const language: WideString): OleVariant; safecall;
    function toString: WideString; safecall;
    procedure scrollBy(x: Integer; y: Integer); safecall;
    procedure scrollTo(x: Integer; y: Integer); safecall;
    procedure moveTo(x: Integer; y: Integer); safecall;
    procedure moveBy(x: Integer; y: Integer); safecall;
    procedure resizeTo(x: Integer; y: Integer); safecall;
    procedure resizeBy(x: Integer; y: Integer); safecall;
    function Get_external: IDispatch; safecall;
    property frames: IHTMLFramesCollection2 read Get_frames;
    property defaultStatus: WideString read Get_defaultStatus write Set_defaultStatus;
    property status: WideString read Get_status write Set_status;
    property Image: IHTMLImageElementFactory read Get_Image;
    property location: IHTMLLocation read Get_location;
    property history: IOmHistory read Get_history;
    property opener: OleVariant read Get_opener write Set_opener;
    property navigator: IOmNavigator read Get_navigator;
    property name: WideString read Get_name write Set_name;
    property parent: IHTMLWindow2 read Get_parent;
    property self: IHTMLWindow2 read Get_self;
    property top: IHTMLWindow2 read Get_top;
    property window: IHTMLWindow2 read Get_window;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onload: OleVariant read Get_onload write Set_onload;
    property onbeforeunload: OleVariant read Get_onbeforeunload write Set_onbeforeunload;
    property onunload: OleVariant read Get_onunload write Set_onunload;
    property onhelp: OleVariant read Get_onhelp write Set_onhelp;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property onresize: OleVariant read Get_onresize write Set_onresize;
    property onscroll: OleVariant read Get_onscroll write Set_onscroll;
    property document: IHTMLDocument2 read Get_document;
    property event: IHTMLEventObj read Get_event;
    property _newEnum: IUnknown read Get__newEnum;
    property screen: IHTMLScreen read Get_screen;
    property Option: IHTMLOptionElementFactory read Get_Option;
    property closed: WordBool read Get_closed;
    property clientInformation: IOmNavigator read Get_clientInformation;
    property offscreenBuffering: OleVariant read Get_offscreenBuffering write Set_offscreenBuffering;
    property external: IDispatch read Get_external;
  end;

// *********************************************************************//
// DispIntf:  IHTMLWindow2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4427-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLWindow2Disp = dispinterface
    ['{332C4427-26CB-11D0-B483-00C04FD90119}']
    property frames: IHTMLFramesCollection2 readonly dispid 1100;
    property defaultStatus: WideString dispid 1101;
    property status: WideString dispid 1102;
    function setTimeout(const expression: WideString; msec: Integer; var language: OleVariant): Integer; dispid 1172;
    procedure clearTimeout(timerID: Integer); dispid 1104;
    procedure alert(const message: WideString); dispid 1105;
    function confirm(const message: WideString): WordBool; dispid 1110;
    function prompt(const message: WideString; const defstr: WideString): OleVariant; dispid 1111;
    property Image: IHTMLImageElementFactory readonly dispid 1125;
    property location: IHTMLLocation readonly dispid 14;
    property history: IOmHistory readonly dispid 2;
    procedure close; dispid 3;
    property opener: OleVariant dispid 4;
    property navigator: IOmNavigator readonly dispid 5;
    property name: WideString dispid 11;
    property parent: IHTMLWindow2 readonly dispid 12;
    function open(const url: WideString; const name: WideString; const features: WideString;
      replace: WordBool): IHTMLWindow2; dispid 13;
    property self: IHTMLWindow2 readonly dispid 20;
    property top: IHTMLWindow2 readonly dispid 21;
    property window: IHTMLWindow2 readonly dispid 22;
    procedure navigate(const url: WideString); dispid 25;
    property onfocus: OleVariant dispid - 2147412098;
    property onblur: OleVariant dispid - 2147412097;
    property onload: OleVariant dispid - 2147412080;
    property onbeforeunload: OleVariant dispid - 2147412073;
    property onunload: OleVariant dispid - 2147412079;
    property onhelp: OleVariant dispid - 2147412099;
    property onerror: OleVariant dispid - 2147412083;
    property onresize: OleVariant dispid - 2147412076;
    property onscroll: OleVariant dispid - 2147412081;
    property document: IHTMLDocument2 readonly dispid 1151;
    property event: IHTMLEventObj readonly dispid 1152;
    property _newEnum: IUnknown readonly dispid 1153;
    function showModalDialog(const dialog: WideString; var varArgIn: OleVariant;
      var varOptions: OleVariant): OleVariant; dispid 1154;
    procedure showHelp(const helpURL: WideString; helpArg: OleVariant; const features: WideString); dispid 1155;
    property screen: IHTMLScreen readonly dispid 1156;
    property Option: IHTMLOptionElementFactory readonly dispid 1157;
    procedure focus; dispid 1158;
    property closed: WordBool readonly dispid 23;
    procedure blur; dispid 1159;
    procedure scroll(x: Integer; y: Integer); dispid 1160;
    property clientInformation: IOmNavigator readonly dispid 1161;
    function setInterval(const expression: WideString; msec: Integer; var language: OleVariant): Integer; dispid 1173;
    procedure clearInterval(timerID: Integer); dispid 1163;
    property offscreenBuffering: OleVariant dispid 1164;
    function execScript(const code: WideString; const language: WideString): OleVariant; dispid 1165;
    function toString: WideString; dispid 1166;
    procedure scrollBy(x: Integer; y: Integer); dispid 1167;
    procedure scrollTo(x: Integer; y: Integer); dispid 1168;
    procedure moveTo(x: Integer; y: Integer); dispid 6;
    procedure moveBy(x: Integer; y: Integer); dispid 7;
    procedure resizeTo(x: Integer; y: Integer); dispid 9;
    procedure resizeBy(x: Integer; y: Integer); dispid 8;
    property external: IDispatch readonly dispid 1169;
    // !! API fix decl
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
    property length: Integer readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLScreen
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F35C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScreen = interface(IDispatch)
    ['{3050F35C-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_colorDepth: Integer; safecall;
    procedure Set_bufferDepth(p: Integer); safecall;
    function Get_bufferDepth: Integer; safecall;
    function Get_width: Integer; safecall;
    function Get_height: Integer; safecall;
    procedure Set_updateInterval(p: Integer); safecall;
    function Get_updateInterval: Integer; safecall;
    function Get_availHeight: Integer; safecall;
    function Get_availWidth: Integer; safecall;
    function Get_fontSmoothingEnabled: WordBool; safecall;
    property colorDepth: Integer read Get_colorDepth;
    property bufferDepth: Integer read Get_bufferDepth write Set_bufferDepth;
    property width: Integer read Get_width;
    property height: Integer read Get_height;
    property updateInterval: Integer read Get_updateInterval write Set_updateInterval;
    property availHeight: Integer read Get_availHeight;
    property availWidth: Integer read Get_availWidth;
    property fontSmoothingEnabled: WordBool read Get_fontSmoothingEnabled;
  end;

// *********************************************************************//
// DispIntf:  IHTMLScreenDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F35C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScreenDisp = dispinterface
    ['{3050F35C-98B5-11CF-BB82-00AA00BDCE0B}']
    property colorDepth: Integer readonly dispid 1001;
    property bufferDepth: Integer dispid 1002;
    property width: Integer readonly dispid 1003;
    property height: Integer readonly dispid 1004;
    property updateInterval: Integer dispid 1005;
    property availHeight: Integer readonly dispid 1006;
    property availWidth: Integer readonly dispid 1007;
    property fontSmoothingEnabled: WordBool readonly dispid 1008;
  end;

// *********************************************************************//
// Interface: IHTMLWindow3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow3 = interface(IDispatch)
    ['{3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_screenLeft: Integer; safecall;
    function Get_screenTop: Integer; safecall;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; safecall;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); safecall;
    function setTimeout(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; safecall;
    function setInterval(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; safecall;
    procedure print; safecall;
    procedure Set_onbeforeprint(p: OleVariant); safecall;
    function Get_onbeforeprint: OleVariant; safecall;
    procedure Set_onafterprint(p: OleVariant); safecall;
    function Get_onafterprint: OleVariant; safecall;
    function Get_clipboardData: IHTMLDataTransfer; safecall;
    function showModelessDialog(const url: WideString; var varArgIn: OleVariant;
      var options: OleVariant): IHTMLWindow2; safecall;
    property screenLeft: Integer read Get_screenLeft;
    property screenTop: Integer read Get_screenTop;
    property onbeforeprint: OleVariant read Get_onbeforeprint write Set_onbeforeprint;
    property onafterprint: OleVariant read Get_onafterprint write Set_onafterprint;
    property clipboardData: IHTMLDataTransfer read Get_clipboardData;
  end;

// *********************************************************************//
// DispIntf:  IHTMLWindow3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow3Disp = dispinterface
    ['{3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}']
    property screenLeft: Integer readonly dispid 1170;
    property screenTop: Integer readonly dispid 1171;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    function setTimeout(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; dispid 1103;
    function setInterval(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; dispid 1162;
    procedure print; dispid 1174;
    property onbeforeprint: OleVariant dispid - 2147412046;
    property onafterprint: OleVariant dispid - 2147412045;
    property clipboardData: IHTMLDataTransfer readonly dispid 1175;
    function showModelessDialog(const url: WideString; var varArgIn: OleVariant;
      var options: OleVariant): IHTMLWindow2; dispid 1176;
  end;

// *********************************************************************//
// Interface: IHTMLFrameBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F311-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameBase = interface(IDispatch)
    ['{3050F311-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function Get_border: OleVariant; safecall;
    procedure Set_frameBorder(const p: WideString); safecall;
    function Get_frameBorder: WideString; safecall;
    procedure Set_frameSpacing(p: OleVariant); safecall;
    function Get_frameSpacing: OleVariant; safecall;
    procedure Set_marginWidth(p: OleVariant); safecall;
    function Get_marginWidth: OleVariant; safecall;
    procedure Set_marginHeight(p: OleVariant); safecall;
    function Get_marginHeight: OleVariant; safecall;
    procedure Set_noResize(p: WordBool); safecall;
    function Get_noResize: WordBool; safecall;
    procedure Set_scrolling(const p: WideString); safecall;
    function Get_scrolling: WideString; safecall;
    property src: WideString read Get_src write Set_src;
    property name: WideString read Get_name write Set_name;
    property border: OleVariant read Get_border write Set_border;
    property frameBorder: WideString read Get_frameBorder write Set_frameBorder;
    property frameSpacing: OleVariant read Get_frameSpacing write Set_frameSpacing;
    property marginWidth: OleVariant read Get_marginWidth write Set_marginWidth;
    property marginHeight: OleVariant read Get_marginHeight write Set_marginHeight;
    property noResize: WordBool read Get_noResize write Set_noResize;
    property scrolling: WideString read Get_scrolling write Set_scrolling;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F311-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameBaseDisp = dispinterface
    ['{3050F311-98B5-11CF-BB82-00AA00BDCE0B}']
    property src: WideString dispid - 2147415112;
    property name: WideString dispid - 2147418112;
    property border: OleVariant dispid - 2147415110;
    property frameBorder: WideString dispid - 2147415109;
    property frameSpacing: OleVariant dispid - 2147415108;
    property marginWidth: OleVariant dispid - 2147415107;
    property marginHeight: OleVariant dispid - 2147415106;
    property noResize: WordBool dispid - 2147415105;
    property scrolling: WideString dispid - 2147415104;
  end;

// *********************************************************************//
// Interface: IHTMLScreen2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F84A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScreen2 = interface(IDispatch)
    ['{3050F84A-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_logicalXDPI: Integer; safecall;
    function Get_logicalYDPI: Integer; safecall;
    function Get_deviceXDPI: Integer; safecall;
    function Get_deviceYDPI: Integer; safecall;
    property logicalXDPI: Integer read Get_logicalXDPI;
    property logicalYDPI: Integer read Get_logicalYDPI;
    property deviceXDPI: Integer read Get_deviceXDPI;
    property deviceYDPI: Integer read Get_deviceYDPI;
  end;

// *********************************************************************//
// DispIntf:  IHTMLScreen2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F84A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScreen2Disp = dispinterface
    ['{3050F84A-98B5-11CF-BB82-00AA00BDCE0B}']
    property logicalXDPI: Integer readonly dispid 1009;
    property logicalYDPI: Integer readonly dispid 1010;
    property deviceXDPI: Integer readonly dispid 1011;
    property deviceYDPI: Integer readonly dispid 1012;
  end;

// *********************************************************************//
// Interface: IHTMLWindow4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6CF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow4 = interface(IDispatch)
    ['{3050F6CF-98B5-11CF-BB82-00AA00BDCE0B}']
    function createPopup(var varArgIn: OleVariant): IDispatch; safecall;
    function Get_frameElement: IHTMLFrameBase; safecall;
    property frameElement: IHTMLFrameBase read Get_frameElement;
  end;

// *********************************************************************//
// DispIntf:  IHTMLWindow4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6CF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow4Disp = dispinterface
    ['{3050F6CF-98B5-11CF-BB82-00AA00BDCE0B}']
    function createPopup(var varArgIn: OleVariant): IDispatch; dispid 1180;
    property frameElement: IHTMLFrameBase readonly dispid 1181;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLScreen
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F591-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLScreen = dispinterface
    ['{3050F591-98B5-11CF-BB82-00AA00BDCE0B}']
    property colorDepth: Integer readonly dispid 1001;
    property bufferDepth: Integer dispid 1002;
    property width: Integer readonly dispid 1003;
    property height: Integer readonly dispid 1004;
    property updateInterval: Integer dispid 1005;
    property availHeight: Integer readonly dispid 1006;
    property availWidth: Integer readonly dispid 1007;
    property fontSmoothingEnabled: WordBool readonly dispid 1008;
    property logicalXDPI: Integer readonly dispid 1009;
    property logicalYDPI: Integer readonly dispid 1010;
    property deviceXDPI: Integer readonly dispid 1011;
    property deviceYDPI: Integer readonly dispid 1012;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLWindow2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLWindow2 = dispinterface
    ['{3050F55D-98B5-11CF-BB82-00AA00BDCE0B}']
    // !! API fix decl
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
    property length: Integer readonly dispid 1001;
    property frames: IHTMLFramesCollection2 readonly dispid 1100;
    property defaultStatus: WideString dispid 1101;
    property status: WideString dispid 1102;
    procedure clearTimeout(timerID: Integer); dispid 1104;
    procedure alert(const message: WideString); dispid 1105;
    function confirm(const message: WideString): WordBool; dispid 1110;
    function prompt(const message: WideString; const defstr: WideString): OleVariant; dispid 1111;
    property Image: IHTMLImageElementFactory readonly dispid 1125;
    property location: IHTMLLocation readonly dispid 14;
    property history: IOmHistory readonly dispid 2;
    procedure close; dispid 3;
    property opener: OleVariant dispid 4;
    property navigator: IOmNavigator readonly dispid 5;
    property name: WideString dispid 11;
    property parent: IHTMLWindow2 readonly dispid 12;
    function open(const url: WideString; const name: WideString; const features: WideString;
      replace: WordBool): IHTMLWindow2; dispid 13;
    property self: IHTMLWindow2 readonly dispid 20;
    property top: IHTMLWindow2 readonly dispid 21;
    property window: IHTMLWindow2 readonly dispid 22;
    procedure navigate(const url: WideString); dispid 25;
    property onfocus: OleVariant dispid - 2147412098;
    property onblur: OleVariant dispid - 2147412097;
    property onload: OleVariant dispid - 2147412080;
    property onbeforeunload: OleVariant dispid - 2147412073;
    property onunload: OleVariant dispid - 2147412079;
    property onhelp: OleVariant dispid - 2147412099;
    property onerror: OleVariant dispid - 2147412083;
    property onresize: OleVariant dispid - 2147412076;
    property onscroll: OleVariant dispid - 2147412081;
    property document: IHTMLDocument2 readonly dispid 1151;
    property event: IHTMLEventObj readonly dispid 1152;
    property _newEnum: IUnknown readonly dispid 1153;
    function showModalDialog(const dialog: WideString; var varArgIn: OleVariant;
      var varOptions: OleVariant): OleVariant; dispid 1154;
    procedure showHelp(const helpURL: WideString; helpArg: OleVariant; const features: WideString); dispid 1155;
    property screen: IHTMLScreen readonly dispid 1156;
    property Option: IHTMLOptionElementFactory readonly dispid 1157;
    procedure focus; dispid 1158;
    property closed: WordBool readonly dispid 23;
    procedure blur; dispid 1159;
    procedure scroll(x: Integer; y: Integer); dispid 1160;
    property clientInformation: IOmNavigator readonly dispid 1161;
    procedure clearInterval(timerID: Integer); dispid 1163;
    property offscreenBuffering: OleVariant dispid 1164;
    function execScript(const code: WideString; const language: WideString): OleVariant; dispid 1165;
    function toString: WideString; dispid 1166;
    procedure scrollBy(x: Integer; y: Integer); dispid 1167;
    procedure scrollTo(x: Integer; y: Integer); dispid 1168;
    procedure moveTo(x: Integer; y: Integer); dispid 6;
    procedure moveBy(x: Integer; y: Integer); dispid 7;
    procedure resizeTo(x: Integer; y: Integer); dispid 9;
    procedure resizeBy(x: Integer; y: Integer); dispid 8;
    property external: IDispatch readonly dispid 1169;
    property screenLeft: Integer readonly dispid 1170;
    property screenTop: Integer readonly dispid 1171;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    function setTimeout(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; dispid 1103;
    function setInterval(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; dispid 1162;
    procedure print; dispid 1174;
    property onbeforeprint: OleVariant dispid - 2147412046;
    property onafterprint: OleVariant dispid - 2147412045;
    property clipboardData: IHTMLDataTransfer readonly dispid 1175;
    function showModelessDialog(const url: WideString; var varArgIn: OleVariant;
      var options: OleVariant): IHTMLWindow2; dispid 1176;
    function createPopup(var varArgIn: OleVariant): IDispatch; dispid 1180;
    property frameElement: IHTMLFrameBase readonly dispid 1181;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLWindowProxy
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLWindowProxy = dispinterface
    ['{3050F55E-98B5-11CF-BB82-00AA00BDCE0B}']
    // !! API fix decl
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
    property length: Integer readonly dispid 1001;
    property frames: IHTMLFramesCollection2 readonly dispid 1100;
    property defaultStatus: WideString dispid 1101;
    property status: WideString dispid 1102;
    procedure clearTimeout(timerID: Integer); dispid 1104;
    procedure alert(const message: WideString); dispid 1105;
    function confirm(const message: WideString): WordBool; dispid 1110;
    function prompt(const message: WideString; const defstr: WideString): OleVariant; dispid 1111;
    property Image: IHTMLImageElementFactory readonly dispid 1125;
    property location: IHTMLLocation readonly dispid 14;
    property history: IOmHistory readonly dispid 2;
    procedure close; dispid 3;
    property opener: OleVariant dispid 4;
    property navigator: IOmNavigator readonly dispid 5;
    property name: WideString dispid 11;
    property parent: IHTMLWindow2 readonly dispid 12;
    function open(const url: WideString; const name: WideString; const features: WideString;
      replace: WordBool): IHTMLWindow2; dispid 13;
    property self: IHTMLWindow2 readonly dispid 20;
    property top: IHTMLWindow2 readonly dispid 21;
    property window: IHTMLWindow2 readonly dispid 22;
    procedure navigate(const url: WideString); dispid 25;
    property onfocus: OleVariant dispid - 2147412098;
    property onblur: OleVariant dispid - 2147412097;
    property onload: OleVariant dispid - 2147412080;
    property onbeforeunload: OleVariant dispid - 2147412073;
    property onunload: OleVariant dispid - 2147412079;
    property onhelp: OleVariant dispid - 2147412099;
    property onerror: OleVariant dispid - 2147412083;
    property onresize: OleVariant dispid - 2147412076;
    property onscroll: OleVariant dispid - 2147412081;
    property document: IHTMLDocument2 readonly dispid 1151;
    property event: IHTMLEventObj readonly dispid 1152;
    property _newEnum: IUnknown readonly dispid 1153;
    function showModalDialog(const dialog: WideString; var varArgIn: OleVariant;
      var varOptions: OleVariant): OleVariant; dispid 1154;
    procedure showHelp(const helpURL: WideString; helpArg: OleVariant; const features: WideString); dispid 1155;
    property screen: IHTMLScreen readonly dispid 1156;
    property Option: IHTMLOptionElementFactory readonly dispid 1157;
    procedure focus; dispid 1158;
    property closed: WordBool readonly dispid 23;
    procedure blur; dispid 1159;
    procedure scroll(x: Integer; y: Integer); dispid 1160;
    property clientInformation: IOmNavigator readonly dispid 1161;
    procedure clearInterval(timerID: Integer); dispid 1163;
    property offscreenBuffering: OleVariant dispid 1164;
    function execScript(const code: WideString; const language: WideString): OleVariant; dispid 1165;
    function toString: WideString; dispid 1166;
    procedure scrollBy(x: Integer; y: Integer); dispid 1167;
    procedure scrollTo(x: Integer; y: Integer); dispid 1168;
    procedure moveTo(x: Integer; y: Integer); dispid 6;
    procedure moveBy(x: Integer; y: Integer); dispid 7;
    procedure resizeTo(x: Integer; y: Integer); dispid 9;
    procedure resizeBy(x: Integer; y: Integer); dispid 8;
    property external: IDispatch readonly dispid 1169;
    property screenLeft: Integer readonly dispid 1170;
    property screenTop: Integer readonly dispid 1171;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    function setTimeout(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; dispid 1103;
    function setInterval(var expression: OleVariant; msec: Integer; var language: OleVariant): Integer; dispid 1162;
    procedure print; dispid 1174;
    property onbeforeprint: OleVariant dispid - 2147412046;
    property onafterprint: OleVariant dispid - 2147412045;
    property clipboardData: IHTMLDataTransfer readonly dispid 1175;
    function showModelessDialog(const url: WideString; var varArgIn: OleVariant;
      var options: OleVariant): IHTMLWindow2; dispid 1176;
    function createPopup(var varArgIn: OleVariant): IDispatch; dispid 1180;
    property frameElement: IHTMLFrameBase readonly dispid 1181;
  end;

// *********************************************************************//
// DispIntf:  HTMLDocumentEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F613-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLDocumentEvents2 = dispinterface
    ['{3050F613-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    function onstop(const pEvtObj: IHTMLEventObj): WordBool; dispid 1026;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onbeforeeditfocus(const pEvtObj: IHTMLEventObj); dispid 1027;
    procedure onselectionchange(const pEvtObj: IHTMLEventObj); dispid 1037;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
  end;

// *********************************************************************//
// DispIntf:  HTMLDocumentEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F260-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLDocumentEvents = dispinterface
    ['{3050F260-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    function onkeypress: WordBool; dispid - 603;
    procedure onmousedown; dispid - 605;
    procedure onmousemove; dispid - 606;
    procedure onmouseup; dispid - 607;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onreadystatechange; dispid - 609;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    function ondragstart: WordBool; dispid - 2147418101;
    function onselectstart: WordBool; dispid - 2147418100;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function oncontextmenu: WordBool; dispid 1023;
    function onstop: WordBool; dispid 1026;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onpropertychange; dispid - 2147418093;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onselectionchange; dispid 1037;
    function oncontrolselect: WordBool; dispid 1036;
    function onmousewheel: WordBool; dispid 1033;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    function onbeforeactivate: WordBool; dispid 1047;
    function onbeforedeactivate: WordBool; dispid 1034;
  end;

// *********************************************************************//
// Interface: IHTMLDocument3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F485-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument3 = interface(IDispatch)
    ['{3050F485-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure releaseCapture; safecall;
    procedure recalc(fForce: WordBool); safecall;
    function createTextNode(const text: WideString): IHTMLDOMNode; safecall;
    function Get_documentElement: IHTMLElement; safecall;
    function Get_uniqueID: WideString; safecall;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; safecall;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); safecall;
    procedure Set_onrowsdelete(p: OleVariant); safecall;
    function Get_onrowsdelete: OleVariant; safecall;
    procedure Set_onrowsinserted(p: OleVariant); safecall;
    function Get_onrowsinserted: OleVariant; safecall;
    procedure Set_oncellchange(p: OleVariant); safecall;
    function Get_oncellchange: OleVariant; safecall;
    procedure Set_ondatasetchanged(p: OleVariant); safecall;
    function Get_ondatasetchanged: OleVariant; safecall;
    procedure Set_ondataavailable(p: OleVariant); safecall;
    function Get_ondataavailable: OleVariant; safecall;
    procedure Set_ondatasetcomplete(p: OleVariant); safecall;
    function Get_ondatasetcomplete: OleVariant; safecall;
    procedure Set_onpropertychange(p: OleVariant); safecall;
    function Get_onpropertychange: OleVariant; safecall;
    procedure Set_dir(const p: WideString); safecall;
    function Get_dir: WideString; safecall;
    procedure Set_oncontextmenu(p: OleVariant); safecall;
    function Get_oncontextmenu: OleVariant; safecall;
    procedure Set_onstop(p: OleVariant); safecall;
    function Get_onstop: OleVariant; safecall;
    function createDocumentFragment: IHTMLDocument2; safecall;
    function Get_parentDocument: IHTMLDocument2; safecall;
    procedure Set_enableDownload(p: WordBool); safecall;
    function Get_enableDownload: WordBool; safecall;
    procedure Set_baseUrl(const p: WideString); safecall;
    function Get_baseUrl: WideString; safecall;
    function Get_childNodes: IDispatch; safecall;
    procedure Set_inheritStyleSheets(p: WordBool); safecall;
    function Get_inheritStyleSheets: WordBool; safecall;
    procedure Set_onbeforeeditfocus(p: OleVariant); safecall;
    function Get_onbeforeeditfocus: OleVariant; safecall;
    function getElementsByName(const v: WideString): IHTMLElementCollection; safecall;
    function getElementById(const v: WideString): IHTMLElement; safecall;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; safecall;
    property documentElement: IHTMLElement read Get_documentElement;
    property uniqueID: WideString read Get_uniqueID;
    property onrowsdelete: OleVariant read Get_onrowsdelete write Set_onrowsdelete;
    property onrowsinserted: OleVariant read Get_onrowsinserted write Set_onrowsinserted;
    property oncellchange: OleVariant read Get_oncellchange write Set_oncellchange;
    property ondatasetchanged: OleVariant read Get_ondatasetchanged write Set_ondatasetchanged;
    property ondataavailable: OleVariant read Get_ondataavailable write Set_ondataavailable;
    property ondatasetcomplete: OleVariant read Get_ondatasetcomplete write Set_ondatasetcomplete;
    property onpropertychange: OleVariant read Get_onpropertychange write Set_onpropertychange;
    property dir: WideString read Get_dir write Set_dir;
    property oncontextmenu: OleVariant read Get_oncontextmenu write Set_oncontextmenu;
    property onstop: OleVariant read Get_onstop write Set_onstop;
    property parentDocument: IHTMLDocument2 read Get_parentDocument;
    property enableDownload: WordBool read Get_enableDownload write Set_enableDownload;
    property baseUrl: WideString read Get_baseUrl write Set_baseUrl;
    property childNodes: IDispatch read Get_childNodes;
    property inheritStyleSheets: WordBool read Get_inheritStyleSheets write Set_inheritStyleSheets;
    property onbeforeeditfocus: OleVariant read Get_onbeforeeditfocus write Set_onbeforeeditfocus;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocument3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F485-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument3Disp = dispinterface
    ['{3050F485-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure releaseCapture; dispid 1072;
    procedure recalc(fForce: WordBool); dispid 1073;
    function createTextNode(const text: WideString): IHTMLDOMNode; dispid 1074;
    property documentElement: IHTMLElement readonly dispid 1075;
    property uniqueID: WideString readonly dispid 1077;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onpropertychange: OleVariant dispid - 2147412065;
    property dir: WideString dispid - 2147412995;
    property oncontextmenu: OleVariant dispid - 2147412047;
    property onstop: OleVariant dispid - 2147412044;
    function createDocumentFragment: IHTMLDocument2; dispid 1076;
    property parentDocument: IHTMLDocument2 readonly dispid 1078;
    property enableDownload: WordBool dispid 1079;
    property baseUrl: WideString dispid 1080;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property inheritStyleSheets: WordBool dispid 1082;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    function getElementsByName(const v: WideString): IHTMLElementCollection; dispid 1086;
    function getElementById(const v: WideString): IHTMLElement; dispid 1088;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid 1087;
  end;

// *********************************************************************//
// Interface: IHTMLDocument4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F69A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument4 = interface(IDispatch)
    ['{3050F69A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure focus; safecall;
    function hasFocus: WordBool; safecall;
    procedure Set_onselectionchange(p: OleVariant); safecall;
    function Get_onselectionchange: OleVariant; safecall;
    function Get_namespaces: IDispatch; safecall;
    function createDocumentFromUrl(const bstrUrl: WideString; const bstrOptions: WideString): IHTMLDocument2; safecall;
    procedure Set_media(const p: WideString); safecall;
    function Get_media: WideString; safecall;
    function CreateEventObject(var pvarEventObject: OleVariant): IHTMLEventObj; safecall;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; safecall;
    function createRenderStyle(const v: WideString): IHTMLRenderStyle; safecall;
    procedure Set_oncontrolselect(p: OleVariant); safecall;
    function Get_oncontrolselect: OleVariant; safecall;
    function Get_URLUnencoded: WideString; safecall;
    property onselectionchange: OleVariant read Get_onselectionchange write Set_onselectionchange;
    property namespaces: IDispatch read Get_namespaces;
    property media: WideString read Get_media write Set_media;
    property oncontrolselect: OleVariant read Get_oncontrolselect write Set_oncontrolselect;
    property URLUnencoded: WideString read Get_URLUnencoded;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocument4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F69A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument4Disp = dispinterface
    ['{3050F69A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure focus; dispid 1089;
    function hasFocus: WordBool; dispid 1090;
    property onselectionchange: OleVariant dispid - 2147412032;
    property namespaces: IDispatch readonly dispid 1091;
    function createDocumentFromUrl(const bstrUrl: WideString; const bstrOptions: WideString): IHTMLDocument2; dispid 1092;
    property media: WideString dispid 1093;
    function CreateEventObject(var pvarEventObject: OleVariant): IHTMLEventObj; dispid 1094;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid 1095;
    function createRenderStyle(const v: WideString): IHTMLRenderStyle; dispid 1096;
    property oncontrolselect: OleVariant dispid - 2147412033;
    property URLUnencoded: WideString readonly dispid 1097;
  end;

// *********************************************************************//
// Interface: IHTMLDocument5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument5 = interface(IDispatch)
    ['{3050F80C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onmousewheel(p: OleVariant); safecall;
    function Get_onmousewheel: OleVariant; safecall;
    function Get_doctype: IHTMLDOMNode; safecall;
    function Get_implementation_: IHTMLDOMImplementation; safecall;
    function createAttribute(const bstrattrName: WideString): IHTMLDOMAttribute; safecall;
    function createComment(const bstrdata: WideString): IHTMLDOMNode; safecall;
    procedure Set_onfocusin(p: OleVariant); safecall;
    function Get_onfocusin: OleVariant; safecall;
    procedure Set_onfocusout(p: OleVariant); safecall;
    function Get_onfocusout: OleVariant; safecall;
    procedure Set_onactivate(p: OleVariant); safecall;
    function Get_onactivate: OleVariant; safecall;
    procedure Set_ondeactivate(p: OleVariant); safecall;
    function Get_ondeactivate: OleVariant; safecall;
    procedure Set_onbeforeactivate(p: OleVariant); safecall;
    function Get_onbeforeactivate: OleVariant; safecall;
    procedure Set_onbeforedeactivate(p: OleVariant); safecall;
    function Get_onbeforedeactivate: OleVariant; safecall;
    function Get_compatMode: WideString; safecall;
    property onmousewheel: OleVariant read Get_onmousewheel write Set_onmousewheel;
    property doctype: IHTMLDOMNode read Get_doctype;
    property implementation_: IHTMLDOMImplementation read Get_implementation_;
    property onfocusin: OleVariant read Get_onfocusin write Set_onfocusin;
    property onfocusout: OleVariant read Get_onfocusout write Set_onfocusout;
    property onactivate: OleVariant read Get_onactivate write Set_onactivate;
    property ondeactivate: OleVariant read Get_ondeactivate write Set_ondeactivate;
    property onbeforeactivate: OleVariant read Get_onbeforeactivate write Set_onbeforeactivate;
    property onbeforedeactivate: OleVariant read Get_onbeforedeactivate write Set_onbeforedeactivate;
    property compatMode: WideString read Get_compatMode;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocument5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument5Disp = dispinterface
    ['{3050F80C-98B5-11CF-BB82-00AA00BDCE0B}']
    property onmousewheel: OleVariant dispid - 2147412036;
    property doctype: IHTMLDOMNode readonly dispid 1098;
    property implementation_: IHTMLDOMImplementation readonly dispid 1099;
    function createAttribute(const bstrattrName: WideString): IHTMLDOMAttribute; dispid 1100;
    function createComment(const bstrdata: WideString): IHTMLDOMNode; dispid 1101;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    property compatMode: WideString readonly dispid 1102;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDocument
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDocument = dispinterface
    ['{3050F55F-98B5-11CF-BB82-00AA00BDCE0B}']
    property Script: IDispatch readonly dispid 1001;
    property all: IHTMLElementCollection readonly dispid 1003;
    property body: IHTMLElement readonly dispid 1004;
    property activeElement: IHTMLElement readonly dispid 1005;
    property images: IHTMLElementCollection readonly dispid 1011;
    property applets: IHTMLElementCollection readonly dispid 1008;
    property links: IHTMLElementCollection readonly dispid 1009;
    property forms: IHTMLElementCollection readonly dispid 1010;
    property anchors: IHTMLElementCollection readonly dispid 1007;
    property title: WideString dispid 1012;
    property scripts: IHTMLElementCollection readonly dispid 1013;
    property designMode: WideString dispid 1014;
    property selection: IHTMLSelectionObject readonly dispid 1017;
    property readyState: WideString readonly dispid 1018;
    property frames: IHTMLFramesCollection2 readonly dispid 1019;
    property embeds: IHTMLElementCollection readonly dispid 1015;
    property plugins: IHTMLElementCollection readonly dispid 1021;
    property alinkColor: OleVariant dispid 1022;
    property bgColor: OleVariant dispid - 501;
    property fgColor: OleVariant dispid - 2147413110;
    property linkColor: OleVariant dispid 1024;
    property vlinkColor: OleVariant dispid 1023;
    property referrer: WideString readonly dispid 1027;
    property location: IHTMLLocation readonly dispid 1026;
    property lastModified: WideString readonly dispid 1028;
    property url: WideString dispid 1025;
    property domain: WideString dispid 1029;
    property cookie: WideString dispid 1030;
    property expando: WordBool dispid 1031;
    property charset: WideString dispid 1032;
    property defaultCharset: WideString dispid 1033;
    property mimeType: WideString readonly dispid 1041;
    property fileSize: WideString readonly dispid 1042;
    property fileCreatedDate: WideString readonly dispid 1043;
    property fileModifiedDate: WideString readonly dispid 1044;
    property fileUpdatedDate: WideString readonly dispid 1045;
    property security: WideString readonly dispid 1046;
    property protocol: WideString readonly dispid 1047;
    property nameProp: WideString readonly dispid 1048;
    procedure write(psarray: {??PSafeArray} OleVariant); dispid 1054;
    procedure writeln(psarray: {??PSafeArray} OleVariant); dispid 1055;
    function open(const url: WideString; name: OleVariant; features: OleVariant; replace: OleVariant): IDispatch; dispid 1056;
    procedure close; dispid 1057;
    procedure clear; dispid 1058;
    function queryCommandSupported(const cmdID: WideString): WordBool; dispid 1059;
    function queryCommandEnabled(const cmdID: WideString): WordBool; dispid 1060;
    function queryCommandState(const cmdID: WideString): WordBool; dispid 1061;
    function queryCommandIndeterm(const cmdID: WideString): WordBool; dispid 1062;
    function queryCommandText(const cmdID: WideString): WideString; dispid 1063;
    function queryCommandValue(const cmdID: WideString): OleVariant; dispid 1064;
    function execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; dispid 1065;
    function execCommandShowHelp(const cmdID: WideString): WordBool; dispid 1066;
    function createElement(const eTag: WideString): IHTMLElement; dispid 1067;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseup: OleVariant dispid - 2147412109;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondragstart: OleVariant dispid - 2147412077;
    property onselectstart: OleVariant dispid - 2147412075;
    function elementFromPoint(x: Integer; y: Integer): IHTMLElement; dispid 1068;
    property parentWindow: IHTMLWindow2 readonly dispid 1034;
    property styleSheets: IHTMLStyleSheetsCollection readonly dispid 1069;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onerrorupdate: OleVariant dispid - 2147412074;
    function toString: WideString; dispid 1070;
    function createStyleSheet(const bstrHref: WideString; lIndex: Integer): IHTMLStyleSheet; dispid 1071;
    procedure releaseCapture; dispid 1072;
    procedure recalc(fForce: WordBool); dispid 1073;
    function createTextNode(const text: WideString): IHTMLDOMNode; dispid 1074;
    property documentElement: IHTMLElement readonly dispid 1075;
    property uniqueID: WideString readonly dispid 1077;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onpropertychange: OleVariant dispid - 2147412065;
    property dir: WideString dispid - 2147412995;
    property oncontextmenu: OleVariant dispid - 2147412047;
    property onstop: OleVariant dispid - 2147412044;
    function createDocumentFragment: IHTMLDocument2; dispid 1076;
    property parentDocument: IHTMLDocument2 readonly dispid 1078;
    property enableDownload: WordBool dispid 1079;
    property baseUrl: WideString dispid 1080;
    property inheritStyleSheets: WordBool dispid 1082;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    function getElementsByName(const v: WideString): IHTMLElementCollection; dispid 1086;
    function getElementById(const v: WideString): IHTMLElement; dispid 1088;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid 1087;
    procedure focus; dispid 1089;
    function hasFocus: WordBool; dispid 1090;
    property onselectionchange: OleVariant dispid - 2147412032;
    property namespaces: IDispatch readonly dispid 1091;
    function createDocumentFromUrl(const bstrUrl: WideString; const bstrOptions: WideString): IHTMLDocument2; dispid 1092;
    property media: WideString dispid 1093;
    function CreateEventObject(var pvarEventObject: OleVariant): IHTMLEventObj; dispid 1094;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid 1095;
    function createRenderStyle(const v: WideString): IHTMLRenderStyle; dispid 1096;
    property oncontrolselect: OleVariant dispid - 2147412033;
    property URLUnencoded: WideString readonly dispid 1097;
    property onmousewheel: OleVariant dispid - 2147412036;
    property doctype: IHTMLDOMNode readonly dispid 1098;
    property implementation_: IHTMLDOMImplementation readonly dispid 1099;
    function createAttribute(const bstrattrName: WideString): IHTMLDOMAttribute; dispid 1100;
    function createComment(const bstrdata: WideString): IHTMLDOMNode; dispid 1101;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    property compatMode: WideString readonly dispid 1102;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
  end;

// *********************************************************************//
// DispIntf:  DWebBridgeEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {A6D897FF-0A95-11D1-B0BA-006008166E11}
// *********************************************************************//
  DWebBridgeEvents = dispinterface
    ['{A6D897FF-0A95-11D1-B0BA-006008166E11}']
    procedure onscriptletevent(const name: WideString; eventData: OleVariant); dispid 1;
    procedure onreadystatechange; dispid - 609;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    function onkeypress: WordBool; dispid - 603;
    procedure onmousedown; dispid - 605;
    procedure onmousemove; dispid - 606;
    procedure onmouseup; dispid - 607;
  end;

// *********************************************************************//
// Interface: IWebBridge
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE24FDAD-03C6-11D1-8B76-0080C744F389}
// *********************************************************************//
  IWebBridge = interface(IDispatch)
    ['{AE24FDAD-03C6-11D1-8B76-0080C744F389}']
    procedure Set_url(const p: WideString); safecall;
    function Get_url: WideString; safecall;
    procedure Set_Scrollbar(p: WordBool); safecall;
    function Get_Scrollbar: WordBool; safecall;
    procedure Set_embed(p: WordBool); safecall;
    function Get_embed: WordBool; safecall;
    function Get_event: IDispatch; safecall;
    function Get_readyState: Integer; safecall;
    procedure AboutBox; safecall;
    property url: WideString read Get_url write Set_url;
    property Scrollbar: WordBool read Get_Scrollbar write Set_Scrollbar;
    property embed: WordBool read Get_embed write Set_embed;
    property event: IDispatch read Get_event;
    property readyState: Integer read Get_readyState;
  end;

// *********************************************************************//
// DispIntf:  IWebBridgeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE24FDAD-03C6-11D1-8B76-0080C744F389}
// *********************************************************************//
  IWebBridgeDisp = dispinterface
    ['{AE24FDAD-03C6-11D1-8B76-0080C744F389}']
    property url: WideString dispid 1;
    property Scrollbar: WordBool dispid 2;
    property embed: WordBool dispid 3;
    property event: IDispatch readonly dispid 1152;
    property readyState: Integer readonly dispid - 525;
    procedure AboutBox; dispid - 552;
  end;

// *********************************************************************//
// Interface: IWBScriptControl
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A5170870-0CF8-11D1-8B91-0080C744F389}
// *********************************************************************//
  IWBScriptControl = interface(IDispatch)
    ['{A5170870-0CF8-11D1-8B91-0080C744F389}']
    procedure raiseEvent(const name: WideString; eventData: OleVariant); safecall;
    procedure bubbleEvent; safecall;
    procedure setContextMenu(menuItemPairs: OleVariant); safecall;
    procedure Set_selectableContent(p: WordBool); safecall;
    function Get_selectableContent: WordBool; safecall;
    function Get_frozen: WordBool; safecall;
    procedure Set_Scrollbar(p: WordBool); safecall;
    function Get_Scrollbar: WordBool; safecall;
    function Get_version: WideString; safecall;
    function Get_visibility: WordBool; safecall;
    procedure Set_onvisibilitychange(p: OleVariant); safecall;
    function Get_onvisibilitychange: OleVariant; safecall;
    property selectableContent: WordBool read Get_selectableContent write Set_selectableContent;
    property frozen: WordBool read Get_frozen;
    property Scrollbar: WordBool read Get_Scrollbar write Set_Scrollbar;
    property version: WideString read Get_version;
    property visibility: WordBool read Get_visibility;
    property onvisibilitychange: OleVariant read Get_onvisibilitychange write Set_onvisibilitychange;
  end;

// *********************************************************************//
// DispIntf:  IWBScriptControlDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A5170870-0CF8-11D1-8B91-0080C744F389}
// *********************************************************************//
  IWBScriptControlDisp = dispinterface
    ['{A5170870-0CF8-11D1-8B91-0080C744F389}']
    procedure raiseEvent(const name: WideString; eventData: OleVariant); dispid 1;
    procedure bubbleEvent; dispid 2;
    procedure setContextMenu(menuItemPairs: OleVariant); dispid 3;
    property selectableContent: WordBool dispid 4;
    property frozen: WordBool readonly dispid 5;
    property Scrollbar: WordBool dispid 7;
    property version: WideString readonly dispid 8;
    property visibility: WordBool readonly dispid 9;
    property onvisibilitychange: OleVariant dispid 10;
  end;

// *********************************************************************//
// Interface: IHTMLEmbedElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEmbedElement = interface(IDispatch)
    ['{3050F25F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_hidden(const p: WideString); safecall;
    function Get_hidden: WideString; safecall;
    function Get_palette: WideString; safecall;
    function Get_pluginspage: WideString; safecall;
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_units(const p: WideString); safecall;
    function Get_units: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    property hidden: WideString read Get_hidden write Set_hidden;
    property palette: WideString read Get_palette;
    property pluginspage: WideString read Get_pluginspage;
    property src: WideString read Get_src write Set_src;
    property units: WideString read Get_units write Set_units;
    property name: WideString read Get_name write Set_name;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEmbedElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEmbedElementDisp = dispinterface
    ['{3050F25F-98B5-11CF-BB82-00AA00BDCE0B}']
    property hidden: WideString dispid - 2147415102;
    property palette: WideString readonly dispid - 2147415108;
    property pluginspage: WideString readonly dispid - 2147415107;
    property src: WideString dispid - 2147415106;
    property units: WideString dispid - 2147415104;
    property name: WideString dispid - 2147418112;
    property width: OleVariant dispid - 2147418107;
    property height: OleVariant dispid - 2147418106;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLEmbed
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLEmbed = dispinterface
    ['{3050F52E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property hidden: WideString dispid - 2147415102;
    property palette: WideString readonly dispid - 2147415108;
    property pluginspage: WideString readonly dispid - 2147415107;
    property src: WideString dispid - 2147415106;
    property units: WideString dispid - 2147415104;
    property name: WideString dispid - 2147418112;
    property width: OleVariant dispid - 2147418107;
    property height: OleVariant dispid - 2147418106;
  end;

// *********************************************************************//
// DispIntf:  HTMLMapEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLMapEvents2 = dispinterface
    ['{3050F61E-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLMapEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3BA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLMapEvents = dispinterface
    ['{3050F3BA-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// Interface: IHTMLAreasCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F383-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection = interface(IDispatch)
    ['{3050F383-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_length(p: Integer); safecall;
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(name: OleVariant; index: OleVariant): IDispatch; safecall;
    function tags(tagName: OleVariant): IDispatch; safecall;
    procedure add(const element: IHTMLElement; before: OleVariant); safecall;
    procedure remove(index: Integer); safecall;
    property length: Integer read Get_length write Set_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAreasCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F383-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollectionDisp = dispinterface
    ['{3050F383-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid - 4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
    procedure add(const element: IHTMLElement; before: OleVariant); dispid 1503;
    procedure remove(index: Integer); dispid 1504;
  end;

// *********************************************************************//
// Interface: IHTMLAreasCollection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection2 = interface(IDispatch)
    ['{3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}']
    function urns(urn: OleVariant): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAreasCollection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection2Disp = dispinterface
    ['{3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}']
    function urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// Interface: IHTMLAreasCollection3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F837-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection3 = interface(IDispatch)
    ['{3050F837-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAreasCollection3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F837-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection3Disp = dispinterface
    ['{3050F837-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; dispid 1506;
  end;

// *********************************************************************//
// Interface: IHTMLMapElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F266-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMapElement = interface(IDispatch)
    ['{3050F266-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_areas: IHTMLAreasCollection; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    property areas: IHTMLAreasCollection read Get_areas;
    property name: WideString read Get_name write Set_name;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMapElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F266-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMapElementDisp = dispinterface
    ['{3050F266-98B5-11CF-BB82-00AA00BDCE0B}']
    property areas: IHTMLAreasCollection readonly dispid 1002;
    property name: WideString dispid - 2147418112;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAreasCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F56A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAreasCollection = dispinterface
    ['{3050F56A-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid - 4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
    procedure add(const element: IHTMLElement; before: OleVariant); dispid 1503;
    procedure remove(index: Integer); dispid 1504;
    function urns(urn: OleVariant): IDispatch; dispid 1505;
    function namedItem(const name: WideString): IDispatch; dispid 1506;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLMapElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F526-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLMapElement = dispinterface
    ['{3050F526-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property areas: IHTMLAreasCollection readonly dispid 1002;
    property name: WideString dispid - 2147418112;
  end;

// *********************************************************************//
// DispIntf:  HTMLAreaEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F611-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLAreaEvents2 = dispinterface
    ['{3050F611-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLAreaEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F366-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLAreaEvents = dispinterface
    ['{3050F366-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// Interface: IHTMLAreaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F265-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreaElement = interface(IDispatch)
    ['{3050F265-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_shape(const p: WideString); safecall;
    function Get_shape: WideString; safecall;
    procedure Set_coords(const p: WideString); safecall;
    function Get_coords: WideString; safecall;
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    procedure Set_target(const p: WideString); safecall;
    function Get_target: WideString; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function Get_alt: WideString; safecall;
    procedure Set_noHref(p: WordBool); safecall;
    function Get_noHref: WordBool; safecall;
    procedure Set_host(const p: WideString); safecall;
    function Get_host: WideString; safecall;
    procedure Set_hostname(const p: WideString); safecall;
    function Get_hostname: WideString; safecall;
    procedure Set_pathname(const p: WideString); safecall;
    function Get_pathname: WideString; safecall;
    procedure Set_port(const p: WideString); safecall;
    function Get_port: WideString; safecall;
    procedure Set_protocol(const p: WideString); safecall;
    function Get_protocol: WideString; safecall;
    procedure Set_search(const p: WideString); safecall;
    function Get_search: WideString; safecall;
    procedure Set_hash(const p: WideString); safecall;
    function Get_hash: WideString; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function Get_onblur: OleVariant; safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function Get_onfocus: OleVariant; safecall;
    procedure Set_tabIndex(p: Smallint); safecall;
    function Get_tabIndex: Smallint; safecall;
    procedure focus; safecall;
    procedure blur; safecall;
    property shape: WideString read Get_shape write Set_shape;
    property coords: WideString read Get_coords write Set_coords;
    property href: WideString read Get_href write Set_href;
    property target: WideString read Get_target write Set_target;
    property alt: WideString read Get_alt write Set_alt;
    property noHref: WordBool read Get_noHref write Set_noHref;
    property host: WideString read Get_host write Set_host;
    property hostname: WideString read Get_hostname write Set_hostname;
    property pathname: WideString read Get_pathname write Set_pathname;
    property port: WideString read Get_port write Set_port;
    property protocol: WideString read Get_protocol write Set_protocol;
    property search: WideString read Get_search write Set_search;
    property hash: WideString read Get_hash write Set_hash;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property tabIndex: Smallint read Get_tabIndex write Set_tabIndex;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAreaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F265-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreaElementDisp = dispinterface
    ['{3050F265-98B5-11CF-BB82-00AA00BDCE0B}']
    property shape: WideString dispid 1001;
    property coords: WideString dispid 1002;
    property href: WideString dispid 0;
    property target: WideString dispid 1004;
    property alt: WideString dispid 1005;
    property noHref: WordBool dispid 1006;
    property host: WideString dispid 1007;
    property hostname: WideString dispid 1008;
    property pathname: WideString dispid 1009;
    property port: WideString dispid 1010;
    property protocol: WideString dispid 1011;
    property search: WideString dispid 1012;
    property hash: WideString dispid 1013;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    procedure blur; dispid - 2147416110;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAreaElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F503-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAreaElement = dispinterface
    ['{3050F503-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property shape: WideString dispid 1001;
    property coords: WideString dispid 1002;
    property href: WideString dispid 0;
    property target: WideString dispid 1004;
    property alt: WideString dispid 1005;
    property noHref: WordBool dispid 1006;
    property host: WideString dispid 1007;
    property hostname: WideString dispid 1008;
    property pathname: WideString dispid 1009;
    property port: WideString dispid 1010;
    property protocol: WideString dispid 1011;
    property search: WideString dispid 1012;
    property hash: WideString dispid 1013;
  end;

// *********************************************************************//
// Interface: IHTMLTableCaption
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCaption = interface(IDispatch)
    ['{3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function Get_vAlign: WideString; safecall;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableCaptionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCaptionDisp = dispinterface
    ['{3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid - 2147418040;
    property vAlign: WideString dispid - 2147413081;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableCaption
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F508-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableCaption = dispinterface
    ['{3050F508-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property align: WideString dispid - 2147418040;
    property vAlign: WideString dispid - 2147413081;
  end;

// *********************************************************************//
// Interface: IHTMLCommentElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCommentElement = interface(IDispatch)
    ['{3050F20C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_text(const p: WideString); safecall;
    function Get_text: WideString; safecall;
    procedure Set_atomic(p: Integer); safecall;
    function Get_atomic: Integer; safecall;
    property text: WideString read Get_text write Set_text;
    property atomic: Integer read Get_atomic write Set_atomic;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCommentElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCommentElementDisp = dispinterface
    ['{3050F20C-98B5-11CF-BB82-00AA00BDCE0B}']
    property text: WideString dispid 1001;
    property atomic: Integer dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLCommentElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F813-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCommentElement2 = interface(IDispatch)
    ['{3050F813-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_data(const p: WideString); safecall;
    function Get_data: WideString; safecall;
    function Get_length: Integer; safecall;
    function substringData(offset: Integer; Count: Integer): WideString; safecall;
    procedure appendData(const bstrstring: WideString); safecall;
    procedure insertData(offset: Integer; const bstrstring: WideString); safecall;
    procedure deleteData(offset: Integer; Count: Integer); safecall;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); safecall;
    property data: WideString read Get_data write Set_data;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCommentElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F813-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCommentElement2Disp = dispinterface
    ['{3050F813-98B5-11CF-BB82-00AA00BDCE0B}']
    property data: WideString dispid 1003;
    property length: Integer readonly dispid 1004;
    function substringData(offset: Integer; Count: Integer): WideString; dispid 1005;
    procedure appendData(const bstrstring: WideString); dispid 1006;
    procedure insertData(offset: Integer; const bstrstring: WideString); dispid 1007;
    procedure deleteData(offset: Integer; Count: Integer); dispid 1008;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); dispid 1009;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLCommentElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLCommentElement = dispinterface
    ['{3050F50A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property text: WideString dispid 1001;
    property atomic: Integer dispid 1002;
    property data: WideString dispid 1003;
    property length: Integer readonly dispid 1004;
    function substringData(offset: Integer; Count: Integer): WideString; dispid 1005;
    procedure appendData(const bstrstring: WideString); dispid 1006;
    procedure insertData(offset: Integer; const bstrstring: WideString); dispid 1007;
    procedure deleteData(offset: Integer; Count: Integer); dispid 1008;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); dispid 1009;
  end;

// *********************************************************************//
// Interface: IHTMLPhraseElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPhraseElement = interface(IDispatch)
    ['{3050F20A-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLPhraseElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPhraseElementDisp = dispinterface
    ['{3050F20A-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: IHTMLPhraseElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F824-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPhraseElement2 = interface(IDispatch)
    ['{3050F824-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_cite(const p: WideString); safecall;
    function Get_cite: WideString; safecall;
    procedure Set_dateTime(const p: WideString); safecall;
    function Get_dateTime: WideString; safecall;
    property cite: WideString read Get_cite write Set_cite;
    property dateTime: WideString read Get_dateTime write Set_dateTime;
  end;

// *********************************************************************//
// DispIntf:  IHTMLPhraseElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F824-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPhraseElement2Disp = dispinterface
    ['{3050F824-98B5-11CF-BB82-00AA00BDCE0B}']
    property cite: WideString dispid 1001;
    property dateTime: WideString dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLSpanElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSpanElement = interface(IDispatch)
    ['{3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLSpanElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSpanElementDisp = dispinterface
    ['{3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTMLPhraseElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLPhraseElement = dispinterface
    ['{3050F52D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property cite: WideString dispid 1001;
    property dateTime: WideString dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLSpanElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F548-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLSpanElement = dispinterface
    ['{3050F548-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
  end;

// *********************************************************************//
// DispIntf:  HTMLTableEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F623-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLTableEvents2 = dispinterface
    ['{3050F623-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLTableEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F407-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLTableEvents = dispinterface
    ['{3050F407-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// Interface: IHTMLTableSection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection = interface(IDispatch)
    ['{3050F23B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function Get_vAlign: WideString; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function Get_bgColor: OleVariant; safecall;
    function Get_rows: IHTMLElementCollection; safecall;
    function insertRow(index: Integer): IDispatch; safecall;
    procedure deleteRow(index: Integer); safecall;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property rows: IHTMLElementCollection read Get_rows;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableSectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSectionDisp = dispinterface
    ['{3050F23B-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid - 2147418040;
    property vAlign: WideString dispid - 2147413081;
    property bgColor: OleVariant dispid - 501;
    property rows: IHTMLElementCollection readonly dispid 1000;
    function insertRow(index: Integer): IDispatch; dispid 1001;
    procedure deleteRow(index: Integer); dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLTable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F21E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable = interface(IDispatch)
    ['{3050F21E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_cols(p: Integer); safecall;
    function Get_cols: Integer; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function Get_border: OleVariant; safecall;
    procedure Set_frame(const p: WideString); safecall;
    function Get_frame: WideString; safecall;
    procedure Set_rules(const p: WideString); safecall;
    function Get_rules: WideString; safecall;
    procedure Set_cellSpacing(p: OleVariant); safecall;
    function Get_cellSpacing: OleVariant; safecall;
    procedure Set_cellPadding(p: OleVariant); safecall;
    function Get_cellPadding: OleVariant; safecall;
    procedure Set_background(const p: WideString); safecall;
    function Get_background: WideString; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function Get_bgColor: OleVariant; safecall;
    procedure Set_borderColor(p: OleVariant); safecall;
    function Get_borderColor: OleVariant; safecall;
    procedure Set_borderColorLight(p: OleVariant); safecall;
    function Get_borderColorLight: OleVariant; safecall;
    procedure Set_borderColorDark(p: OleVariant); safecall;
    function Get_borderColorDark: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure refresh; safecall;
    function Get_rows: IHTMLElementCollection; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    procedure Set_dataPageSize(p: Integer); safecall;
    function Get_dataPageSize: Integer; safecall;
    procedure nextPage; safecall;
    procedure previousPage; safecall;
    function Get_tHead: IHTMLTableSection; safecall;
    function Get_tFoot: IHTMLTableSection; safecall;
    function Get_tBodies: IHTMLElementCollection; safecall;
    function Get_caption: IHTMLTableCaption; safecall;
    function createTHead: IDispatch; safecall;
    procedure deleteTHead; safecall;
    function createTFoot: IDispatch; safecall;
    procedure deleteTFoot; safecall;
    function createCaption: IHTMLTableCaption; safecall;
    procedure deleteCaption; safecall;
    function insertRow(index: Integer): IDispatch; safecall;
    procedure deleteRow(index: Integer); safecall;
    function Get_readyState: WideString; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    property cols: Integer read Get_cols write Set_cols;
    property border: OleVariant read Get_border write Set_border;
    property frame: WideString read Get_frame write Set_frame;
    property rules: WideString read Get_rules write Set_rules;
    property cellSpacing: OleVariant read Get_cellSpacing write Set_cellSpacing;
    property cellPadding: OleVariant read Get_cellPadding write Set_cellPadding;
    property background: WideString read Get_background write Set_background;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
    property borderColorLight: OleVariant read Get_borderColorLight write Set_borderColorLight;
    property borderColorDark: OleVariant read Get_borderColorDark write Set_borderColorDark;
    property align: WideString read Get_align write Set_align;
    property rows: IHTMLElementCollection read Get_rows;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property dataPageSize: Integer read Get_dataPageSize write Set_dataPageSize;
    property tHead: IHTMLTableSection read Get_tHead;
    property tFoot: IHTMLTableSection read Get_tFoot;
    property tBodies: IHTMLElementCollection read Get_tBodies;
    property caption: IHTMLTableCaption read Get_caption;
    property readyState: WideString read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F21E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableDisp = dispinterface
    ['{3050F21E-98B5-11CF-BB82-00AA00BDCE0B}']
    property cols: Integer dispid 1001;
    property border: OleVariant dispid 1002;
    property frame: WideString dispid 1004;
    property rules: WideString dispid 1003;
    property cellSpacing: OleVariant dispid 1005;
    property cellPadding: OleVariant dispid 1006;
    property background: WideString dispid - 2147413111;
    property bgColor: OleVariant dispid - 501;
    property borderColor: OleVariant dispid - 2147413084;
    property borderColorLight: OleVariant dispid - 2147413083;
    property borderColorDark: OleVariant dispid - 2147413082;
    property align: WideString dispid - 2147418039;
    procedure refresh; dispid 1015;
    property rows: IHTMLElementCollection readonly dispid 1016;
    property width: OleVariant dispid - 2147418107;
    property height: OleVariant dispid - 2147418106;
    property dataPageSize: Integer dispid 1017;
    procedure nextPage; dispid 1018;
    procedure previousPage; dispid 1019;
    property tHead: IHTMLTableSection readonly dispid 1020;
    property tFoot: IHTMLTableSection readonly dispid 1021;
    property tBodies: IHTMLElementCollection readonly dispid 1024;
    property caption: IHTMLTableCaption readonly dispid 1025;
    function createTHead: IDispatch; dispid 1026;
    procedure deleteTHead; dispid 1027;
    function createTFoot: IDispatch; dispid 1028;
    procedure deleteTFoot; dispid 1029;
    function createCaption: IHTMLTableCaption; dispid 1030;
    procedure deleteCaption; dispid 1031;
    function insertRow(index: Integer): IDispatch; dispid 1032;
    procedure deleteRow(index: Integer); dispid 1033;
    property readyState: WideString readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
  end;

// *********************************************************************//
// Interface: IHTMLTable2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable2 = interface(IDispatch)
    ['{3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure firstPage; safecall;
    procedure lastPage; safecall;
    function Get_cells: IHTMLElementCollection; safecall;
    function moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; safecall;
    property cells: IHTMLElementCollection read Get_cells;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTable2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable2Disp = dispinterface
    ['{3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure firstPage; dispid 1035;
    procedure lastPage; dispid 1036;
    property cells: IHTMLElementCollection readonly dispid 1037;
    function moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; dispid 1038;
  end;

// *********************************************************************//
// Interface: IHTMLTable3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F829-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable3 = interface(IDispatch)
    ['{3050F829-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_summary(const p: WideString); safecall;
    function Get_summary: WideString; safecall;
    property summary: WideString read Get_summary write Set_summary;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTable3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F829-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable3Disp = dispinterface
    ['{3050F829-98B5-11CF-BB82-00AA00BDCE0B}']
    property summary: WideString dispid 1039;
  end;

// *********************************************************************//
// Interface: IHTMLTableCol
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCol = interface(IDispatch)
    ['{3050F23A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_span(p: Integer); safecall;
    function Get_span: Integer; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function Get_vAlign: WideString; safecall;
    property span: Integer read Get_span write Set_span;
    property width: OleVariant read Get_width write Set_width;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableColDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableColDisp = dispinterface
    ['{3050F23A-98B5-11CF-BB82-00AA00BDCE0B}']
    property span: Integer dispid 1001;
    property width: OleVariant dispid - 2147418107;
    property align: WideString dispid - 2147418040;
    property vAlign: WideString dispid - 2147413081;
  end;

// *********************************************************************//
// Interface: IHTMLTableCol2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCol2 = interface(IDispatch)
    ['{3050F82A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_ch(const p: WideString); safecall;
    function Get_ch: WideString; safecall;
    procedure Set_chOff(const p: WideString); safecall;
    function Get_chOff: WideString; safecall;
    property ch: WideString read Get_ch write Set_ch;
    property chOff: WideString read Get_chOff write Set_chOff;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableCol2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCol2Disp = dispinterface
    ['{3050F82A-98B5-11CF-BB82-00AA00BDCE0B}']
    property ch: WideString dispid 1002;
    property chOff: WideString dispid 1003;
  end;

// *********************************************************************//
// Interface: IHTMLTableSection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection2 = interface(IDispatch)
    ['{3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}']
    function moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableSection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection2Disp = dispinterface
    ['{3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}']
    function moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; dispid 1003;
  end;

// *********************************************************************//
// Interface: IHTMLTableSection3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection3 = interface(IDispatch)
    ['{3050F82B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_ch(const p: WideString); safecall;
    function Get_ch: WideString; safecall;
    procedure Set_chOff(const p: WideString); safecall;
    function Get_chOff: WideString; safecall;
    property ch: WideString read Get_ch write Set_ch;
    property chOff: WideString read Get_chOff write Set_chOff;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableSection3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection3Disp = dispinterface
    ['{3050F82B-98B5-11CF-BB82-00AA00BDCE0B}']
    property ch: WideString dispid 1004;
    property chOff: WideString dispid 1005;
  end;

// *********************************************************************//
// Interface: IHTMLTableRow
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow = interface(IDispatch)
    ['{3050F23C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function Get_vAlign: WideString; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function Get_bgColor: OleVariant; safecall;
    procedure Set_borderColor(p: OleVariant); safecall;
    function Get_borderColor: OleVariant; safecall;
    procedure Set_borderColorLight(p: OleVariant); safecall;
    function Get_borderColorLight: OleVariant; safecall;
    procedure Set_borderColorDark(p: OleVariant); safecall;
    function Get_borderColorDark: OleVariant; safecall;
    function Get_rowIndex: Integer; safecall;
    function Get_sectionRowIndex: Integer; safecall;
    function Get_cells: IHTMLElementCollection; safecall;
    function insertCell(index: Integer): IDispatch; safecall;
    procedure deleteCell(index: Integer); safecall;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
    property borderColorLight: OleVariant read Get_borderColorLight write Set_borderColorLight;
    property borderColorDark: OleVariant read Get_borderColorDark write Set_borderColorDark;
    property rowIndex: Integer read Get_rowIndex;
    property sectionRowIndex: Integer read Get_sectionRowIndex;
    property cells: IHTMLElementCollection read Get_cells;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableRowDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRowDisp = dispinterface
    ['{3050F23C-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid - 2147418040;
    property vAlign: WideString dispid - 2147413081;
    property bgColor: OleVariant dispid - 501;
    property borderColor: OleVariant dispid - 2147413084;
    property borderColorLight: OleVariant dispid - 2147413083;
    property borderColorDark: OleVariant dispid - 2147413082;
    property rowIndex: Integer readonly dispid 1000;
    property sectionRowIndex: Integer readonly dispid 1001;
    property cells: IHTMLElementCollection readonly dispid 1002;
    function insertCell(index: Integer): IDispatch; dispid 1003;
    procedure deleteCell(index: Integer); dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLTableRow2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow2 = interface(IDispatch)
    ['{3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    property height: OleVariant read Get_height write Set_height;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableRow2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow2Disp = dispinterface
    ['{3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}']
    property height: OleVariant dispid - 2147418106;
  end;

// *********************************************************************//
// Interface: IHTMLTableRow3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow3 = interface(IDispatch)
    ['{3050F82C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_ch(const p: WideString); safecall;
    function Get_ch: WideString; safecall;
    procedure Set_chOff(const p: WideString); safecall;
    function Get_chOff: WideString; safecall;
    property ch: WideString read Get_ch write Set_ch;
    property chOff: WideString read Get_chOff write Set_chOff;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableRow3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow3Disp = dispinterface
    ['{3050F82C-98B5-11CF-BB82-00AA00BDCE0B}']
    property ch: WideString dispid 1009;
    property chOff: WideString dispid 1010;
  end;

// *********************************************************************//
// Interface: IHTMLTableRowMetrics
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F413-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRowMetrics = interface(IDispatch)
    ['{3050F413-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_clientHeight: Integer; safecall;
    function Get_clientWidth: Integer; safecall;
    function Get_clientTop: Integer; safecall;
    function Get_clientLeft: Integer; safecall;
    property clientHeight: Integer read Get_clientHeight;
    property clientWidth: Integer read Get_clientWidth;
    property clientTop: Integer read Get_clientTop;
    property clientLeft: Integer read Get_clientLeft;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableRowMetricsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F413-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRowMetricsDisp = dispinterface
    ['{3050F413-98B5-11CF-BB82-00AA00BDCE0B}']
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
  end;

// *********************************************************************//
// Interface: IHTMLTableCell
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCell = interface(IDispatch)
    ['{3050F23D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_rowSpan(p: Integer); safecall;
    function Get_rowSpan: Integer; safecall;
    procedure Set_colSpan(p: Integer); safecall;
    function Get_colSpan: Integer; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function Get_vAlign: WideString; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function Get_bgColor: OleVariant; safecall;
    procedure Set_noWrap(p: WordBool); safecall;
    function Get_noWrap: WordBool; safecall;
    procedure Set_background(const p: WideString); safecall;
    function Get_background: WideString; safecall;
    procedure Set_borderColor(p: OleVariant); safecall;
    function Get_borderColor: OleVariant; safecall;
    procedure Set_borderColorLight(p: OleVariant); safecall;
    function Get_borderColorLight: OleVariant; safecall;
    procedure Set_borderColorDark(p: OleVariant); safecall;
    function Get_borderColorDark: OleVariant; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    function Get_cellIndex: Integer; safecall;
    property rowSpan: Integer read Get_rowSpan write Set_rowSpan;
    property colSpan: Integer read Get_colSpan write Set_colSpan;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
    property background: WideString read Get_background write Set_background;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
    property borderColorLight: OleVariant read Get_borderColorLight write Set_borderColorLight;
    property borderColorDark: OleVariant read Get_borderColorDark write Set_borderColorDark;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property cellIndex: Integer read Get_cellIndex;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableCellDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCellDisp = dispinterface
    ['{3050F23D-98B5-11CF-BB82-00AA00BDCE0B}']
    property rowSpan: Integer dispid 2001;
    property colSpan: Integer dispid 2002;
    property align: WideString dispid - 2147418040;
    property vAlign: WideString dispid - 2147413081;
    property bgColor: OleVariant dispid - 501;
    property noWrap: WordBool dispid - 2147413107;
    property background: WideString dispid - 2147413111;
    property borderColor: OleVariant dispid - 2147413084;
    property borderColorLight: OleVariant dispid - 2147413083;
    property borderColorDark: OleVariant dispid - 2147413082;
    property width: OleVariant dispid - 2147418107;
    property height: OleVariant dispid - 2147418106;
    property cellIndex: Integer readonly dispid 2003;
  end;

// *********************************************************************//
// Interface: IHTMLTableCell2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCell2 = interface(IDispatch)
    ['{3050F82D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_abbr(const p: WideString); safecall;
    function Get_abbr: WideString; safecall;
    procedure Set_axis(const p: WideString); safecall;
    function Get_axis: WideString; safecall;
    procedure Set_ch(const p: WideString); safecall;
    function Get_ch: WideString; safecall;
    procedure Set_chOff(const p: WideString); safecall;
    function Get_chOff: WideString; safecall;
    procedure Set_headers(const p: WideString); safecall;
    function Get_headers: WideString; safecall;
    procedure Set_scope(const p: WideString); safecall;
    function Get_scope: WideString; safecall;
    property abbr: WideString read Get_abbr write Set_abbr;
    property axis: WideString read Get_axis write Set_axis;
    property ch: WideString read Get_ch write Set_ch;
    property chOff: WideString read Get_chOff write Set_chOff;
    property headers: WideString read Get_headers write Set_headers;
    property scope: WideString read Get_scope write Set_scope;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableCell2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCell2Disp = dispinterface
    ['{3050F82D-98B5-11CF-BB82-00AA00BDCE0B}']
    property abbr: WideString dispid 2004;
    property axis: WideString dispid 2005;
    property ch: WideString dispid 2006;
    property chOff: WideString dispid 2007;
    property headers: WideString dispid 2008;
    property scope: WideString dispid 2009;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTable
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F532-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTable = dispinterface
    ['{3050F532-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property cols: Integer dispid 1001;
    property border: OleVariant dispid 1002;
    property frame: WideString dispid 1004;
    property rules: WideString dispid 1003;
    property cellSpacing: OleVariant dispid 1005;
    property cellPadding: OleVariant dispid 1006;
    property background: WideString dispid - 2147413111;
    property bgColor: OleVariant dispid - 501;
    property borderColor: OleVariant dispid - 2147413084;
    property borderColorLight: OleVariant dispid - 2147413083;
    property borderColorDark: OleVariant dispid - 2147413082;
    property align: WideString dispid - 2147418039;
    procedure refresh; dispid 1015;
    property rows: IHTMLElementCollection readonly dispid 1016;
    property width: OleVariant dispid - 2147418107;
    property height: OleVariant dispid - 2147418106;
    property dataPageSize: Integer dispid 1017;
    procedure nextPage; dispid 1018;
    procedure previousPage; dispid 1019;
    property tHead: IHTMLTableSection readonly dispid 1020;
    property tFoot: IHTMLTableSection readonly dispid 1021;
    property tBodies: IHTMLElementCollection readonly dispid 1024;
    property caption: IHTMLTableCaption readonly dispid 1025;
    function createTHead: IDispatch; dispid 1026;
    procedure deleteTHead; dispid 1027;
    function createTFoot: IDispatch; dispid 1028;
    procedure deleteTFoot; dispid 1029;
    function createCaption: IHTMLTableCaption; dispid 1030;
    procedure deleteCaption; dispid 1031;
    function insertRow(index: Integer): IDispatch; dispid 1032;
    procedure deleteRow(index: Integer); dispid 1033;
    procedure firstPage; dispid 1035;
    procedure lastPage; dispid 1036;
    property cells: IHTMLElementCollection readonly dispid 1037;
    function moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; dispid 1038;
    property summary: WideString dispid 1039;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableCol
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F533-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableCol = dispinterface
    ['{3050F533-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property span: Integer dispid 1001;
    property width: OleVariant dispid - 2147418107;
    property align: WideString dispid - 2147418040;
    property vAlign: WideString dispid - 2147413081;
    property ch: WideString dispid 1002;
    property chOff: WideString dispid 1003;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableSection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F534-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableSection = dispinterface
    ['{3050F534-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property align: WideString dispid - 2147418040;
    property vAlign: WideString dispid - 2147413081;
    property bgColor: OleVariant dispid - 501;
    property rows: IHTMLElementCollection readonly dispid 1000;
    function insertRow(index: Integer): IDispatch; dispid 1001;
    procedure deleteRow(index: Integer); dispid 1002;
    function moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; dispid 1003;
    property ch: WideString dispid 1004;
    property chOff: WideString dispid 1005;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableRow
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F535-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableRow = dispinterface
    ['{3050F535-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property align: WideString dispid - 2147418040;
    property vAlign: WideString dispid - 2147413081;
    property bgColor: OleVariant dispid - 501;
    property borderColor: OleVariant dispid - 2147413084;
    property borderColorLight: OleVariant dispid - 2147413083;
    property borderColorDark: OleVariant dispid - 2147413082;
    property rowIndex: Integer readonly dispid 1000;
    property sectionRowIndex: Integer readonly dispid 1001;
    property cells: IHTMLElementCollection readonly dispid 1002;
    function insertCell(index: Integer): IDispatch; dispid 1003;
    procedure deleteCell(index: Integer); dispid 1004;
    property height: OleVariant dispid - 2147418106;
    property ch: WideString dispid 1009;
    property chOff: WideString dispid 1010;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableCell
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F536-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableCell = dispinterface
    ['{3050F536-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property rowSpan: Integer dispid 2001;
    property colSpan: Integer dispid 2002;
    property align: WideString dispid - 2147418040;
    property vAlign: WideString dispid - 2147413081;
    property bgColor: OleVariant dispid - 501;
    property noWrap: WordBool dispid - 2147413107;
    property background: WideString dispid - 2147413111;
    property borderColor: OleVariant dispid - 2147413084;
    property borderColorLight: OleVariant dispid - 2147413083;
    property borderColorDark: OleVariant dispid - 2147413082;
    property width: OleVariant dispid - 2147418107;
    property height: OleVariant dispid - 2147418106;
    property cellIndex: Integer readonly dispid 2003;
    property abbr: WideString dispid 2004;
    property axis: WideString dispid 2005;
    property ch: WideString dispid 2006;
    property chOff: WideString dispid 2007;
    property headers: WideString dispid 2008;
    property scope: WideString dispid 2009;
  end;

// *********************************************************************//
// DispIntf:  HTMLScriptEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F621-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLScriptEvents2 = dispinterface
    ['{3050F621-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  HTMLScriptEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3E2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLScriptEvents = dispinterface
    ['{3050F3E2-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onerror; dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLScriptElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F28B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScriptElement = interface(IDispatch)
    ['{3050F28B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_htmlFor(const p: WideString); safecall;
    function Get_htmlFor: WideString; safecall;
    procedure Set_event(const p: WideString); safecall;
    function Get_event: WideString; safecall;
    procedure Set_text(const p: WideString); safecall;
    function Get_text: WideString; safecall;
    procedure Set_defer(p: WordBool); safecall;
    function Get_defer: WordBool; safecall;
    function Get_readyState: WideString; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    property src: WideString read Get_src write Set_src;
    property htmlFor: WideString read Get_htmlFor write Set_htmlFor;
    property event: WideString read Get_event write Set_event;
    property text: WideString read Get_text write Set_text;
    property defer: WordBool read Get_defer write Set_defer;
    property readyState: WideString read Get_readyState;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property type_: WideString read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLScriptElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F28B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScriptElementDisp = dispinterface
    ['{3050F28B-98B5-11CF-BB82-00AA00BDCE0B}']
    property src: WideString dispid 1001;
    property htmlFor: WideString dispid 1004;
    property event: WideString dispid 1005;
    property text: WideString dispid 1006;
    property defer: WordBool dispid 1007;
    property readyState: WideString readonly dispid - 2147412996;
    property onerror: OleVariant dispid - 2147412083;
    property type_: WideString dispid 1009;
  end;

// *********************************************************************//
// Interface: IHTMLScriptElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F828-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScriptElement2 = interface(IDispatch)
    ['{3050F828-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_charset(const p: WideString); safecall;
    function Get_charset: WideString; safecall;
    property charset: WideString read Get_charset write Set_charset;
  end;

// *********************************************************************//
// DispIntf:  IHTMLScriptElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F828-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScriptElement2Disp = dispinterface
    ['{3050F828-98B5-11CF-BB82-00AA00BDCE0B}']
    property charset: WideString dispid 1010;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLScriptElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F530-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLScriptElement = dispinterface
    ['{3050F530-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property src: WideString dispid 1001;
    property htmlFor: WideString dispid 1004;
    property event: WideString dispid 1005;
    property text: WideString dispid 1006;
    property defer: WordBool dispid 1007;
    property onerror: OleVariant dispid - 2147412083;
    property type_: WideString dispid 1009;
    property charset: WideString dispid 1010;
  end;

// *********************************************************************//
// Interface: IHTMLNoShowElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNoShowElement = interface(IDispatch)
    ['{3050F38A-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLNoShowElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNoShowElementDisp = dispinterface
    ['{3050F38A-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTMLNoShowElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F528-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLNoShowElement = dispinterface
    ['{3050F528-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
  end;

// *********************************************************************//
// DispIntf:  HTMLObjectElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F620-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLObjectElementEvents2 = dispinterface
    ['{3050F620-98B5-11CF-BB82-00AA00BDCE0B}']
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    function onerror(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418093;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 2147418092;
  end;

// *********************************************************************//
// DispIntf:  HTMLObjectElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3C4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLObjectElementEvents = dispinterface
    ['{3050F3C4-98B5-11CF-BB82-00AA00BDCE0B}']
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    function onerror: WordBool; dispid - 2147418093;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 2147418092;
  end;

// *********************************************************************//
// Interface: IHTMLObjectElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F24F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement = interface(IDispatch)
    ['{3050F24F-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_object_: IDispatch; safecall;
    function Get_classid: WideString; safecall;
    function Get_data: WideString; safecall;
    procedure _Set_recordset(const p: IDispatch); safecall;
    function Get_recordset: IDispatch; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_codeBase(const p: WideString); safecall;
    function Get_codeBase: WideString; safecall;
    procedure Set_codeType(const p: WideString); safecall;
    function Get_codeType: WideString; safecall;
    procedure Set_code(const p: WideString); safecall;
    function Get_code: WideString; safecall;
    function Get_BaseHref: WideString; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    function Get_form: IHTMLFormElement; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    function Get_readyState: Integer; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_altHtml(const p: WideString); safecall;
    function Get_altHtml: WideString; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function Get_hspace: Integer; safecall;
    property object_: IDispatch read Get_object_;
    property classid: WideString read Get_classid;
    property data: WideString read Get_data;
    property recordset: IDispatch read Get_recordset write _Set_recordset;
    property align: WideString read Get_align write Set_align;
    property name: WideString read Get_name write Set_name;
    property codeBase: WideString read Get_codeBase write Set_codeBase;
    property codeType: WideString read Get_codeType write Set_codeType;
    property code: WideString read Get_code write Set_code;
    property BaseHref: WideString read Get_BaseHref;
    property type_: WideString read Get_type_ write Set_type_;
    property form: IHTMLFormElement read Get_form;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property readyState: Integer read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property altHtml: WideString read Get_altHtml write Set_altHtml;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
  end;

// *********************************************************************//
// DispIntf:  IHTMLObjectElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F24F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElementDisp = dispinterface
    ['{3050F24F-98B5-11CF-BB82-00AA00BDCE0B}']
    property object_: IDispatch readonly dispid - 2147415111;
    property classid: WideString readonly dispid - 2147415110;
    property data: WideString readonly dispid - 2147415109;
    property recordset: IDispatch dispid - 2147415107;
    property align: WideString dispid - 2147418039;
    property name: WideString dispid - 2147418112;
    property codeBase: WideString dispid - 2147415106;
    property codeType: WideString dispid - 2147415105;
    property code: WideString dispid - 2147415104;
    property BaseHref: WideString readonly dispid - 2147418110;
    property type_: WideString dispid - 2147415103;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    property width: OleVariant dispid - 2147418107;
    property height: OleVariant dispid - 2147418106;
    property readyState: Integer readonly dispid - 2147415102;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onerror: OleVariant dispid - 2147412083;
    property altHtml: WideString dispid - 2147415101;
    property vspace: Integer dispid - 2147415100;
    property hspace: Integer dispid - 2147415099;
  end;

// *********************************************************************//
// Interface: IHTMLObjectElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement2 = interface(IDispatch)
    ['{3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedRecordset(const dataMember: WideString; var hierarchy: OleVariant): IDispatch; safecall;
    procedure Set_classid(const p: WideString); safecall;
    function Get_classid: WideString; safecall;
    procedure Set_data(const p: WideString); safecall;
    function Get_data: WideString; safecall;
    property classid: WideString read Get_classid write Set_classid;
    property data: WideString read Get_data write Set_data;
  end;

// *********************************************************************//
// DispIntf:  IHTMLObjectElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement2Disp = dispinterface
    ['{3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedRecordset(const dataMember: WideString; var hierarchy: OleVariant): IDispatch; dispid - 2147415098;
    property classid: WideString dispid - 2147415110;
    property data: WideString dispid - 2147415109;
  end;

// *********************************************************************//
// Interface: IHTMLObjectElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F827-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement3 = interface(IDispatch)
    ['{3050F827-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_archive(const p: WideString); safecall;
    function Get_archive: WideString; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function Get_alt: WideString; safecall;
    procedure Set_declare(p: WordBool); safecall;
    function Get_declare: WordBool; safecall;
    procedure Set_standby(const p: WideString); safecall;
    function Get_standby: WideString; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function Get_border: OleVariant; safecall;
    procedure Set_useMap(const p: WideString); safecall;
    function Get_useMap: WideString; safecall;
    property archive: WideString read Get_archive write Set_archive;
    property alt: WideString read Get_alt write Set_alt;
    property declare: WordBool read Get_declare write Set_declare;
    property standby: WideString read Get_standby write Set_standby;
    property border: OleVariant read Get_border write Set_border;
    property useMap: WideString read Get_useMap write Set_useMap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLObjectElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F827-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement3Disp = dispinterface
    ['{3050F827-98B5-11CF-BB82-00AA00BDCE0B}']
    property archive: WideString dispid - 2147415097;
    property alt: WideString dispid - 2147415096;
    property declare: WordBool dispid - 2147415095;
    property standby: WideString dispid - 2147415094;
    property border: OleVariant dispid - 2147415093;
    property useMap: WideString dispid - 2147415092;
  end;

// *********************************************************************//
// Interface: IHTMLParamElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F83D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLParamElement = interface(IDispatch)
    ['{3050F83D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    procedure Set_valueType(const p: WideString); safecall;
    function Get_valueType: WideString; safecall;
    property name: WideString read Get_name write Set_name;
    property value: WideString read Get_value write Set_value;
    property type_: WideString read Get_type_ write Set_type_;
    property valueType: WideString read Get_valueType write Set_valueType;
  end;

// *********************************************************************//
// DispIntf:  IHTMLParamElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F83D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLParamElementDisp = dispinterface
    ['{3050F83D-98B5-11CF-BB82-00AA00BDCE0B}']
    property name: WideString dispid 1001;
    property value: WideString dispid 1002;
    property type_: WideString dispid 1003;
    property valueType: WideString dispid 1004;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLObjectElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F529-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLObjectElement = dispinterface
    ['{3050F529-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property object_: IDispatch readonly dispid - 2147415111;
    property recordset: IDispatch dispid - 2147415107;
    property align: WideString dispid - 2147418039;
    property name: WideString dispid - 2147418112;
    property codeBase: WideString dispid - 2147415106;
    property codeType: WideString dispid - 2147415105;
    property code: WideString dispid - 2147415104;
    property BaseHref: WideString readonly dispid - 2147418110;
    property type_: WideString dispid - 2147415103;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    property width: OleVariant dispid - 2147418107;
    property height: OleVariant dispid - 2147418106;
    property onerror: OleVariant dispid - 2147412083;
    property altHtml: WideString dispid - 2147415101;
    property vspace: Integer dispid - 2147415100;
    property hspace: Integer dispid - 2147415099;
    function namedRecordset(const dataMember: WideString; var hierarchy: OleVariant): IDispatch; dispid - 2147415098;
    property classid: WideString dispid - 2147415110;
    property data: WideString dispid - 2147415109;
    property archive: WideString dispid - 2147415097;
    property alt: WideString dispid - 2147415096;
    property declare: WordBool dispid - 2147415095;
    property standby: WideString dispid - 2147415094;
    property border: OleVariant dispid - 2147415093;
    property useMap: WideString dispid - 2147415092;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLParamElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F590-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLParamElement = dispinterface
    ['{3050F590-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property name: WideString dispid 1001;
    property value: WideString dispid 1002;
    property type_: WideString dispid 1003;
    property valueType: WideString dispid 1004;
  end;

// *********************************************************************//
// DispIntf:  HTMLFrameSiteEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F7FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLFrameSiteEvents2 = dispinterface
    ['{3050F7FF-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
  end;

// *********************************************************************//
// DispIntf:  HTMLFrameSiteEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F800-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLFrameSiteEvents = dispinterface
    ['{3050F800-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onload; dispid 1003;
  end;

// *********************************************************************//
// Interface: IHTMLFrameBase2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6DB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameBase2 = interface(IDispatch)
    ['{3050F6DB-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_contentWindow: IHTMLWindow2; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    function Get_readyState: WideString; safecall;
    procedure Set_allowTransparency(p: WordBool); safecall;
    function Get_allowTransparency: WordBool; safecall;
    property contentWindow: IHTMLWindow2 read Get_contentWindow;
    property onload: OleVariant read Get_onload write Set_onload;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property readyState: WideString read Get_readyState;
    property allowTransparency: WordBool read Get_allowTransparency write Set_allowTransparency;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameBase2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6DB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameBase2Disp = dispinterface
    ['{3050F6DB-98B5-11CF-BB82-00AA00BDCE0B}']
    property contentWindow: IHTMLWindow2 readonly dispid - 2147415103;
    property onload: OleVariant dispid - 2147412080;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property readyState: WideString readonly dispid - 2147412996;
    property allowTransparency: WordBool dispid - 2147412906;
  end;

// *********************************************************************//
// Interface: IHTMLFrameBase3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameBase3 = interface(IDispatch)
    ['{3050F82E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_longDesc(const p: WideString); safecall;
    function Get_longDesc: WideString; safecall;
    property longDesc: WideString read Get_longDesc write Set_longDesc;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameBase3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameBase3Disp = dispinterface
    ['{3050F82E-98B5-11CF-BB82-00AA00BDCE0B}']
    property longDesc: WideString dispid - 2147415102;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFrameBase
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F541-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFrameBase = dispinterface
    ['{3050F541-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property src: WideString dispid - 2147415112;
    property name: WideString dispid - 2147418112;
    property border: OleVariant dispid - 2147415110;
    property frameBorder: WideString dispid - 2147415109;
    property frameSpacing: OleVariant dispid - 2147415108;
    property marginWidth: OleVariant dispid - 2147415107;
    property marginHeight: OleVariant dispid - 2147415106;
    property noResize: WordBool dispid - 2147415105;
    property scrolling: WideString dispid - 2147415104;
    property contentWindow: IHTMLWindow2 readonly dispid - 2147415103;
    property onload: OleVariant dispid - 2147412080;
    property allowTransparency: WordBool dispid - 2147412906;
    property longDesc: WideString dispid - 2147415102;
  end;

// *********************************************************************//
// Interface: IHTMLFrameElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F313-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameElement = interface(IDispatch)
    ['{3050F313-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_borderColor(p: OleVariant); safecall;
    function Get_borderColor: OleVariant; safecall;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F313-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameElementDisp = dispinterface
    ['{3050F313-98B5-11CF-BB82-00AA00BDCE0B}']
    property borderColor: OleVariant dispid - 2147414111;
  end;

// *********************************************************************//
// Interface: IHTMLFrameElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7F5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameElement2 = interface(IDispatch)
    ['{3050F7F5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    property height: OleVariant read Get_height write Set_height;
    property width: OleVariant read Get_width write Set_width;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7F5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameElement2Disp = dispinterface
    ['{3050F7F5-98B5-11CF-BB82-00AA00BDCE0B}']
    property height: OleVariant dispid - 2147418106;
    property width: OleVariant dispid - 2147418107;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFrameElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F513-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFrameElement = dispinterface
    ['{3050F513-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property src: WideString dispid - 2147415112;
    property name: WideString dispid - 2147418112;
    property border: OleVariant dispid - 2147415110;
    property frameBorder: WideString dispid - 2147415109;
    property frameSpacing: OleVariant dispid - 2147415108;
    property marginWidth: OleVariant dispid - 2147415107;
    property marginHeight: OleVariant dispid - 2147415106;
    property noResize: WordBool dispid - 2147415105;
    property scrolling: WideString dispid - 2147415104;
    property contentWindow: IHTMLWindow2 readonly dispid - 2147415103;
    property onload: OleVariant dispid - 2147412080;
    property allowTransparency: WordBool dispid - 2147412906;
    property longDesc: WideString dispid - 2147415102;
    property borderColor: OleVariant dispid - 2147414111;
    property height: OleVariant dispid - 2147418106;
    property width: OleVariant dispid - 2147418107;
  end;

// *********************************************************************//
// Interface: IHTMLIFrameElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F315-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIFrameElement = interface(IDispatch)
    ['{3050F315-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_vspace(p: Integer); safecall;
    function Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function Get_hspace: Integer; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLIFrameElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F315-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIFrameElementDisp = dispinterface
    ['{3050F315-98B5-11CF-BB82-00AA00BDCE0B}']
    property vspace: Integer dispid - 2147414111;
    property hspace: Integer dispid - 2147414110;
    property align: WideString dispid - 2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLIFrameElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIFrameElement2 = interface(IDispatch)
    ['{3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    property height: OleVariant read Get_height write Set_height;
    property width: OleVariant read Get_width write Set_width;
  end;

// *********************************************************************//
// DispIntf:  IHTMLIFrameElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIFrameElement2Disp = dispinterface
    ['{3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}']
    property height: OleVariant dispid - 2147418106;
    property width: OleVariant dispid - 2147418107;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLIFrame
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLIFrame = dispinterface
    ['{3050F51B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property src: WideString dispid - 2147415112;
    property name: WideString dispid - 2147418112;
    property border: OleVariant dispid - 2147415110;
    property frameBorder: WideString dispid - 2147415109;
    property frameSpacing: OleVariant dispid - 2147415108;
    property marginWidth: OleVariant dispid - 2147415107;
    property marginHeight: OleVariant dispid - 2147415106;
    property noResize: WordBool dispid - 2147415105;
    property scrolling: WideString dispid - 2147415104;
    property contentWindow: IHTMLWindow2 readonly dispid - 2147415103;
    property onload: OleVariant dispid - 2147412080;
    property allowTransparency: WordBool dispid - 2147412906;
    property longDesc: WideString dispid - 2147415102;
    property vspace: Integer dispid - 2147414111;
    property hspace: Integer dispid - 2147414110;
    property align: WideString dispid - 2147418039;
    property height: OleVariant dispid - 2147418106;
    property width: OleVariant dispid - 2147418107;
  end;

// *********************************************************************//
// Interface: IHTMLDivPosition
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F212-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDivPosition = interface(IDispatch)
    ['{3050F212-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDivPositionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F212-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDivPositionDisp = dispinterface
    ['{3050F212-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid - 2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLFieldSetElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFieldSetElement = interface(IDispatch)
    ['{3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFieldSetElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFieldSetElementDisp = dispinterface
    ['{3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid - 2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLFieldSetElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F833-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFieldSetElement2 = interface(IDispatch)
    ['{3050F833-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_form: IHTMLFormElement; safecall;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFieldSetElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F833-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFieldSetElement2Disp = dispinterface
    ['{3050F833-98B5-11CF-BB82-00AA00BDCE0B}']
    property form: IHTMLFormElement readonly dispid - 2147416108;
  end;

// *********************************************************************//
// Interface: IHTMLLegendElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLegendElement = interface(IDispatch)
    ['{3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLegendElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLegendElementDisp = dispinterface
    ['{3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid - 2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLLegendElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F834-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLegendElement2 = interface(IDispatch)
    ['{3050F834-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_form: IHTMLFormElement; safecall;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLegendElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F834-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLegendElement2Disp = dispinterface
    ['{3050F834-98B5-11CF-BB82-00AA00BDCE0B}']
    property form: IHTMLFormElement readonly dispid - 2147416108;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDivPosition
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDivPosition = dispinterface
    ['{3050F50F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property align: WideString dispid - 2147418039;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFieldSetElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F545-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFieldSetElement = dispinterface
    ['{3050F545-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property align: WideString dispid - 2147418039;
    property form: IHTMLFormElement readonly dispid - 2147416108;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLLegendElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F546-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLLegendElement = dispinterface
    ['{3050F546-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property align: WideString dispid - 2147418039;
    property form: IHTMLFormElement readonly dispid - 2147416108;
  end;

// *********************************************************************//
// Interface: IHTMLSpanFlow
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSpanFlow = interface(IDispatch)
    ['{3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSpanFlowDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSpanFlowDisp = dispinterface
    ['{3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid - 2147418039;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLSpanFlow
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F544-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLSpanFlow = dispinterface
    ['{3050F544-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
    property align: WideString dispid - 2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLFrameSetElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F319-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameSetElement = interface(IDispatch)
    ['{3050F319-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_rows(const p: WideString); safecall;
    function Get_rows: WideString; safecall;
    procedure Set_cols(const p: WideString); safecall;
    function Get_cols: WideString; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function Get_border: OleVariant; safecall;
    procedure Set_borderColor(p: OleVariant); safecall;
    function Get_borderColor: OleVariant; safecall;
    procedure Set_frameBorder(const p: WideString); safecall;
    function Get_frameBorder: WideString; safecall;
    procedure Set_frameSpacing(p: OleVariant); safecall;
    function Get_frameSpacing: OleVariant; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onunload(p: OleVariant); safecall;
    function Get_onunload: OleVariant; safecall;
    procedure Set_onbeforeunload(p: OleVariant); safecall;
    function Get_onbeforeunload: OleVariant; safecall;
    property rows: WideString read Get_rows write Set_rows;
    property cols: WideString read Get_cols write Set_cols;
    property border: OleVariant read Get_border write Set_border;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
    property frameBorder: WideString read Get_frameBorder write Set_frameBorder;
    property frameSpacing: OleVariant read Get_frameSpacing write Set_frameSpacing;
    property name: WideString read Get_name write Set_name;
    property onload: OleVariant read Get_onload write Set_onload;
    property onunload: OleVariant read Get_onunload write Set_onunload;
    property onbeforeunload: OleVariant read Get_onbeforeunload write Set_onbeforeunload;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameSetElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F319-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameSetElementDisp = dispinterface
    ['{3050F319-98B5-11CF-BB82-00AA00BDCE0B}']
    property rows: WideString dispid 1000;
    property cols: WideString dispid 1001;
    property border: OleVariant dispid 1002;
    property borderColor: OleVariant dispid 1003;
    property frameBorder: WideString dispid 1004;
    property frameSpacing: OleVariant dispid 1005;
    property name: WideString dispid - 2147418112;
    property onload: OleVariant dispid - 2147412080;
    property onunload: OleVariant dispid - 2147412079;
    property onbeforeunload: OleVariant dispid - 2147412073;
  end;

// *********************************************************************//
// Interface: IHTMLFrameSetElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameSetElement2 = interface(IDispatch)
    ['{3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onbeforeprint(p: OleVariant); safecall;
    function Get_onbeforeprint: OleVariant; safecall;
    procedure Set_onafterprint(p: OleVariant); safecall;
    function Get_onafterprint: OleVariant; safecall;
    property onbeforeprint: OleVariant read Get_onbeforeprint write Set_onbeforeprint;
    property onafterprint: OleVariant read Get_onafterprint write Set_onafterprint;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameSetElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameSetElement2Disp = dispinterface
    ['{3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}']
    property onbeforeprint: OleVariant dispid - 2147412046;
    property onafterprint: OleVariant dispid - 2147412045;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFrameSetSite
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F514-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFrameSetSite = dispinterface
    ['{3050F514-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property rows: WideString dispid 1000;
    property cols: WideString dispid 1001;
    property border: OleVariant dispid 1002;
    property borderColor: OleVariant dispid 1003;
    property frameBorder: WideString dispid 1004;
    property frameSpacing: OleVariant dispid 1005;
    property name: WideString dispid - 2147418112;
    property onload: OleVariant dispid - 2147412080;
    property onunload: OleVariant dispid - 2147412079;
    property onbeforeunload: OleVariant dispid - 2147412073;
    property onbeforeprint: OleVariant dispid - 2147412046;
    property onafterprint: OleVariant dispid - 2147412045;
  end;

// *********************************************************************//
// Interface: IHTMLBGsound
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F369-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBGsound = interface(IDispatch)
    ['{3050F369-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_loop(p: OleVariant); safecall;
    function Get_loop: OleVariant; safecall;
    procedure Set_volume(p: OleVariant); safecall;
    function Get_volume: OleVariant; safecall;
    procedure Set_balance(p: OleVariant); safecall;
    function Get_balance: OleVariant; safecall;
    property src: WideString read Get_src write Set_src;
    property loop: OleVariant read Get_loop write Set_loop;
    property volume: OleVariant read Get_volume write Set_volume;
    property balance: OleVariant read Get_balance write Set_balance;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBGsoundDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F369-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBGsoundDisp = dispinterface
    ['{3050F369-98B5-11CF-BB82-00AA00BDCE0B}']
    property src: WideString dispid 1001;
    property loop: OleVariant dispid 1002;
    property volume: OleVariant dispid 1003;
    property balance: OleVariant dispid 1004;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBGsound
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F53C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBGsound = dispinterface
    ['{3050F53C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property src: WideString dispid 1001;
    property loop: OleVariant dispid 1002;
    property volume: OleVariant dispid 1003;
    property balance: OleVariant dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLFontNamesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F376-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontNamesCollection = interface(IDispatch)
    ['{3050F376-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(index: Integer): WideString; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFontNamesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F376-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontNamesCollectionDisp = dispinterface
    ['{3050F376-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1501;
    property _newEnum: IUnknown readonly dispid - 4;
    function item(index: Integer): WideString; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLFontSizesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F377-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontSizesCollection = interface(IDispatch)
    ['{3050F377-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function Get_forFont: WideString; safecall;
    function item(index: Integer): Integer; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
    property forFont: WideString read Get_forFont;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFontSizesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F377-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontSizesCollectionDisp = dispinterface
    ['{3050F377-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1502;
    property _newEnum: IUnknown readonly dispid - 4;
    property forFont: WideString readonly dispid 1503;
    function item(index: Integer): Integer; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLOptionsHolder
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F378-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionsHolder = interface(IDispatch)
    ['{3050F378-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_document: IHTMLDocument2; safecall;
    function Get_fonts: IHTMLFontNamesCollection; safecall;
    procedure Set_execArg(p: OleVariant); safecall;
    function Get_execArg: OleVariant; safecall;
    procedure Set_errorLine(p: Integer); safecall;
    function Get_errorLine: Integer; safecall;
    procedure Set_errorCharacter(p: Integer); safecall;
    function Get_errorCharacter: Integer; safecall;
    procedure Set_errorCode(p: Integer); safecall;
    function Get_errorCode: Integer; safecall;
    procedure Set_errorMessage(const p: WideString); safecall;
    function Get_errorMessage: WideString; safecall;
    procedure Set_errorDebug(p: WordBool); safecall;
    function Get_errorDebug: WordBool; safecall;
    function Get_unsecuredWindowOfDocument: IHTMLWindow2; safecall;
    procedure Set_findText(const p: WideString); safecall;
    function Get_findText: WideString; safecall;
    procedure Set_anythingAfterFrameset(p: WordBool); safecall;
    function Get_anythingAfterFrameset: WordBool; safecall;
    function sizes(const fontName: WideString): IHTMLFontSizesCollection; safecall;
    function openfiledlg(initFile: OleVariant; initDir: OleVariant; filter: OleVariant;
      title: OleVariant): WideString; safecall;
    function savefiledlg(initFile: OleVariant; initDir: OleVariant; filter: OleVariant;
      title: OleVariant): WideString; safecall;
    function choosecolordlg(initColor: OleVariant): Integer; safecall;
    procedure showSecurityInfo; safecall;
    function isApartmentModel(const object_: IHTMLObjectElement): WordBool; safecall;
    function getCharset(const fontName: WideString): Integer; safecall;
    function Get_secureConnectionInfo: WideString; safecall;
    property document: IHTMLDocument2 read Get_document;
    property fonts: IHTMLFontNamesCollection read Get_fonts;
    property execArg: OleVariant read Get_execArg write Set_execArg;
    property errorLine: Integer read Get_errorLine write Set_errorLine;
    property errorCharacter: Integer read Get_errorCharacter write Set_errorCharacter;
    property errorCode: Integer read Get_errorCode write Set_errorCode;
    property errorMessage: WideString read Get_errorMessage write Set_errorMessage;
    property errorDebug: WordBool read Get_errorDebug write Set_errorDebug;
    property unsecuredWindowOfDocument: IHTMLWindow2 read Get_unsecuredWindowOfDocument;
    property findText: WideString read Get_findText write Set_findText;
    property anythingAfterFrameset: WordBool read Get_anythingAfterFrameset write Set_anythingAfterFrameset;
    property secureConnectionInfo: WideString read Get_secureConnectionInfo;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionsHolderDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F378-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionsHolderDisp = dispinterface
    ['{3050F378-98B5-11CF-BB82-00AA00BDCE0B}']
    property document: IHTMLDocument2 readonly dispid 1503;
    property fonts: IHTMLFontNamesCollection readonly dispid 1504;
    property execArg: OleVariant dispid 1505;
    property errorLine: Integer dispid 1506;
    property errorCharacter: Integer dispid 1507;
    property errorCode: Integer dispid 1508;
    property errorMessage: WideString dispid 1509;
    property errorDebug: WordBool dispid 1510;
    property unsecuredWindowOfDocument: IHTMLWindow2 readonly dispid 1511;
    property findText: WideString dispid 1512;
    property anythingAfterFrameset: WordBool dispid 1513;
    function sizes(const fontName: WideString): IHTMLFontSizesCollection; dispid 1514;
    function openfiledlg(initFile: OleVariant; initDir: OleVariant; filter: OleVariant;
      title: OleVariant): WideString; dispid 1515;
    function savefiledlg(initFile: OleVariant; initDir: OleVariant; filter: OleVariant;
      title: OleVariant): WideString; dispid 1516;
    function choosecolordlg(initColor: OleVariant): Integer; dispid 1517;
    procedure showSecurityInfo; dispid 1518;
    function isApartmentModel(const object_: IHTMLObjectElement): WordBool; dispid 1519;
    function getCharset(const fontName: WideString): Integer; dispid 1520;
    property secureConnectionInfo: WideString readonly dispid 1521;
  end;

// *********************************************************************//
// DispIntf:  HTMLStyleElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F615-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLStyleElementEvents2 = dispinterface
    ['{3050F615-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid - 601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid - 603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid - 602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid - 604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid - 2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid - 2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid - 606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid - 605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid - 607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid - 2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid - 2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid - 2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid - 2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid - 2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid - 2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid - 2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid - 2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid - 2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid - 2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid - 2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid - 2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid - 2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid - 2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid - 2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid - 2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  HTMLStyleElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3CB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLStyleElementEvents = dispinterface
    ['{3050F3CB-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid - 2147418102;
    function onclick: WordBool; dispid - 600;
    function ondblclick: WordBool; dispid - 601;
    function onkeypress: WordBool; dispid - 603;
    procedure onkeydown; dispid - 602;
    procedure onkeyup; dispid - 604;
    procedure onmouseout; dispid - 2147418103;
    procedure onmouseover; dispid - 2147418104;
    procedure onmousemove; dispid - 606;
    procedure onmousedown; dispid - 605;
    procedure onmouseup; dispid - 607;
    function onselectstart: WordBool; dispid - 2147418100;
    procedure onfilterchange; dispid - 2147418095;
    function ondragstart: WordBool; dispid - 2147418101;
    function onbeforeupdate: WordBool; dispid - 2147418108;
    procedure onafterupdate; dispid - 2147418107;
    function onerrorupdate: WordBool; dispid - 2147418099;
    function onrowexit: WordBool; dispid - 2147418106;
    procedure onrowenter; dispid - 2147418105;
    procedure ondatasetchanged; dispid - 2147418098;
    procedure ondataavailable; dispid - 2147418097;
    procedure ondatasetcomplete; dispid - 2147418096;
    procedure onlosecapture; dispid - 2147418094;
    procedure onpropertychange; dispid - 2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid - 2147418111;
    procedure onblur; dispid - 2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid - 2147418092;
    procedure ondragend; dispid - 2147418091;
    function ondragenter: WordBool; dispid - 2147418090;
    function ondragover: WordBool; dispid - 2147418089;
    procedure ondragleave; dispid - 2147418088;
    function ondrop: WordBool; dispid - 2147418087;
    function onbeforecut: WordBool; dispid - 2147418083;
    function oncut: WordBool; dispid - 2147418086;
    function onbeforecopy: WordBool; dispid - 2147418082;
    function oncopy: WordBool; dispid - 2147418085;
    function onbeforepaste: WordBool; dispid - 2147418081;
    function onpaste: WordBool; dispid - 2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid - 2147418080;
    procedure onrowsinserted; dispid - 2147418079;
    procedure oncellchange; dispid - 2147418078;
    procedure onreadystatechange; dispid - 609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLStyleElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F375-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleElement = interface(IDispatch)
    ['{3050F375-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    function Get_readyState: WideString; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    function Get_styleSheet: IHTMLStyleSheet; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    procedure Set_media(const p: WideString); safecall;
    function Get_media: WideString; safecall;
    property type_: WideString read Get_type_ write Set_type_;
    property readyState: WideString read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property styleSheet: IHTMLStyleSheet read Get_styleSheet;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property media: WideString read Get_media write Set_media;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F375-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleElementDisp = dispinterface
    ['{3050F375-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString dispid 1002;
    property readyState: WideString readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onload: OleVariant dispid - 2147412080;
    property onerror: OleVariant dispid - 2147412083;
    property styleSheet: IHTMLStyleSheet readonly dispid 1004;
    property disabled: WordBool dispid - 2147418036;
    property media: WideString dispid 1006;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyleElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F511-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyleElement = dispinterface
    ['{3050F511-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property scopeName: WideString readonly dispid - 2147417073;
    procedure setCapture(containerCapture: WordBool); dispid - 2147417072;
    procedure releaseCapture; dispid - 2147417071;
    property onlosecapture: OleVariant dispid - 2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid - 2147417070;
    procedure doScroll(component: OleVariant); dispid - 2147417069;
    property onscroll: OleVariant dispid - 2147412081;
    property ondrag: OleVariant dispid - 2147412063;
    property ondragend: OleVariant dispid - 2147412062;
    property ondragenter: OleVariant dispid - 2147412061;
    property ondragover: OleVariant dispid - 2147412060;
    property ondragleave: OleVariant dispid - 2147412059;
    property ondrop: OleVariant dispid - 2147412058;
    property onbeforecut: OleVariant dispid - 2147412054;
    property oncut: OleVariant dispid - 2147412057;
    property onbeforecopy: OleVariant dispid - 2147412053;
    property oncopy: OleVariant dispid - 2147412056;
    property onbeforepaste: OleVariant dispid - 2147412052;
    property onpaste: OleVariant dispid - 2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid - 2147417105;
    property onpropertychange: OleVariant dispid - 2147412065;
    function getClientRects: IHTMLRectCollection; dispid - 2147417068;
    function getBoundingClientRect: IHTMLRect; dispid - 2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString;
      const language: WideString); dispid - 2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid - 2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid - 2147417606;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    property onrowsdelete: OleVariant dispid - 2147412050;
    property onrowsinserted: OleVariant dispid - 2147412049;
    property oncellchange: OleVariant dispid - 2147412048;
    property dir: WideString dispid - 2147412995;
    function createControlRange: IDispatch; dispid - 2147417056;
    property scrollHeight: Integer readonly dispid - 2147417055;
    property scrollWidth: Integer readonly dispid - 2147417054;
    property scrollTop: Integer dispid - 2147417053;
    property scrollLeft: Integer dispid - 2147417052;
    procedure clearAttributes; dispid - 2147417050;
    property oncontextmenu: OleVariant dispid - 2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid - 2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid - 2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid - 2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid - 2147417041;
    property canHaveChildren: WordBool readonly dispid - 2147417040;
    function addBehavior(const bstrUrl: WideString; var pvarFactory: OleVariant): Integer; dispid - 2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid - 2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid - 2147417048;
    property behaviorUrns: IDispatch readonly dispid - 2147417030;
    property tagUrn: WideString dispid - 2147417029;
    property onbeforeeditfocus: OleVariant dispid - 2147412043;
    property readyStateValue: Integer readonly dispid - 2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid - 2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; var pvarFlags: OleVariant); dispid - 2147417016;
    property isMultiLine: WordBool readonly dispid - 2147417015;
    property canHaveHTML: WordBool readonly dispid - 2147417014;
    property onlayoutcomplete: OleVariant dispid - 2147412039;
    property onpage: OleVariant dispid - 2147412038;
    property inflateBlock: WordBool dispid - 2147417012;
    property onbeforedeactivate: OleVariant dispid - 2147412035;
    procedure setActive; dispid - 2147417011;
    property contentEditable: WideString dispid - 2147412950;
    property isContentEditable: WordBool readonly dispid - 2147417010;
    property hideFocus: WordBool dispid - 2147412949;
    property disabled: WordBool dispid - 2147418036;
    property isDisabled: WordBool readonly dispid - 2147417007;
    property onmove: OleVariant dispid - 2147412034;
    property oncontrolselect: OleVariant dispid - 2147412033;
    function FireEvent(const bstrEventName: WideString; var pvarEventObject: OleVariant): WordBool; dispid - 2147417006;
    property onresizestart: OleVariant dispid - 2147412029;
    property onresizeend: OleVariant dispid - 2147412028;
    property onmovestart: OleVariant dispid - 2147412031;
    property onmoveend: OleVariant dispid - 2147412030;
    property onmouseenter: OleVariant dispid - 2147412027;
    property onmouseleave: OleVariant dispid - 2147412026;
    property onactivate: OleVariant dispid - 2147412025;
    property ondeactivate: OleVariant dispid - 2147412024;
    function dragDrop: WordBool; dispid - 2147417005;
    property glyphMode: Integer readonly dispid - 2147417004;
    property onmousewheel: OleVariant dispid - 2147412036;
    procedure normalize; dispid - 2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid - 2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid - 2147417001;
    property onbeforeactivate: OleVariant dispid - 2147412022;
    property onfocusin: OleVariant dispid - 2147412021;
    property onfocusout: OleVariant dispid - 2147412020;
    property uniqueNumber: Integer readonly dispid - 2147417058;
    property uniqueID: WideString readonly dispid - 2147417057;
    property nodeType: Integer readonly dispid - 2147417066;
    property parentNode: IHTMLDOMNode readonly dispid - 2147417065;
    function hasChildNodes: WordBool; dispid - 2147417064;
    property childNodes: IDispatch readonly dispid - 2147417063;
    property attributes: IDispatch readonly dispid - 2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid - 2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid - 2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid - 2147417039;
    property nodeName: WideString readonly dispid - 2147417038;
    property nodeValue: OleVariant dispid - 2147417037;
    property firstChild: IHTMLDOMNode readonly dispid - 2147417036;
    property lastChild: IHTMLDOMNode readonly dispid - 2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid - 2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid - 2147417033;
    property ownerDocument: IDispatch readonly dispid - 2147416999;
    property type_: WideString dispid 1002;
    property onload: OleVariant dispid - 2147412080;
    property onerror: OleVariant dispid - 2147412083;
    property styleSheet: IHTMLStyleSheet readonly dispid 1004;
    property media: WideString dispid 1006;
  end;

// *********************************************************************//
// Interface: IHTMLStyleFontFace
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleFontFace = interface(IDispatch)
    ['{3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_fontsrc(const p: WideString); safecall;
    function Get_fontsrc: WideString; safecall;
    property fontsrc: WideString read Get_fontsrc write Set_fontsrc;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleFontFaceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleFontFaceDisp = dispinterface
    ['{3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontsrc: WideString dispid - 2147413015;
  end;

// *********************************************************************//
// Interface: ICSSFilterSite
// Flags:     (0)
// GUID:      {3050F3ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICSSFilterSite = interface(IUnknown)
    ['{3050F3ED-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetElement(out element: IHTMLElement): HRESULT; stdcall;
    function FireOnFilterChangeEvent: HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupPointer
// Flags:     (0)
// GUID:      {3050F49F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  pTOleChar = ^TOleChar;

  IMarkupPointer = interface(IUnknown)
    ['{3050F49F-98B5-11CF-BB82-00AA00BDCE0B}']
    function OwningDoc(out ppDoc: IHTMLDocument2): HRESULT; stdcall;
    function Gravity(out pGravity: _POINTER_GRAVITY): HRESULT; stdcall;
    function SetGravity(Gravity: _POINTER_GRAVITY): HRESULT; stdcall;
    function Cling(out pfCling: Integer): HRESULT; stdcall;
    function SetCling(fCLing: Integer): HRESULT; stdcall;
    function Unposition: HRESULT; stdcall;
    function IsPositioned(out pfPositioned: Integer): HRESULT; stdcall;
    function GetContainer(out ppContainer: IMarkupContainer): HRESULT; stdcall;
    function MoveAdjacentToElement(const pElement: IHTMLElement; eAdj: _ELEMENT_ADJACENCY): HRESULT; stdcall;
    function MoveToPointer(const pPointer: IMarkupPointer): HRESULT; stdcall;
    function MoveToContainer(const pContainer: IMarkupContainer; fAtStart: Integer): HRESULT; stdcall;
    function left(fMove: Integer; out pContext: _MARKUP_CONTEXT_TYPE; out ppElement: IHTMLElement;
      var pcch: Integer; pchText: pTOleChar): HRESULT; stdcall;
    function right(fMove: Integer; out pContext: _MARKUP_CONTEXT_TYPE; out ppElement: IHTMLElement;
      var pcch: Integer; pchText: pTOleChar): HRESULT; stdcall;
    function CurrentScope(out ppElemCurrent: IHTMLElement): HRESULT; stdcall;
    function IsLeftOf(const pPointerThat: IMarkupPointer; out pfResult: Integer): HRESULT; stdcall;
    function IsLeftOfOrEqualTo(const pPointerThat: IMarkupPointer; out pfResult: Integer): HRESULT; stdcall;
    function IsRightOf(const pPointerThat: IMarkupPointer; out pfResult: Integer): HRESULT; stdcall;
    function IsRightOfOrEqualTo(const pPointerThat: IMarkupPointer; out pfResult: Integer): HRESULT; stdcall;
    function IsEqualTo(const pPointerThat: IMarkupPointer; out pfAreEqual: Integer): HRESULT; stdcall;
    function MoveUnit(muAction: _MOVEUNIT_ACTION): HRESULT; stdcall;
    // !! API fix decl
    function findText(const pchFindText: PWideChar; dwFlags: LongWord; const pIEndMatch: IMarkupPointer;
      const pIEndSearch: IMarkupPointer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupContainer
// Flags:     (0)
// GUID:      {3050F5F9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupContainer = interface(IUnknown)
    ['{3050F5F9-98B5-11CF-BB82-00AA00BDCE0B}']
    function OwningDoc(out ppDoc: IHTMLDocument2): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupContainer2
// Flags:     (0)
// GUID:      {3050F648-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupContainer2 = interface(IMarkupContainer)
    ['{3050F648-98B5-11CF-BB82-00AA00BDCE0B}']
    function CreateChangeLog(const pChangeSink: IHTMLChangeSink; out ppChangeLog: IHTMLChangeLog;
      fForward: Integer; fBackward: Integer): HRESULT; stdcall;
    function RegisterForDirtyRange(const pChangeSink: IHTMLChangeSink; out pdwCookie: LongWord): HRESULT; stdcall;
    function UnRegisterForDirtyRange(dwCookie: LongWord): HRESULT; stdcall;
    function GetAndClearDirtyRange(dwCookie: LongWord; const pIPointerBegin: IMarkupPointer;
      const pIPointerEnd: IMarkupPointer): HRESULT; stdcall;
    function GetVersionNumber: Integer; stdcall;
    function GetMasterElement(out ppElementMaster: IHTMLElement): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLChangeSink
// Flags:     (0)
// GUID:      {3050F64A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLChangeSink = interface(IUnknown)
    ['{3050F64A-98B5-11CF-BB82-00AA00BDCE0B}']
    function Notify: HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLChangeLog
// Flags:     (0)
// GUID:      {3050F649-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLChangeLog = interface(IUnknown)
    ['{3050F649-98B5-11CF-BB82-00AA00BDCE0B}']
// !! API change
//    function GetNextChange(pbBuffer: PByte; nBufferSize: Integer; out pnRecordLength: Integer): HRESULT; stdcall;
    function GetNextChange(pbBuffer: PByte; nBufferSize: Integer; out pnRecordLength: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IActiveIMMApp
// Flags:     (0)
// GUID:      {08C0E040-62D1-11D1-9326-0060B067B86E}
// *********************************************************************//
  IActiveIMMApp = interface(IUnknown)
    ['{08C0E040-62D1-11D1-9326-0060B067B86E}']
    function AssociateContext(hWnd: THandle; hIME: HIMC; out phPrev: LongWord): HRESULT; stdcall;
    function ConfigureIMEA(var hKL: Pointer; hWnd: THandle; dwMode: LongWord;
      var pData: REGISTERWORDA): HRESULT; stdcall;
    function ConfigureIMEW(var hKL: Pointer; hWnd: THandle; dwMode: LongWord;
      var pData: REGISTERWORDW): HRESULT; stdcall;
    function CreateContext(out phIMC: HIMC): HRESULT; stdcall;
    function DestroyContext(hIME: HIMC): HRESULT; stdcall;
    function EnumRegisterWordA(var hKL: Pointer; szReading: PAnsiChar; dwStyle: LongWord;
      szRegister: PAnsiChar; var pData: Pointer; out pEnum: IEnumRegisterWordA): HRESULT; stdcall;
    function EnumRegisterWordW(var hKL: Pointer; szReading: PWideChar; dwStyle: LongWord;
      szRegister: PWideChar; var pData: Pointer;
      out pEnum: IEnumRegisterWordW): HRESULT; stdcall;
    function EscapeA(var hKL: Pointer; hIMC: HIMC; uEscape: SYSUINT; var pData: Pointer;
      out plResult: LRESULT): HRESULT; stdcall;
    function EscapeW(var hKL: Pointer; hIMC: HIMC; uEscape: SYSUINT; var pData: Pointer;
      out plResult: LRESULT): HRESULT; stdcall;
    function GetCandidateListA(hIMC: HIMC; dwIndex: LongWord; uBufLen: SYSUINT;
      out pCandList: CANDIDATELIST;
      out puCopied: SYSUINT): HRESULT; stdcall;
    function GetCandidateListW(hIMC: HIMC; dwIndex: LongWord; uBufLen: SYSUINT;
      out pCandList: CANDIDATELIST;
      out puCopied: SYSUINT): HRESULT; stdcall;
    function GetCandidateListCountA(hIMC: HIMC; out pdwListSize: LongWord;
      out pdwBufLen: LongWord): HRESULT; stdcall;
    function GetCandidateListCountW(hIMC: HIMC; out pdwListSize: LongWord;
      out pdwBufLen: LongWord): HRESULT; stdcall;
    function GetCandidateWindow(hIMC: HIMC; dwIndex: LongWord;
      out pCandidate: CANDIDATEFORM): HRESULT; stdcall;
    function GetCompositionFontA(hIMC: HIMC; out plf: LOGFONTA): HRESULT; stdcall;
    function GetCompositionFontW(hIMC: HIMC; out plf: LOGFONTA): HRESULT; stdcall;
    function GetCompositionStringA(hIMC: HIMC; dwIndex: LongWord; dwBufLen: LongWord;
      out plCopied: Integer; out pBuf: Pointer): HRESULT; stdcall;
    function GetCompositionStringW(hIMC: HIMC; dwIndex: LongWord; dwBufLen: LongWord;
      out plCopied: Integer; out pBuf: Pointer): HRESULT; stdcall;
    function GetCompositionWindow(hIMC: HIMC; out pCompForm: COMPOSITIONFORM): HRESULT; stdcall;
    function GetContext(hWnd: THandle; out hIMC: HIMC): HRESULT; stdcall;
    function GetConversionListA(var hKL: Pointer; hIMC: LongWord; pSrc: PAnsiChar; uBufLen: SYSUINT;
      uFlag: SYSUINT; out pDst: CANDIDATELIST;
      out puCopied: SYSUINT): HRESULT; stdcall;
    function GetConversionListW(var hKL: Pointer; hIMC: HIMC; pSrc: PWideChar;
      uBufLen: SYSUINT; uFlag: SYSUINT;
      out pDst: CANDIDATELIST; out puCopied: SYSUINT): HRESULT; stdcall;
    function GetConversionStatus(hIMC: HIMC; out pfdwConversion: LongWord;
      out pfdwSentence: LongWord): HRESULT; stdcall;
    function GetDefaultIMEWnd(hWnd: HWND; out phDefWnd: HWND): HRESULT; stdcall;
    function GetDescriptionA(var hKL: Pointer; uBufLen: SYSUINT; szDescription: PAnsiChar;
      out puCopied: SYSUINT): HRESULT; stdcall;
    function GetDescriptionW(var hKL: Pointer; uBufLen: SYSUINT; szDescription: PWideChar;
      out puCopied: SYSUINT): HRESULT; stdcall;
    function GetGuideLineA(hIMC: HIMC; dwIndex: LongWord; dwBufLen: LongWord; pBuf: PAnsiChar;
      out pdwResult: LongWord): HRESULT; stdcall;
    function GetGuideLineW(hIMC: HIMC; dwIndex: LongWord; dwBufLen: LongWord; pBuf: PWideChar;
      out pdwResult: LongWord): HRESULT; stdcall;
    function GetIMEFileNameA(var hKL: Pointer; uBufLen: SYSUINT; szFileName: PAnsiChar;
      out puCopied: SYSUINT): HRESULT; stdcall;
    function GetIMEFileNameW(var hKL: Pointer; uBufLen: SYSUINT; szFileName: PWideChar;
      out puCopied: SYSUINT): HRESULT; stdcall;
    function GetOpenStatus(hIMC: HIMC): HRESULT; stdcall;
    function GetProperty(var hKL: Pointer; fdwIndex: LongWord; out pdwProperty: LongWord): HRESULT; stdcall;
    function GetRegisterWordStyleA(var hKL: Pointer; nItem: SYSUINT;
      out pStyleBuf: STYLEBUFA;
      out puCopied: SYSUINT): HRESULT; stdcall;
    function GetRegisterWordStyleW(var hKL: Pointer; nItem: SYSUINT;
      out pStyleBuf: STYLEBUFW;
      out puCopied: SYSUINT): HRESULT; stdcall;
    function GetStatusWindowPos(hIMC: HIMC; out pptPos: TPoint): HRESULT; stdcall;
    function GetVirtualKey(hWnd: THandle; out puVirtualKey: SYSUINT): HRESULT; stdcall;
    function InstallIMEA(szIMEFileName: PAnsiChar; szLayoutText: PAnsiChar; out phKL: Pointer): HRESULT; stdcall;
    function InstallIMEW(szIMEFileName: PWideChar; szLayoutText: PWideChar; out phKL: Pointer): HRESULT; stdcall;
    function IsIME(var hKL: Pointer): HRESULT; stdcall;
    function IsUIMessageA(hWndIME: THandle; msg: SYSUINT; wParam: WPARAM;
      lParam: LPARAM): HRESULT; stdcall;
    function IsUIMessageW(hWndIME: THandle; msg: SYSUINT; wParam: WPARAM;
      lParam: LPARAM): HRESULT; stdcall;
    function NotifyIME(hIMC: HIMC; dwAction: LongWord; dwIndex: LongWord; dwValue: LongWord): HRESULT; stdcall;
    function RegisterWordA(var hKL: Pointer; szReading: PAnsiChar; dwStyle: LongWord; szRegister: PAnsiChar): HRESULT; stdcall;
    function RegisterWordW(var hKL: Pointer; szReading: PWideChar; dwStyle: LongWord;
      szRegister: PWideChar): HRESULT; stdcall;
    function ReleaseContext(hWnd: THandle; hIMC: HIMC): HRESULT; stdcall;
    function SetCandidateWindow(hIMC: HIMC; var pCandidate: CANDIDATEFORM): HRESULT; stdcall;
    function SetCompositionFontA(hIMC: HIMC; var plf: LOGFONTA): HRESULT; stdcall;
    function SetCompositionFontW(hIMC: HIMC; var plf: tagLOGFONTW): HRESULT; stdcall;
    function SetCompositionStringA(hIMC: HIMC; dwIndex: LongWord; var pComp: Pointer;
      dwCompLen: LongWord; var pRead: Pointer; dwReadLen: LongWord): HRESULT; stdcall;
    function SetCompositionStringW(hIMC: HIMC; dwIndex: LongWord; var pComp: Pointer;
      dwCompLen: LongWord; var pRead: Pointer; dwReadLen: LongWord): HRESULT; stdcall;
    function SetCompositionWindow(hIMC: HIMC; var pCompForm: COMPOSITIONFORM): HRESULT; stdcall;
    function SetConversionStatus(hIMC: HIMC; fdwConversion: LongWord; fdwSentence: LongWord): HRESULT; stdcall;
    function SetOpenStatus(hIMC: LongWord; fOpen: Integer): HRESULT; stdcall;
    function SetStatusWindowPos(hIMC: HIMC; var pptPos: TPoint): HRESULT; stdcall;
    function SimulateHotKey(hWnd: Thandle; dwHotKeyID: LongWord): HRESULT; stdcall;
    function UnregisterWordA(var hKL: Pointer; szReading: PAnsiChar; dwStyle: LongWord;
      szUnregister: PAnsiChar): HResult; stdcall;
    function UnregisterWordW(var hKL: Pointer; szReading: PWideChar; dwStyle: LongWord;
      szUnregister: PWideChar): HRESULT; stdcall;
    function Activate(fRestoreLayout: Integer): HRESULT; stdcall;
    function Deactivate: HRESULT; stdcall;
    function OnDefWindowProc(hWnd: THandle; msg: SYSUINT; wParam: WPARAM;
      lParam: LPARAM; out plResult: LRESULT): HRESULT; stdcall;
    function FilterClientWindows(var aaClassList: Word; uSize: SYSUINT): HRESULT; stdcall;
    function GetCodePageA(var hKL: Pointer; out uCodePage: SYSUINT): HRESULT; stdcall;
    function GetLangId(var hKL: Pointer; out plid: Word): HRESULT; stdcall;
    function AssociateContextEx(hWnd: THandle; hIMC: HIMC; dwFlags: LongWord): HRESULT; stdcall;
    function DisableIME(idThread: LongWord): HRESULT; stdcall;
    function GetImeMenuItemsA(hIMC: HIMC; dwFlags: LongWord; dwType: LongWord;
      var pImeParentMenu: IMEMENUITEMINFOA;
      out pImeMenu: IMEMENUITEMINFOA; dwSize: LongWord;
      out pdwResult: LongWord): HRESULT; stdcall;
    function GetImeMenuItemsW(hIMC: HIMC; dwFlags: LongWord; dwType: LongWord;
      var pImeParentMenu: IMEMENUITEMINFOW;
      out pImeMenu: IMEMENUITEMINFOW; dwSize: LongWord;
      out pdwResult: LongWord): HRESULT; stdcall;
    function EnumInputContext(idThread: LongWord; out ppEnum: IEnumInputContext): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IEnumRegisterWordA
// Flags:     (0)
// GUID:      {08C03412-F96B-11D0-A475-00AA006BCC59}
// *********************************************************************//
  IEnumRegisterWordA = interface(IUnknown)
    ['{08C03412-F96B-11D0-A475-00AA006BCC59}']
    function Clone(out ppEnum: IEnumRegisterWordA): HRESULT; stdcall;
    function Next(ulCount: LongWord; out rgRegisterWord: REGISTERWORDA;
      out pcFetched: LongWord): HRESULT; stdcall;
    function reset: HRESULT; stdcall;
    function Skip(ulCount: LongWord): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IEnumRegisterWordW
// Flags:     (0)
// GUID:      {4955DD31-B159-11D0-8FCF-00AA006BCC59}
// *********************************************************************//
  IEnumRegisterWordW = interface(IUnknown)
    ['{4955DD31-B159-11D0-8FCF-00AA006BCC59}']
    function Clone(out ppEnum: IEnumRegisterWordW): HRESULT; stdcall;
    function Next(ulCount: LongWord; out rgRegisterWord: REGISTERWORDW;
      out pcFetched: LongWord): HRESULT; stdcall;
    function reset: HRESULT; stdcall;
    function Skip(ulCount: LongWord): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IEnumInputContext
// Flags:     (0)
// GUID:      {09B5EAB0-F997-11D1-93D4-0060B067B86E}
// *********************************************************************//
  IEnumInputContext = interface(IUnknown)
    ['{09B5EAB0-F997-11D1-93D4-0060B067B86E}']
    function Clone(out ppEnum: IEnumInputContext): HRESULT; stdcall;
    function Next(ulCount: LongWord; out rgInputContext: LongWord; out pcFetched: LongWord): HRESULT; stdcall;
    function reset: HRESULT; stdcall;
    function Skip(ulCount: LongWord): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: ISegmentList
// Flags:     (0)
// GUID:      {3050F605-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISegmentList = interface(IUnknown)
    ['{3050F605-98B5-11CF-BB82-00AA00BDCE0B}']
    function CreateIterator(out ppIIter: ISegmentListIterator): HRESULT; stdcall;
    function GetType(out peType: _SELECTION_TYPE): HRESULT; stdcall;
    function IsEmpty(out pfEmpty: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: ISegmentListIterator
// Flags:     (0)
// GUID:      {3050F692-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISegmentListIterator = interface(IUnknown)
    ['{3050F692-98B5-11CF-BB82-00AA00BDCE0B}']
    function Current(out ppISegment: ISegment): HRESULT; stdcall;
    function First: HRESULT; stdcall;
    function IsDone: HRESULT; stdcall;
    function Advance: HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: ISegment
// Flags:     (0)
// GUID:      {3050F683-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISegment = interface(IUnknown)
    ['{3050F683-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetPointers(const pIStart: IMarkupPointer; const pIEnd: IMarkupPointer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLCaret
// Flags:     (0)
// GUID:      {3050F604-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCaret = interface(IUnknown)
    ['{3050F604-98B5-11CF-BB82-00AA00BDCE0B}']
    function MoveCaretToPointer(const pDispPointer: IDisplayPointer; fScrollIntoView: Integer;
      eDir: _CARET_DIRECTION): HRESULT; stdcall;
    function MoveCaretToPointerEx(const pDispPointer: IDisplayPointer; fVisible: Integer;
      fScrollIntoView: Integer; eDir: _CARET_DIRECTION): HRESULT; stdcall;
    function MoveMarkupPointerToCaret(const pIMarkupPointer: IMarkupPointer): HRESULT; stdcall;
    function MoveDisplayPointerToCaret(const pDispPointer: IDisplayPointer): HRESULT; stdcall;
    function IsVisible(out pIsVisible: Integer): HRESULT; stdcall;
    function Show(fScrollIntoView: Integer): HRESULT; stdcall;
    function Hide: HRESULT; stdcall;
    function InsertText(var pText: Word; lLen: Integer): HRESULT; stdcall;
    function scrollIntoView: HRESULT; stdcall;
    function GetLocation(out pPoint: TPoint; fTranslate: Integer): HRESULT; stdcall;
    function GetCaretDirection(out peDir: _CARET_DIRECTION): HRESULT; stdcall;
    function SetCaretDirection(eDir: _CARET_DIRECTION): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IDisplayPointer
// Flags:     (0)
// GUID:      {3050F69E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDisplayPointer = interface(IUnknown)
    ['{3050F69E-98B5-11CF-BB82-00AA00BDCE0B}']
    function moveToPoint(ptPoint: TPoint; eCoordSystem: _COORD_SYSTEM;
      const pElementContext: IHTMLElement; dwHitTestOptions: LongWord;
      out pdwHitTestResults: LongWord): HRESULT; stdcall;
    function MoveUnit(eMoveUnit: _DISPLAY_MOVEUNIT; lXPos: Integer): HRESULT; stdcall;
    function PositionMarkupPointer(const pMarkupPointer: IMarkupPointer): HRESULT; stdcall;
    function MoveToPointer(const pDispPointer: IDisplayPointer): HRESULT; stdcall;
    function SetPointerGravity(eGravity: _POINTER_GRAVITY): HRESULT; stdcall;
    function GetPointerGravity(out peGravity: _POINTER_GRAVITY): HRESULT; stdcall;
    function SetDisplayGravity(eGravity: _DISPLAY_GRAVITY): HRESULT; stdcall;
    function GetDisplayGravity(out peGravity: _DISPLAY_GRAVITY): HRESULT; stdcall;
    function IsPositioned(out pfPositioned: Integer): HRESULT; stdcall;
    function Unposition: HRESULT; stdcall;
    function IsEqualTo(const pDispPointer: IDisplayPointer; out pfIsEqual: Integer): HRESULT; stdcall;
    function IsLeftOf(const pDispPointer: IDisplayPointer; out pfIsLeftOf: Integer): HRESULT; stdcall;
    function IsRightOf(const pDispPointer: IDisplayPointer; out pfIsRightOf: Integer): HRESULT; stdcall;
    function IsAtBOL(out pfBOL: Integer): HRESULT; stdcall;
    function MoveToMarkupPointer(const pPointer: IMarkupPointer;
      const pDispLineContext: IDisplayPointer): HRESULT; stdcall;
    function scrollIntoView: HRESULT; stdcall;
    function GetLineInfo(out ppLineInfo: ILineInfo): HRESULT; stdcall;
    function GetFlowElement(out ppLayoutElement: IHTMLElement): HRESULT; stdcall;
    function QueryBreaks(out pdwBreaks: LongWord): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: ILineInfo
// Flags:     (0)
// GUID:      {3050F7E2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ILineInfo = interface(IUnknown)
    ['{3050F7E2-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_x(out p: Integer): HRESULT; stdcall;
    function Get_baseLine(out p: Integer): HRESULT; stdcall;
    function Get_textDescent(out p: Integer): HRESULT; stdcall;
    function Get_textHeight(out p: Integer): HRESULT; stdcall;
    function Get_lineDirection(out p: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementSegment
// Flags:     (0)
// GUID:      {3050F68F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementSegment = interface(ISegment)
    ['{3050F68F-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetElement(out ppIElement: IHTMLElement): HRESULT; stdcall;
    function SetPrimary(fPrimary: Integer): HRESULT; stdcall;
    function IsPrimary(out pfPrimary: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHighlightSegment
// Flags:     (0)
// GUID:      {3050F690-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHighlightSegment = interface(ISegment)
    ['{3050F690-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: IHighlightRenderingServices
// Flags:     (0)
// GUID:      {3050F606-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHighlightRenderingServices = interface(IUnknown)
    ['{3050F606-98B5-11CF-BB82-00AA00BDCE0B}']
    function AddSegment(const pDispPointerStart: IDisplayPointer;
      const pDispPointerEnd: IDisplayPointer;
      const pIRenderStyle: IHTMLRenderStyle; out ppISegment: IHighlightSegment): HRESULT; stdcall;
    function MoveSegmentToPointers(const pISegment: IHighlightSegment;
      const pDispPointerStart: IDisplayPointer;
      const pDispPointerEnd: IDisplayPointer): HRESULT; stdcall;
    function RemoveSegment(const pISegment: IHighlightSegment): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IDisplayServices
// Flags:     (0)
// GUID:      {3050F69D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDisplayServices = interface(IUnknown)
    ['{3050F69D-98B5-11CF-BB82-00AA00BDCE0B}']
    function CreateDisplayPointer(out ppDispPointer: IDisplayPointer): HRESULT; stdcall;
    function TransformRect(var pRect: TRect; eSource: _COORD_SYSTEM; eDestination: _COORD_SYSTEM;
      const pIElement: IHTMLElement): HRESULT; stdcall;
    function TransformPoint(var pPoint: TPoint; eSource: _COORD_SYSTEM;
      eDestination: _COORD_SYSTEM; const pIElement: IHTMLElement): HRESULT; stdcall;
    function GetCaret(out ppCaret: IHTMLCaret): HRESULT; stdcall;
    function GetComputedStyle(const pPointer: IMarkupPointer;
      out ppComputedStyle: IHTMLComputedStyle): HRESULT; stdcall;
    function ScrollRectIntoView(const pIElement: IHTMLElement; rect: TRect): HRESULT; stdcall;
    function HasFlowLayout(const pIElement: IHTMLElement; out pfHasFlowLayout: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLComputedStyle
// Flags:     (0)
// GUID:      {3050F6C3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLComputedStyle = interface(IUnknown)
    ['{3050F6C3-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_bold(out p: WordBool): HRESULT; stdcall;
    function Get_italic(out p: WordBool): HRESULT; stdcall;
    function Get_underline(out p: WordBool): HRESULT; stdcall;
    function Get_overline(out p: WordBool): HRESULT; stdcall;
    function Get_strikeOut(out p: WordBool): HRESULT; stdcall;
    function Get_subScript(out p: WordBool): HRESULT; stdcall;
    function Get_superScript(out p: WordBool): HRESULT; stdcall;
    function Get_explicitFace(out p: WordBool): HRESULT; stdcall;
    function Get_fontWeight(out p: Integer): HRESULT; stdcall;
    function Get_fontSize(out p: Integer): HRESULT; stdcall;
    function Get_fontName(out p: Word): HRESULT; stdcall;
    function Get_hasBgColor(out p: WordBool): HRESULT; stdcall;
    function Get_textColor(out p: LongWord): HRESULT; stdcall;
    function Get_backgroundColor(out p: LongWord): HRESULT; stdcall;
    function Get_preFormatted(out p: WordBool): HRESULT; stdcall;
    function Get_direction(out p: WordBool): HRESULT; stdcall;
    function Get_blockDirection(out p: WordBool): HRESULT; stdcall;
    function Get_OL(out p: WordBool): HRESULT; stdcall;
    function isEqual(const pComputedStyle: IHTMLComputedStyle; out pfEqual: WordBool): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHtmlDlgSafeHelper
// Flags:     (4096) Dispatchable
// GUID:      {3050F81A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHtmlDlgSafeHelper = interface(IDispatch)
    ['{3050F81A-98B5-11CF-BB82-00AA00BDCE0B}']
    function choosecolordlg(initColor: OleVariant; out rgbColor: OleVariant): HRESULT; stdcall;
    function getCharset(const fontName: WideString; out charset: OleVariant): HRESULT; stdcall;
    function Get_fonts(out p: IDispatch): HRESULT; stdcall;
    function Get_BlockFormats(out p: IDispatch): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IBlockFormats
// Flags:     (4096) Dispatchable
// GUID:      {3050F830-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IBlockFormats = interface(IDispatch)
    ['{3050F830-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get__newEnum(out p: IUnknown): HRESULT; stdcall;
    function Get_Count(out p: Integer): HRESULT; stdcall;
    function item(var pvarIndex: OleVariant; out pbstrBlockFormat: WideString): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IFontNames
// Flags:     (4096) Dispatchable
// GUID:      {3050F839-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IFontNames = interface(IDispatch)
    ['{3050F839-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get__newEnum(out p: IUnknown): HRESULT; stdcall;
    function Get_Count(out p: Integer): HRESULT; stdcall;
    function item(var pvarIndex: OleVariant; out pbstrFontName: WideString): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: ICSSFilter
// Flags:     (0)
// GUID:      {3050F3EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICSSFilter = interface(IUnknown)
    ['{3050F3EC-98B5-11CF-BB82-00AA00BDCE0B}']
    function SetSite(const pSink: ICSSFilterSite): HRESULT; stdcall;
    function OnAmbientPropertyChange(dispid: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: ISecureUrlHost
// Flags:     (0)
// GUID:      {C81984C4-74C8-11D2-BAA9-00C04FC2040E}
// *********************************************************************//
  ISecureUrlHost = interface(IUnknown)
    ['{C81984C4-74C8-11D2-BAA9-00C04FC2040E}']
    function ValidateSecureUrl(out pfAllow: Integer; var pchUrlInQuestion: Word; dwFlags: LongWord): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupServices
// Flags:     (0)
// GUID:      {3050F4A0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupServices = interface(IUnknown)
    ['{3050F4A0-98B5-11CF-BB82-00AA00BDCE0B}']
    function CreateMarkupPointer(out ppPointer: IMarkupPointer): HRESULT; stdcall;
    function CreateMarkupContainer(out ppMarkupContainer: IMarkupContainer): HRESULT; stdcall;
// !! API change
//    function createElement(tagID: _ELEMENT_TAG_ID; pchAttributes: PWord;
//                           out ppElement: IHTMLElement): HRESULT; stdcall;
    function createElement(tagID: _ELEMENT_TAG_ID; const pchAttributes: WideString;
      out ppElement: IHTMLElement): HRESULT; stdcall;
    function CloneElement(const pElemCloneThis: IHTMLElement; out ppElementTheClone: IHTMLElement): HRESULT; stdcall;
    function InsertElement(const pElementInsert: IHTMLElement; const pPointerStart: IMarkupPointer;
      const pPointerFinish: IMarkupPointer): HRESULT; stdcall;
    function RemoveElement(const pElementRemove: IHTMLElement): HRESULT; stdcall;
    function remove(const pPointerStart: IMarkupPointer; const pPointerFinish: IMarkupPointer): HRESULT; stdcall;
    function Copy(const pPointerSourceStart: IMarkupPointer;
      const pPointerSourceFinish: IMarkupPointer; const pPointerTarget: IMarkupPointer): HRESULT; stdcall;
    function move(const pPointerSourceStart: IMarkupPointer;
      const pPointerSourceFinish: IMarkupPointer; const pPointerTarget: IMarkupPointer): HRESULT; stdcall;
    // !! API fix decl
    function InsertText(const pchText: PWideChar; cch: Integer; const pPointerTarget: IMarkupPointer): HRESULT; stdcall;
    // !! API fix decl
    function ParseString(pchHTML: PWideString; dwFlags: LongWord;
      out ppContainerResult: IMarkupContainer;
      const ppPointerStart: IMarkupPointer; const ppPointerFinish: IMarkupPointer): HRESULT; stdcall;
    // !! API fix decl
    function ParseGlobal(const hglobalHTML: HGLOBAL; dwFlags: LongWord;
      out ppContainerResult: IMarkupContainer;
      const pPointerStart: IMarkupPointer; const pPointerFinish: IMarkupPointer): HRESULT; stdcall;
    function IsScopedElement(const pElement: IHTMLElement; out pfScoped: Integer): HRESULT; stdcall;
    function GetElementTagId(const pElement: IHTMLElement; out ptagId: _ELEMENT_TAG_ID): HRESULT; stdcall;
    function GetTagIDForName(const bstrName: WideString; out ptagId: _ELEMENT_TAG_ID): HRESULT; stdcall;
    function GetNameForTagID(tagID: _ELEMENT_TAG_ID; out pbstrName: WideString): HRESULT; stdcall;
    function MovePointersToRange(const pIRange: IHTMLTxtRange; const pPointerStart: IMarkupPointer;
      const pPointerFinish: IMarkupPointer): HRESULT; stdcall;
    function MoveRangeToPointers(const pPointerStart: IMarkupPointer;
      const pPointerFinish: IMarkupPointer; const pIRange: IHTMLTxtRange): HRESULT; stdcall;
// !! API Change
//    function BeginUndoUnit(var pchTitle: Word): HRESULT; stdcall;
    function BeginUndoUnit(const pchTitle: WideString): HRESULT; stdcall;
    function EndUndoUnit: HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupServices2
// Flags:     (0)
// GUID:      {3050F682-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupServices2 = interface(IMarkupServices)
    ['{3050F682-98B5-11CF-BB82-00AA00BDCE0B}']
    // !! API fix decl
    function ParseGlobalEx(hglobalHTML: HGLOBAL; dwFlags: DWord;
      const pContext: IMarkupContainer;
      out ppContainerResult: IMarkupContainer;
      const pPointerStart: IMarkupPointer; const pPointerFinish: IMarkupPointer): HRESULT; stdcall;
{                          (hglobalHTML: HGLOBAL; dwFlags: DWord;
                           const pContext: IMarkupContainer;
                           out ppContainerResult: IMarkupContainer;
                           const pPointerStart: IMarkupPointer; const pPointerFinish: IMarkupPointer): HRESULT; stdcall;}
    // !! API fix decl
    function ValidateElements(const pPointerStart: IMarkupPointer;
      const pPointerFinish: IMarkupPointer;
      const pPointerTarget: IMarkupPointer;
      pPointerStatus: IMarkupPointer;
      out ppElemFailBottom: IHTMLElement; out ppElemFailTop: IHTMLElement): HRESULT; stdcall;
    function SaveSegmentsToClipboard(const pSegmentList: ISegmentList; dwFlags: LongWord): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLChangePlayback
// Flags:     (0)
// GUID:      {3050F6E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLChangePlayback = interface(IUnknown)
    ['{3050F6E0-98B5-11CF-BB82-00AA00BDCE0B}']
// !! API change
//    function ExecChange(var pbRecord: Byte; fForward: Integer): HRESULT; stdcall;
    function ExecChange(pbRecord: PByte; fForward: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupPointer2
// Flags:     (0)
// GUID:      {3050F675-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupPointer2 = interface(IMarkupPointer)
    ['{3050F675-98B5-11CF-BB82-00AA00BDCE0B}']
    function IsAtWordBreak(out pfAtBreak: Integer): HRESULT; stdcall;
    function GetMarkupPosition(out plMP: Integer): HRESULT; stdcall;
    function MoveToMarkupPosition(const pContainer: IMarkupContainer; lMP: Integer): HRESULT; stdcall;
    function MoveUnitBounded(muAction: _MOVEUNIT_ACTION; const pIBoundary: IMarkupPointer): HRESULT; stdcall;
    function IsInsideURL(const pRight: IMarkupPointer; out pfResult: Integer): HRESULT; stdcall;
    function MoveToContent(const pIElement: IHTMLElement; fAtStart: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupTextFrags
// Flags:     (0)
// GUID:      {3050F5FA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupTextFrags = interface(IUnknown)
    ['{3050F5FA-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetTextFragCount(out pcFrags: Integer): HRESULT; stdcall;
    function GetTextFrag(iFrag: Integer; out pbstrFrag: WideString;
      const pPointerFrag: IMarkupPointer): HRESULT; stdcall;
    function RemoveTextFrag(iFrag: Integer): HRESULT; stdcall;
    function InsertTextFrag(iFrag: Integer; const bstrInsert: WideString;
      const pPointerInsert: IMarkupPointer): HRESULT; stdcall;
    function FindTextFragFromMarkupPointer(const pPointerFind: IMarkupPointer; out piFrag: Integer;
      out pfFragFound: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IXMLGenericParse
// Flags:     (0)
// GUID:      {E4E23071-4D07-11D2-AE76-0080C73BC199}
// *********************************************************************//
  IXMLGenericParse = interface(IUnknown)
    ['{E4E23071-4D07-11D2-AE76-0080C73BC199}']
    function SetGenericParse(fDoGeneric: WordBool): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLEditHost
// Flags:     (0)
// GUID:      {3050F6A0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEditHost = interface(IUnknown)
    ['{3050F6A0-98B5-11CF-BB82-00AA00BDCE0B}']
    function SnapRect(const pIElement: IHTMLElement; var prcNew: TRect; eHandle: _ELEMENT_CORNER): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLEditHost2
// Flags:     (0)
// GUID:      {3050F848-98B5-11CF-BB82-00AA00BDCE0D}
// *********************************************************************//
  IHTMLEditHost2 = interface(IHTMLEditHost)
    ['{3050F848-98B5-11CF-BB82-00AA00BDCE0D}']
    function PreDrag: HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: ISequenceNumber
// Flags:     (0)
// GUID:      {3050F6C1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISequenceNumber = interface(IUnknown)
    ['{3050F6C1-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetSequenceNumber(nCurrent: Integer; out pnNew: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IIMEServices
// Flags:     (0)
// GUID:      {3050F6CA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IIMEServices = interface(IUnknown)
    ['{3050F6CA-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetActiveIMM(out ppActiveIMM: IActiveIMMApp): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: ISelectionServicesListener
// Flags:     (0)
// GUID:      {3050F699-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISelectionServicesListener = interface(IUnknown)
    ['{3050F699-98B5-11CF-BB82-00AA00BDCE0B}']
    function BeginSelectionUndo: HRESULT; stdcall;
    function EndSelectionUndo: HRESULT; stdcall;
    function OnSelectedElementExit(const pIElementStart: IMarkupPointer;
      const pIElementEnd: IMarkupPointer;
      const pIElementContentStart: IMarkupPointer;
      const pIElementContentEnd: IMarkupPointer): HRESULT; stdcall;
    function OnChangeType(eType: _SELECTION_TYPE; const pIListener: ISelectionServicesListener): HRESULT; stdcall;
    function GetTypeDetail(out pTypeDetail: WideString): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: ISelectionServices
// Flags:     (0)
// GUID:      {3050F684-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISelectionServices = interface(IUnknown)
    ['{3050F684-98B5-11CF-BB82-00AA00BDCE0B}']
    function SetSelectionType(eType: _SELECTION_TYPE; const pIListener: ISelectionServicesListener): HRESULT; stdcall;
    function GetMarkupContainer(out ppIContainer: IMarkupContainer): HRESULT; stdcall;
    function AddSegment(const pIStart: IMarkupPointer; const pIEnd: IMarkupPointer;
      out ppISegmentAdded: ISegment): HRESULT; stdcall;
    function AddElementSegment(const pIElement: IHTMLElement; out ppISegmentAdded: IElementSegment): HRESULT; stdcall;
    function RemoveSegment(const pISegment: ISegment): HRESULT; stdcall;
    function GetSelectionServicesListener(out ppISelectionServicesListener: ISelectionServicesListener): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLEditDesigner
// Flags:     (0)
// GUID:      {3050F662-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEditDesigner = interface(IUnknown)
    ['{3050F662-98B5-11CF-BB82-00AA00BDCE0B}']
    function PreHandleEvent(inEvtDispId: Integer; const pIEventObj: IHTMLEventObj): HRESULT; stdcall;
    function PostHandleEvent(inEvtDispId: Integer; const pIEventObj: IHTMLEventObj): HRESULT; stdcall;
    function TranslateAccelerator(inEvtDispId: Integer; const pIEventObj: IHTMLEventObj): HRESULT; stdcall;
    function PostEditorEventNotify(inEvtDispId: Integer; const pIEventObj: IHTMLEventObj): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLEditServices
// Flags:     (0)
// GUID:      {3050F663-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEditServices = interface(IUnknown)
    ['{3050F663-98B5-11CF-BB82-00AA00BDCE0B}']
    function AddDesigner(const pIDesigner: IHTMLEditDesigner): HRESULT; stdcall;
    function RemoveDesigner(const pIDesigner: IHTMLEditDesigner): HRESULT; stdcall;
    function GetSelectionServices(const pIContainer: IMarkupContainer;
      out ppSelSvc: ISelectionServices): HRESULT; stdcall;
    function MoveToSelectionAnchor(const pIStartAnchor: IMarkupPointer): HRESULT; stdcall;
    function MoveToSelectionEnd(const pIEndAnchor: IMarkupPointer): HRESULT; stdcall;
    function SelectRange(const pStart: IMarkupPointer; const pEnd: IMarkupPointer;
      eType: _SELECTION_TYPE): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLEditServices2
// Flags:     (0)
// GUID:      {3050F812-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEditServices2 = interface(IHTMLEditServices)
    ['{3050F812-98B5-11CF-BB82-00AA00BDCE0B}']
    function MoveToSelectionAnchorEx(const pIStartAnchor: IDisplayPointer): HRESULT; stdcall;
    function MoveToSelectionEndEx(const pIEndAnchor: IDisplayPointer): HRESULT; stdcall;
    function FreezeVirtualCaretPos(fReCompute: Integer): HRESULT; stdcall;
    function UnFreezeVirtualCaretPos(fReset: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// DispIntf:  HTMLNamespaceEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F6BD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLNamespaceEvents = dispinterface
    ['{3050F6BD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid - 609;
  end;

// *********************************************************************//
// Interface: IHTMLNamespace
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6BB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNamespace = interface(IDispatch)
    ['{3050F6BB-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_name: WideString; safecall;
    function Get_urn: WideString; safecall;
    function Get_tagNames: IDispatch; safecall;
    function Get_readyState: OleVariant; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    procedure doImport(const bstrImplementationUrl: WideString); safecall;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; safecall;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); safecall;
    property name: WideString read Get_name;
    property urn: WideString read Get_urn;
    property tagNames: IDispatch read Get_tagNames;
    property readyState: OleVariant read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
  end;

// *********************************************************************//
// DispIntf:  IHTMLNamespaceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6BB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNamespaceDisp = dispinterface
    ['{3050F6BB-98B5-11CF-BB82-00AA00BDCE0B}']
    property name: WideString readonly dispid 1000;
    property urn: WideString readonly dispid 1001;
    property tagNames: IDispatch readonly dispid 1002;
    property readyState: OleVariant readonly dispid - 2147412996;
    property onreadystatechange: OleVariant dispid - 2147412087;
    procedure doImport(const bstrImplementationUrl: WideString); dispid 1003;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid - 2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid - 2147417604;
  end;

// *********************************************************************//
// Interface: IHTMLNamespaceCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6B8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNamespaceCollection = interface(IDispatch)
    ['{3050F6B8-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function item(index: OleVariant): IDispatch; safecall;
    function add(const bstrNamespace: WideString; const bstrUrn: WideString;
      implementationUrl: OleVariant): IDispatch; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLNamespaceCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6B8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNamespaceCollectionDisp = dispinterface
    ['{3050F6B8-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1000;
    function item(index: OleVariant): IDispatch; dispid 0;
    function add(const bstrNamespace: WideString; const bstrUrn: WideString;
      implementationUrl: OleVariant): IDispatch; dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLPainter
// Flags:     (0)
// GUID:      {3050F6A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPainter = interface(IUnknown)
    ['{3050F6A6-98B5-11CF-BB82-00AA00BDCE0B}']
    // !! API fix decl
    function Draw(rcBounds: TRect; rcUpdate: TRect; lDrawFlags: Integer;
      hdc: hdc; pvDrawObject: Pointer): HRESULT; stdcall;
    function onresize(size: TSize): HRESULT; stdcall;
    function GetPainterInfo(out pInfo: _HTML_PAINTER_INFO): HRESULT; stdcall;
    function HitTestPoint(pt: TPoint; out pbHit: BOOL; out plPartID: Longint): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLPaintSite
// Flags:     (0)
// GUID:      {3050F6A7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPaintSite = interface(IUnknown)
    ['{3050F6A7-98B5-11CF-BB82-00AA00BDCE0B}']
    function InvalidatePainterInfo: HRESULT; stdcall;
    // !! API fix decl
    function InvalidateRect(prcInvalid: PRect): HRESULT; stdcall;
    function InvalidateRegion(var rgnInvalid: Pointer): HRESULT; stdcall;
    function GetDrawInfo(lFlags: Integer; out pDrawInfo: _HTML_PAINT_DRAW_INFO): HRESULT; stdcall;
    function TransformGlobalToLocal(ptGlobal: TPoint; out pptLocal: TPoint): HRESULT; stdcall;
    function TransformLocalToGlobal(ptLocal: TPoint; out pptGlobal: TPoint): HRESULT; stdcall;
    function GetHitTestCookie(out plCookie: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLPainterEventInfo
// Flags:     (0)
// GUID:      {3050F6DF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPainterEventInfo = interface(IUnknown)
    ['{3050F6DF-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetEventInfoFlags(out plEventInfoFlags: Integer): HRESULT; stdcall;
    function GetEventTarget(var ppElement: IHTMLElement): HRESULT; stdcall;
    function SetCursor(lPartID: Integer): HRESULT; stdcall;
    function StringFromPartID(lPartID: Integer; out pbstrPart: WideString): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLPainterOverlay
// Flags:     (0)
// GUID:      {3050F7E3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPainterOverlay = interface(IUnknown)
    ['{3050F7E3-98B5-11CF-BB82-00AA00BDCE0B}']
    function onmove(rcDevice: TRect): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLIPrintCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6B5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIPrintCollection = interface(IDispatch)
    ['{3050F6B5-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(index: Integer): IUnknown; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLIPrintCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6B5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIPrintCollectionDisp = dispinterface
    ['{3050F6B5-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1501;
    property _newEnum: IUnknown readonly dispid - 4;
    function item(index: Integer): IUnknown; dispid 0;
  end;

// *********************************************************************//
// Interface: IEnumPrivacyRecords
// Flags:     (0)
// GUID:      {3050F844-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IEnumPrivacyRecords = interface(IUnknown)
    ['{3050F844-98B5-11CF-BB82-00AA00BDCE0B}']
    function reset: HRESULT; stdcall;
    function GetSize(out pSize: LongWord): HRESULT; stdcall;
    function GetPrivacyImpacted(out pState: Integer): HRESULT; stdcall;
    function Next(out pbstrUrl: WideString; out pbstrPolicyRef: WideString;
      out pdwReserved: Integer; out pdwPrivacyFlags: LongWord): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLDialog
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F216-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialog = interface(IDispatch)
    ['{3050F216-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_dialogTop(p: OleVariant); safecall;
    function Get_dialogTop: OleVariant; safecall;
    procedure Set_dialogLeft(p: OleVariant); safecall;
    function Get_dialogLeft: OleVariant; safecall;
    procedure Set_dialogWidth(p: OleVariant); safecall;
    function Get_dialogWidth: OleVariant; safecall;
    procedure Set_dialogHeight(p: OleVariant); safecall;
    function Get_dialogHeight: OleVariant; safecall;
    function Get_dialogArguments: OleVariant; safecall;
    function Get_menuArguments: OleVariant; safecall;
    procedure Set_returnValue(p: OleVariant); safecall;
    function Get_returnValue: OleVariant; safecall;
    procedure close; safecall;
    function toString: WideString; safecall;
    property dialogTop: OleVariant read Get_dialogTop write Set_dialogTop;
    property dialogLeft: OleVariant read Get_dialogLeft write Set_dialogLeft;
    property dialogWidth: OleVariant read Get_dialogWidth write Set_dialogWidth;
    property dialogHeight: OleVariant read Get_dialogHeight write Set_dialogHeight;
    property dialogArguments: OleVariant read Get_dialogArguments;
    property menuArguments: OleVariant read Get_menuArguments;
    property returnValue: OleVariant read Get_returnValue write Set_returnValue;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDialogDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F216-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialogDisp = dispinterface
    ['{3050F216-98B5-11CF-BB82-00AA00BDCE0B}']
    property dialogTop: OleVariant dispid - 2147418108;
    property dialogLeft: OleVariant dispid - 2147418109;
    property dialogWidth: OleVariant dispid - 2147418107;
    property dialogHeight: OleVariant dispid - 2147418106;
    property dialogArguments: OleVariant readonly dispid 25000;
    property menuArguments: OleVariant readonly dispid 25013;
    property returnValue: OleVariant dispid 25001;
    procedure close; dispid 25011;
    function toString: WideString; dispid 25012;
  end;

// *********************************************************************//
// Interface: IHTMLDialog2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialog2 = interface(IDispatch)
    ['{3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_status(const p: WideString); safecall;
    function Get_status: WideString; safecall;
    procedure Set_resizable(const p: WideString); safecall;
    function Get_resizable: WideString; safecall;
    property status: WideString read Get_status write Set_status;
    property resizable: WideString read Get_resizable write Set_resizable;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDialog2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialog2Disp = dispinterface
    ['{3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}']
    property status: WideString dispid 25014;
    property resizable: WideString dispid 25015;
  end;

// *********************************************************************//
// Interface: IHTMLDialog3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F388-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialog3 = interface(IDispatch)
    ['{3050F388-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_unadorned(const p: WideString); safecall;
    function Get_unadorned: WideString; safecall;
    procedure Set_dialogHide(const p: WideString); safecall;
    function Get_dialogHide: WideString; safecall;
    property unadorned: WideString read Get_unadorned write Set_unadorned;
    property dialogHide: WideString read Get_dialogHide write Set_dialogHide;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDialog3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F388-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialog3Disp = dispinterface
    ['{3050F388-98B5-11CF-BB82-00AA00BDCE0B}']
    property unadorned: WideString dispid 25016;
    property dialogHide: WideString dispid 25007;
  end;

// *********************************************************************//
// Interface: IHTMLModelessInit
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLModelessInit = interface(IDispatch)
    ['{3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_parameters: OleVariant; safecall;
    function Get_optionString: OleVariant; safecall;
    function Get_moniker: IUnknown; safecall;
    function Get_document: IUnknown; safecall;
    property parameters: OleVariant read Get_parameters;
    property optionString: OleVariant read Get_optionString;
    property moniker: IUnknown read Get_moniker;
    property document: IUnknown read Get_document;
  end;

// *********************************************************************//
// DispIntf:  IHTMLModelessInitDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLModelessInitDisp = dispinterface
    ['{3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}']
    property parameters: OleVariant readonly dispid 25000;
    property optionString: OleVariant readonly dispid 25001;
    property moniker: IUnknown readonly dispid 25006;
    property document: IUnknown readonly dispid 25007;
  end;

// *********************************************************************//
// Interface: IHTMLPopup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F666-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPopup = interface(IDispatch)
    ['{3050F666-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Show(x: Integer; y: Integer; w: Integer; h: Integer; var pElement: OleVariant); safecall;
    procedure Hide; safecall;
    function Get_document: IHTMLDocument; safecall;
    function Get_isOpen: WordBool; safecall;
    property document: IHTMLDocument read Get_document;
    property isOpen: WordBool read Get_isOpen;
  end;

// *********************************************************************//
// DispIntf:  IHTMLPopupDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F666-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPopupDisp = dispinterface
    ['{3050F666-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Show(x: Integer; y: Integer; w: Integer; h: Integer; var pElement: OleVariant); dispid 27001;
    procedure Hide; dispid 27002;
    property document: IHTMLDocument readonly dispid 27003;
    property isOpen: WordBool readonly dispid 27004;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLPopup
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F589-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLPopup = dispinterface
    ['{3050F589-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Show(x: Integer; y: Integer; w: Integer; h: Integer; var pElement: OleVariant); dispid 27001;
    procedure Hide; dispid 27002;
    property document: IHTMLDocument readonly dispid 27003;
    property isOpen: WordBool readonly dispid 27004;
  end;

// *********************************************************************//
// Interface: IHTMLAppBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAppBehavior = interface(IDispatch)
    ['{3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_applicationName(const p: WideString); safecall;
    function Get_applicationName: WideString; safecall;
    procedure Set_version(const p: WideString); safecall;
    function Get_version: WideString; safecall;
    procedure Set_icon(const p: WideString); safecall;
    function Get_icon: WideString; safecall;
    procedure Set_singleInstance(const p: WideString); safecall;
    function Get_singleInstance: WideString; safecall;
    procedure Set_minimizeButton(const p: WideString); safecall;
    function Get_minimizeButton: WideString; safecall;
    procedure Set_maximizeButton(const p: WideString); safecall;
    function Get_maximizeButton: WideString; safecall;
    procedure Set_border(const p: WideString); safecall;
    function Get_border: WideString; safecall;
    procedure Set_borderStyle(const p: WideString); safecall;
    function Get_borderStyle: WideString; safecall;
    procedure Set_sysMenu(const p: WideString); safecall;
    function Get_sysMenu: WideString; safecall;
    procedure Set_caption(const p: WideString); safecall;
    function Get_caption: WideString; safecall;
    procedure Set_windowState(const p: WideString); safecall;
    function Get_windowState: WideString; safecall;
    procedure Set_showInTaskBar(const p: WideString); safecall;
    function Get_showInTaskBar: WideString; safecall;
    function Get_commandLine: WideString; safecall;
    property applicationName: WideString read Get_applicationName write Set_applicationName;
    property version: WideString read Get_version write Set_version;
    property icon: WideString read Get_icon write Set_icon;
    property singleInstance: WideString read Get_singleInstance write Set_singleInstance;
    property minimizeButton: WideString read Get_minimizeButton write Set_minimizeButton;
    property maximizeButton: WideString read Get_maximizeButton write Set_maximizeButton;
    property border: WideString read Get_border write Set_border;
    property borderStyle: WideString read Get_borderStyle write Set_borderStyle;
    property sysMenu: WideString read Get_sysMenu write Set_sysMenu;
    property caption: WideString read Get_caption write Set_caption;
    property windowState: WideString read Get_windowState write Set_windowState;
    property showInTaskBar: WideString read Get_showInTaskBar write Set_showInTaskBar;
    property commandLine: WideString read Get_commandLine;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAppBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAppBehaviorDisp = dispinterface
    ['{3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}']
    property applicationName: WideString dispid 5000;
    property version: WideString dispid 5001;
    property icon: WideString dispid 5002;
    property singleInstance: WideString dispid 5003;
    property minimizeButton: WideString dispid 5005;
    property maximizeButton: WideString dispid 5006;
    property border: WideString dispid 5007;
    property borderStyle: WideString dispid 5008;
    property sysMenu: WideString dispid 5009;
    property caption: WideString dispid 5010;
    property windowState: WideString dispid 5011;
    property showInTaskBar: WideString dispid 5012;
    property commandLine: WideString readonly dispid 5013;
  end;

// *********************************************************************//
// Interface: IHTMLAppBehavior2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAppBehavior2 = interface(IDispatch)
    ['{3050F5C9-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_contextMenu(const p: WideString); safecall;
    function Get_contextMenu: WideString; safecall;
    procedure Set_innerBorder(const p: WideString); safecall;
    function Get_innerBorder: WideString; safecall;
    procedure Set_scroll(const p: WideString); safecall;
    function Get_scroll: WideString; safecall;
    procedure Set_scrollFlat(const p: WideString); safecall;
    function Get_scrollFlat: WideString; safecall;
    procedure Set_selection(const p: WideString); safecall;
    function Get_selection: WideString; safecall;
    property contextMenu: WideString read Get_contextMenu write Set_contextMenu;
    property innerBorder: WideString read Get_innerBorder write Set_innerBorder;
    property scroll: WideString read Get_scroll write Set_scroll;
    property scrollFlat: WideString read Get_scrollFlat write Set_scrollFlat;
    property selection: WideString read Get_selection write Set_selection;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAppBehavior2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAppBehavior2Disp = dispinterface
    ['{3050F5C9-98B5-11CF-BB82-00AA00BDCE0B}']
    property contextMenu: WideString dispid 5014;
    property innerBorder: WideString dispid 5015;
    property scroll: WideString dispid 5016;
    property scrollFlat: WideString dispid 5017;
    property selection: WideString dispid 5018;
  end;

// *********************************************************************//
// Interface: IHTMLAppBehavior3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5CD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAppBehavior3 = interface(IDispatch)
    ['{3050F5CD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_navigable(const p: WideString); safecall;
    function Get_navigable: WideString; safecall;
    property navigable: WideString read Get_navigable write Set_navigable;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAppBehavior3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5CD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAppBehavior3Disp = dispinterface
    ['{3050F5CD-98B5-11CF-BB82-00AA00BDCE0B}']
    property navigable: WideString dispid 5019;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAppBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F57C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAppBehavior = dispinterface
    ['{3050F57C-98B5-11CF-BB82-00AA00BDCE0B}']
    property applicationName: WideString dispid 5000;
    property version: WideString dispid 5001;
    property icon: WideString dispid 5002;
    property singleInstance: WideString dispid 5003;
    property minimizeButton: WideString dispid 5005;
    property maximizeButton: WideString dispid 5006;
    property border: WideString dispid 5007;
    property borderStyle: WideString dispid 5008;
    property sysMenu: WideString dispid 5009;
    property caption: WideString dispid 5010;
    property windowState: WideString dispid 5011;
    property showInTaskBar: WideString dispid 5012;
    property commandLine: WideString readonly dispid 5013;
    property contextMenu: WideString dispid 5014;
    property innerBorder: WideString dispid 5015;
    property scroll: WideString dispid 5016;
    property scrollFlat: WideString dispid 5017;
    property selection: WideString dispid 5018;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLInputButtonElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLInputButtonElement = dispinterface
    ['{3050F51E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid - 2147413011;
    property name: WideString dispid - 2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid - 2147418036;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    function createTextRange: IHTMLTxtRange; dispid 2006;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLInputTextElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F520-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLInputTextElement = dispinterface
    ['{3050F520-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid - 2147413011;
    property name: WideString dispid - 2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid - 2147418036;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    property defaultValue: WideString dispid - 2147413029;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid - 2147412082;
    property onselect: OleVariant dispid - 2147412102;
    property readOnly: WordBool dispid 2005;
    function createTextRange: IHTMLTxtRange; dispid 2006;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLInputFileElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F542-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLInputFileElement = dispinterface
    ['{3050F542-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    property type_: WideString readonly dispid 2000;
    property name: WideString dispid - 2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid - 2147418036;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid - 2147412082;
    property onselect: OleVariant dispid - 2147412102;
    property value: WideString dispid - 2147413011;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLOptionButtonElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F509-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLOptionButtonElement = dispinterface
    ['{3050F509-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    property value: WideString dispid - 2147413011;
    property type_: WideString readonly dispid 2000;
    property name: WideString dispid - 2147418112;
    property checked: WordBool dispid 2009;
    property defaultChecked: WordBool dispid 2008;
    property onchange: OleVariant dispid - 2147412082;
    property disabled: WordBool dispid - 2147418036;
    property status: WordBool dispid 2001;
    property indeterminate: WordBool dispid 2007;
    property form: IHTMLFormElement readonly dispid - 2147416108;
    property dataFld: WideString dispid - 2147417091;
    property dataSrc: WideString dispid - 2147417090;
    property dataFormatAs: WideString dispid - 2147417089;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLInputImage
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLInputImage = dispinterface
    ['{3050F51D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant;
      lFlags: Integer); dispid - 2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid - 2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid - 2147417609;
    property className: WideString dispid - 2147417111;
    property id: WideString dispid - 2147417110;
    property tagName: WideString readonly dispid - 2147417108;
    property parentElement: IHTMLElement readonly dispid - 2147418104;
    property style: IHTMLStyle readonly dispid - 2147418038;
    property onhelp: OleVariant dispid - 2147412099;
    property onclick: OleVariant dispid - 2147412104;
    property ondblclick: OleVariant dispid - 2147412103;
    property onkeydown: OleVariant dispid - 2147412107;
    property onkeyup: OleVariant dispid - 2147412106;
    property onkeypress: OleVariant dispid - 2147412105;
    property onmouseout: OleVariant dispid - 2147412111;
    property onmouseover: OleVariant dispid - 2147412112;
    property onmousemove: OleVariant dispid - 2147412108;
    property onmousedown: OleVariant dispid - 2147412110;
    property onmouseup: OleVariant dispid - 2147412109;
    property document: IDispatch readonly dispid - 2147417094;
    property title: WideString dispid - 2147418043;
    property language: WideString dispid - 2147413012;
    property onselectstart: OleVariant dispid - 2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid - 2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid - 2147417092;
    property sourceIndex: Integer readonly dispid - 2147417088;
    property recordNumber: OleVariant readonly dispid - 2147417087;
    property lang: WideString dispid - 2147413103;
    property offsetLeft: Integer readonly dispid - 2147417104;
    property offsetTop: Integer readonly dispid - 2147417103;
    property offsetWidth: Integer readonly dispid - 2147417102;
    property offsetHeight: Integer readonly dispid - 2147417101;
    property offsetParent: IHTMLElement readonly dispid - 2147417100;
    property innerHTML: WideString dispid - 2147417086;
    property innerText: WideString dispid - 2147417085;
    property outerHTML: WideString dispid - 2147417084;
    property outerText: WideString dispid - 2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid - 2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid - 2147417081;
    property parentTextEdit: IHTMLElement readonly dispid - 2147417080;
    property isTextEdit: WordBool readonly dispid - 2147417078;
    procedure click; dispid - 2147417079;
    property filters: IHTMLFiltersCollection readonly dispid - 2147417077;
    property ondragstart: OleVariant dispid - 2147412077;
    function toString: WideString; dispid - 2147417076;
    property onbeforeupdate: OleVariant dispid - 2147412091;
    property onafterupdate: OleVariant dispid - 2147412090;
    property onerrorupdate: OleVariant dispid - 2147412074;
    property onrowexit: OleVariant dispid - 2147412094;
    property onrowenter: OleVariant dispid - 2147412093;
    property ondatasetchanged: OleVariant dispid - 2147412072;
    property ondataavailable: OleVariant dispid - 2147412071;
    property ondatasetcomplete: OleVariant dispid - 2147412070;
    property onfilterchange: OleVariant dispid - 2147412069;
    property children: IDispatch readonly dispid - 2147417075;
    property all: IDispatch readonly dispid - 2147417074;
    property tabIndex: Smallint dispid - 2147418097;
    procedure focus; dispid - 2147416112;
    property accessKey: WideString dispid - 2147416107;
    property onblur: OleVariant dispid - 2147412097;
    property onfocus: OleVariant dispid - 2147412098;
    property onresize: OleVariant dispid - 2147412076;
    procedure blur; dispid - 2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid - 2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid - 2147416094;
    property clientHeight: Integer readonly dispid - 2147416093;
    property clientWidth: Integer readonly dispid - 2147416092;
    property clientTop: Integer readonly dispid - 2147416091;
    property clientLeft: Integer readonly dispid - 2147416090;
    property type_: WideString readonly dispid 2000;
    property disabled: WordBool dispid - 2147418036;
    property border: OleVariant dispid 2012;
    property vspace: Integer dispid 2013;
    property hspace: Integer dispid 2014;
    property alt: WideString dispid 2010;
    property src: WideString dispid 2011;
    property lowsrc: WideString dispid 2015;
    property vrml: WideString dispid 2016;
    property dynsrc: WideString dispid 2017;
    property readyState: WideString readonly dispid - 2147412996;
    property complete: WordBool readonly dispid 2018;
    property loop: OleVariant dispid 2019;
    property align: WideString dispid - 2147418039;
    property onload: OleVariant dispid - 2147412080;
    property onerror: OleVariant dispid - 2147412083;
    property onabort: OleVariant dispid - 2147412084;
    property name: WideString dispid - 2147418112;
    property width: Integer dispid - 2147418107;
    property height: Integer dispid - 2147418106;
    property Start: WideString dispid 2020;
  end;

// *********************************************************************//
// Interface: IElementNamespace
// Flags:     (0)
// GUID:      {3050F671-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementNamespace = interface(IUnknown)
    ['{3050F671-98B5-11CF-BB82-00AA00BDCE0B}']
    function AddTag(const bstrTagName: WideString; lFlags: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementNamespaceTable
// Flags:     (0)
// GUID:      {3050F670-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementNamespaceTable = interface(IUnknown)
    ['{3050F670-98B5-11CF-BB82-00AA00BDCE0B}']
    // !! API fix decl
    function AddNamespace(const bstrNamespace: WideString; const bstrUrn: WideString;
      lFlags: Integer; const pvarFactory: OleVariant): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementNamespaceFactory
// Flags:     (0)
// GUID:      {3050F672-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementNamespaceFactory = interface(IUnknown)
    ['{3050F672-98B5-11CF-BB82-00AA00BDCE0B}']
    function create(pNamespace: IElementNamespace): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementNamespaceFactory2
// Flags:     (0)
// GUID:      {3050F805-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementNamespaceFactory2 = interface(IElementNamespaceFactory)
    ['{3050F805-98B5-11CF-BB82-00AA00BDCE0B}']
    function CreateWithImplementation(pNamespace: IElementNamespace;
      const bstrImplementation: WideString): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementNamespaceFactoryCallback
// Flags:     (0)
// GUID:      {3050F7FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementNamespaceFactoryCallback = interface(IUnknown)
    ['{3050F7FD-98B5-11CF-BB82-00AA00BDCE0B}']
    function Resolve(const bstrNamespace, bstrTagName, bstrAttrs: WideString;
      pNamespace: IElementNamespace): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSiteOM2
// Flags:     (0)
// GUID:      {3050F659-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSiteOM2 = interface(IElementBehaviorSiteOM)
    ['{3050F659-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetDefaults(out ppDefaults: IHTMLElementDefaults): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorCategory
// Flags:     (0)
// GUID:      {3050F4ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorCategory = interface(IUnknown)
    ['{3050F4ED-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetCategory(out ppchCategory: PWideChar): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSiteCategory
// Flags:     (0)
// GUID:      {3050F4EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSiteCategory = interface(IUnknown)
    ['{3050F4EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetRelatedBehaviors(lDirection: Integer; pchCategory: PWideChar;
      out ppEnumerator: IEnumUnknown): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IEnumUnknown
// Flags:     (0)
// GUID:      {00000100-0000-0000-C000-000000000046}
// *********************************************************************//
  IEnumUnknown = interface(IUnknown)
    ['{00000100-0000-0000-C000-000000000046}']
    function RemoteNext(celt: LongWord; out rgelt: IUnknown; out pceltFetched: LongWord): HRESULT; stdcall;
    function Skip(celt: LongWord): HRESULT; stdcall;
    function reset: HRESULT; stdcall;
    function Clone(out ppEnum: IEnumUnknown): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSubmit
// Flags:     (0)
// GUID:      {3050F646-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSubmit = interface(IUnknown)
    ['{3050F646-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetSubmitInfo(pSubmitData: IHTMLSubmitData): HRESULT; stdcall;
    function reset: HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorFocus
// Flags:     (0)
// GUID:      {3050F6B6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorFocus = interface(IUnknown)
    ['{3050F6B6-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetFocusRect(var pRect: TRect): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorLayout
// Flags:     (0)
// GUID:      {3050F6BA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorLayout = interface(IUnknown)
    ['{3050F6BA-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetSize(dwFlags: Integer; sizeContent: TSize; var pptTranslateBy: TPoint;
      var pptTopLeft: TPoint; var psizeProposed: TSize): HRESULT; stdcall;
    function GetLayoutInfo(out plLayoutInfo: Integer): HRESULT; stdcall;
    function GetPosition(lFlags: Integer; var pptTopLeft: TPoint): HRESULT; stdcall;
    // !! API fix decl
    function MapSize(psizeIn: PSize; out prcOut: TRect): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorLayout2
// Flags:     (0)
// GUID:      {3050F846-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorLayout2 = interface(IUnknown)
    ['{3050F846-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetTextDescent(out plDescent: Integer): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSiteLayout
// Flags:     (0)
// GUID:      {3050F6B7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSiteLayout = interface(IUnknown)
    ['{3050F6B7-98B5-11CF-BB82-00AA00BDCE0B}']
    function InvalidateLayoutInfo: HRESULT; stdcall;
    function InvalidateSize: HRESULT; stdcall;
    function GetMediaResolution(out psizeResolution: TSize): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSiteLayout2
// Flags:     (0)
// GUID:      {3050F847-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSiteLayout2 = interface(IUnknown)
    ['{3050F847-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetFontInfo(out plf: tagLOGFONTW): HRESULT; stdcall;
  end;

// *********************************************************************//
// Interface: IHostBehaviorInit
// Flags:     (0)
// GUID:      {3050F842-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHostBehaviorInit = interface(IUnknown)
    ['{3050F842-98B5-11CF-BB82-00AA00BDCE0B}']
    function PopulateNamespaceTable: HRESULT; stdcall;
  end;
{$IFDEF DELPHI6_UP}
{$WARN SYMBOL_PLATFORM ON}
{$ENDIF}

implementation

end.
