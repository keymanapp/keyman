##Package: Custom
##Status: Completed (II)
----------------------------------------------------------------------------------------------------
@@JvTrayIcon.pas
Summary
    Contains the TJvTrayIcon component.
Author
  Sébastien Buysse
----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.WndProc
Summary
  Responds to windows messages sent to the component.
Description
  WndProc responds to messages concerning the tray icon, sent by the system.
Parameters
  Mesg - Represents the Windows message.

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.VisibleInTaskList
Summary
  Determines if the application is shown in the task manager.
Description
  Set VisibleInTaskList to true to show the application in the windows task manager application. Set
  VisibleInTaskList to false to remove the application from the task manager: the application
  prevents itself from being closed when the user logs off. The application closes only when the
  system is shut down.
  
  This only applies to Windows 95, 98 and me.
  Note
  This is a protected property.
See Also
  TJvTrayIcon.Visibility

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Visibility
Summary
  Specifies options and default appearance for the tray icon.
Description
  Use the Visibility property to customize the appearance and functionality of the tray icon. Use
  these flags to specify:
  
  * Whether the application should be automatically restored, if the user clicks or double-clicks the
    tray icon.
  * Whether the application should be automatically hidden, if the user clicks or double-clicks the  
  tray icon.
  * Whether the application should be visible on start-up.

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Snap
Summary
  Specifies whether the hiding and restoring of the application should be animated.
Description
  Set Snap to true to make the hiding and restoring of the application appear suddenly. Set Snap to
  false to make it appear animated.
  
  Use Visibility to automate the hiding and restoring of the application.
See Also
  TJvTrayIcon.Visibility

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.PopupMenu
Summary
  Identifies the pop-up menu associated with the control.
Description
  Assign a value to PopupMenu to make a pop-up menu appear when the user clicks the tray icon with
  the <I>right</I> mouse.
  
  If no OnDblClick event handler is assigned, TJvTrayIcon automatically executes the default shortcut
  menu command, if the user double-clicks the tray icon.
See Also
  TJvTrayIcon.DropDownMenu, TJvTrayIcon.OnContextPopup

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.ShowApplication
Summary
  Restores a minimized application to its normal size.
Description
  Call ShowApplication to restore the minimized application and show the application button on the
  taskbar. Call HideApplication to minimize the application and remove the application button on the
  taskbar.
  
  \Include tvAutoHide in Visibility to automatically remove the application button on the taskbar if
  the user minimizes the application.
  
  \Include tvRestoreClick or tvRestoreDbClick in Visibility to automatically restore the minimized application and the vis
  bility of the application button when the user clicks the tray icon with the left button, or
  double-clicks the tray icon, respectively.
  
  \Include tvMinimizeClick or tvMinimizeDbClick in Visibility to automatically hide the application
  and the application button when the user clicks the tray icon with the left button, or
  double-clicks the tray icon, respectively.
  
  \Include tvAutoHideIcon in Visibility to automatically remove the icon from the tray area if the
  application is visible.
See Also
  TJvTrayIcon.HideApplication, TJvTrayIcon.Visibility

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnMouseUp
Summary
  Occurs when the user releases a mouse button that was pressed with the mouse pointer over the tray
  icon.
Description
  Use an OnMouseUp event handler to implement special processing when the user releases a mouse
  button.
  
  The OnMouseUp event handler can respond to left, right, or center mouse button presses and shift
  key plus mouse-button combinations. Shift keys are the Shift, Ctrl, and Alt keys. X and Y are the
  screen coordinates of the mouse pointer.
See Also
  TJvTrayIcon.OnClick, TJvTrayIcon.OnDblClick, TJvTrayIcon.OnMouseDown

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnMouseMove
Summary
  Occurs when the user moves the mouse pointer while the mouse pointer is over the tray icon.
Description
  Use the OnMouseMove event handler to respond when the mouse pointer moves after the control has
  captured the mouse.
  
  Use the Shift parameter of the OnMouseDown event handler, to determine to the state of the shift
  keys and mouse buttons. Shift keys are the Shift, Ctrl, and Alt keys or shift key-mouse button
  combinations. X and Y are the screen coordinates of the mouse pointer.
See Also
  TJvTrayIcon.OnMouseDown, TJvTrayIcon.OnMouseUp

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnDblClick
Summary
  Occurs when the user double-clicks a mouse button when the mouse pointer is over the tray icon.
Description
  Use the OnDblClick event to respond to mouse double-clicks.
  
  Typically, double-clicking a tray icon causes the application to executes the default shortcut menu
  command.
  
  Use the tvRestoreDbClick and tvMinimizeDbClick flags from Visibility to automate the process of
  hiding and restoring the application upon double-clicking of the tray icon.
  Note
  Assigning an OnDblClick event handler overrides the tvRestoreDbClick and tvMinimizeDbClick flag in
  Visibility; thus, the application isn't automatically restored or hidden when the user
  double-clicks the tray icon.
See Also
  TJvTrayIcon.OnClick, TJvTrayIcon.OnMouseDown, TJvTrayIcon.OnMouseUp, TJvTrayIcon.Visibility

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnMouseDown
Summary
  Occurs when the user presses a mouse button with the mouse pointer over the tray icon.
Description
  Use the OnMouseDown event handler to implement any special processing that should occur as a result
  of pressing a mouse button with the mouse pointer over the icon that represents the application on
  the Windows taskbar notification area.
  
  The OnMouseDown event handler can respond to left, right, or center mouse button presses and shift
  key plus mouse-button combinations. Shift keys are the Shift, Ctrl, and Alt keys. X and Y are the
  screen coordinates of the mouse pointer.
See Also
  TJvTrayIcon.OnClick, TJvTrayIcon.OnDblClick, TJvTrayIcon.OnMouseUp

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnContextPopup
Summary
  Occurs when the user right-clicks the tray icon or otherwise invokes the popup menu (such as using
  the keyboard).
Description
  The OnContextPopup handler is called when the user uses the mouse or keyboard to request a popup
  menu. The OnContextPopup event is generated by a WM_CONTEXTMENU message, which is itself generated
  by the user clicking the right mouse button or by pressing Shift+F10 key.
  
  The OnContextPopup event can be used to override the automatic context menu that appears when the
  control has an associated popup menu. In this last case, if the event handler displays its own
  menu, it should set the Handled parameter to true to suppress the default context menu.
  
  The handler’s MousePos parameter indicates the position of the mouse, in client coordinates.
  Windows moves the mouse pointer to the tray icon when the event was not generated by a mouse click,
  thus the
  MousePos parameter is always valid.
  
  To show a custom popup menu, use the following code:
  <CODE>
  procedure TForm1.JvTrayIcon1ContextPopup(Sender: TObject; MousePos: TPoint;
    var Handled: Boolean);
  begin
    Handled := True;
  
    SetForegroundWindow(JvTrayIcon1.Handle);
    YourCustomPopupMenu1.Popup(MousePos.X, MousePos.Y);
    PostMessage(JvTrayIcon1.Handle, WM_NULL, 0, 0);
  end; </CODE>
See Also
  TJvTrayIcon.PopupMenu

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnBalloonShow
Summary
  Occurs when the balloon is shown.
Description
  Use the OnBalloonShow event handler to respond when a balloon ToolTip is shown.
See Also
  TJvTrayIcon.OnBalloonClick, TJvTrayIcon.OnBalloonHide

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnClick
Summary
  Occurs when the user clicks the tray icon.
Description
  Use the OnClick event handler to respond when the user clicks on the icon that represents the
  application on the Windows taskbar notification area.
  
  Typically, clicking a tray icon causes the application to display a window with additional
  information; right-clicking displays a shortcut menu.
  
  Use the tvRestoreClick and tvMinimizeClick flags from Visibility to automate the process of hiding
  and restoring the application upon clicking of the tray icon with the left button.
See Also
  TJvTrayIcon.OnContextPopup, TJvTrayIcon.OnDblClick, TJvTrayIcon.OnMouseDown, TJvTrayIcon.OnMouseUp,
  TJvTrayIcon.Visibility

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnAnimate
Summary
  Occurs when TJvTrayIcon changes the tray icon.
Description
  \Write an OnAnimate event handler to take specific action whenever TJvTrayIcon changes the tray
  icon in response to animate events. When Animated is set to true, TJvTrayIcon iterates through the
  icons
  in the image list specified by Icons and displays each icon in that list - one at a time - in the
  notification area. Property Delay specifies the amount of time each icon is shown in the tray. Each
  time the specified time passes, TJvTrayIcon changes the tray icon to the next icon in the image
  list, and an OnAnimate event occurs.
Parameters
  Sender     - The TJvTrayIcon component that has sent this event.
  ImageIndex - The new index of the icon in the image list specified by Icons.
See Also
  TJvTrayIcon.Animated, TJvTrayIcon.Delay, TJvTrayIcon.IconIndex, TJvTrayIcon.Icons

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnBalloonClick
Summary
  Occurs when the balloon is dismissed because the user clicked the mouse.
Description
  Use the OnBalloonClick event handler to respond when the user clicks on the balloon ToolTip.
See Also
  TJvTrayIcon.OnBalloonHide, TJvTrayIcon.OnBalloonShow

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.OnBalloonHide
Summary
  Occurs when the balloon disappears
Description
  Use the OnBalloonClick event handler to respond when the balloon ToolTip disappears, e.g., when the
  icon is deleted. This message is not sent if the balloon is dismissed because of a timeout or mouse
  click by the user.
See Also
  TJvTrayIcon.OnBalloonClick, TJvTrayIcon.OnBalloonShow

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.IconVisible
Summary
  Specifies if a tray icon is shown.
Description
  Read IconVisible to determine whether an icon is actually shown when Active is set to True. It is
  possible that the shell failed to add an icon to the tray.
  
  Set IconVisible to True to show the tray icon. Note that Active must be set to True and if flag
  tvAutoHideIcon is included in property Visibility, then the application must be minimized otherwise
  no tray icon is shown.
  
  Set IconVisible to False to hide the tray icon. Note that you can also set Active to False.
See Also
  TJvTrayIcon.Active

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Icons
Summary
  Specifies the icons that are used for the animation.
Description
  Use Icons to supply a list of icons that are used for the animation in the task bar notification area. When Active and Animated are set to true, TJvTrayIcon will iterate through the icons in the image list specified by Icons and display each icon in that list for Delay milliseconds in the notification area. If
  Animated is true, the icon selected by setting IconIndex will be displayed instead. If IconIndex =
  -1 or Icons is nil, the icon from the Icon property is displayed.
See Also
  TJvTrayIcon.Delay, TJvTrayIcon.Active, TJvTrayIcon.Animated, TJvTrayIcon.Icon, TJvTrayIcon.IconIndex

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.IconIndex
Summary
  Specifies the index of the icon displayed in the Windows taskbar notification area.
Description
  Use IconIndex to get or set the index of the icon displayed in the Windows taskbar notification
  area.
  The index identifies an icon in the control's Icons property.
  Note
  Setting IconIndex = -1, restores the icon selected for the Icon property.
See Also
  TJvTrayIcon.CurrentIcon, TJvTrayIcon.Icon, TJvTrayIcon.Icons

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Icon
Summary
  Determines which icon represents the application on the Windows taskbar notification area.
Description
  Use Icon to assign a specific icon to represent the application. TJvTrayIcon displays Icon on the
  Windows task bar notification area, when Active is set to true.
  
  To avoid icon distortion, be aware that notification area icons have different levels of support
  under different versions of Windows. Windows 95, Windows 98, and Microsoft Windows NT 4.0 support
  icons of up to 4 bits per pixel (BPP). Windows Millennium Edition (Windows Me) and Windows 2000
  support icons of a color depth up to the current display mode. Windows XP supports icons of up to 32
  BPP.
  
  If no icon is specified, TJvTrayIcon uses the application's icon, specified by Application.Icon.
See Also
  TJvTrayIcon.Active, TJvTrayIcon.CurrentIcon, TJvTrayIcon.IconIndex, TJvTrayIcon.Icons

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.HideBalloon
Summary
  Hides a balloon ToolTip.
Description
  Call HideBalloon to hide balloons displayed by calling BalloonHint.
See Also
  TJvTrayIcon.BalloonHint

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Hint
Summary
  Contains the text \string that can appear when the user moves the mouse over the tray icon.
Description
  Use the Hint property to provide a \string as the standard ToolTip for the tray icon. Hint can have
  a maximum of 64 characters. For version 5.0 and later, Hint can have a maximum of 128 characters.
See Also
  TJvTrayIcon.AcceptBalloons, TJvTrayIcon.BalloonHint

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.HideApplication
Summary
  Hides the application.
Description
  Call HideApplication to minimize the application and remove the application button on the taskbar.
  Call ShowApplication to restore the minimized application and show the application button on the
  taskbar.
  
  \Include tvAutoHide in Visibility to automatically remove the application button on the taskbar if
  the user minimizes the application.
  
  \Include tvRestoreClick or tvRestoreDbClick in Visibility to automatically restore the application and the vis
  bility of the application button when the user clicks the tray icon with the left button, or
  double-clicks the tray icon, respectively.
  
  \Include tvMinimizeClick or tvMinimizeDbClick in Visibility to automatically hide the application
  and application button when the user clicks the tray icon with the left button, or double-clicks
  the tray icon, respectively.
  
  \Include tvAutoHideIcon in Visibility to automatically remove the icon from the tray area if the
  application is visible.
See Also
  TJvTrayIcon.ShowApplication, TJvTrayIcon.Visibility

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.GetIconRect
Summary
  Returns the rectangle of the tray icon.
Description
  Call GetIconRect to obtain the rectangle of the tray icon. The rectangle is returned as the
  IconRect parameter.
  
  For example, you could use GetIconRect to display a balloon using the TJvBalloonHint component at
  the icon position in the tray:
  <CODE>
  var
    R: TRect;
  begin
    if JvTrayIcon1.GetIconRect(R) then
      JvBalloonHint1.ActivateHintRect(R, 'Header', 'Hint');
  end; </CODE>
Parameters
  IconRect - The rectangle of the tray icon.
Return value
  True if the rectangle could be retrieved. If the icon is hidden or some error occurred, GetIconRect
  returns false.

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.DropDownMenu
Summary
  Identifies a pop-up menu associated with the tray icon.
Description
  Assign a value to DropDownMenu to make a menu appear when the <I>left</I> button is pressed when
  the mouse is over the icon in the taskbar notification area.
See Also
  TJvTrayIcon.OnClick, TJvTrayIcon.PopupMenu

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.DoMouseUp
Summary
  Responds when the user releases the mouse.
Description
  Do not call DoMouseUp. It is called automatically when the user releases the mouse.
  
  If the left mouse button is released and tvRestoreClick or tvMinimizeClick is include in Visibility,
  DoMouseUp restores the visibility of the application or hides the application, respectively.
  Finally it triggers the OnMouseUp and OnClick event.
Parameters
  Button - Determines which mouse button the user pressed.
  Shift  - Indicates which keys (Shift, Ctrl, and Alt) were down when the user pressed the mouse     
       button.
  X      - Indicates the new x-coordinate of the mouse pointer.
  Y      - Indicates the new y-coordinate of the mouse pointer.
See Also
  TJvTrayIcon.OnClick, TJvTrayIcon.OnMouseUp, TJvTrayIcon.PopupMenu, TJvTrayIcon.Visibility

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.DoMouseMove
Summary
  Responds when the user moves the mouse pointer over the tray icon.
Description
  Do not call MouseMove. It is called automatically when the user moves the mouse pointer over the
  icon. As implemented in TJvTrayIcon, DoMouseMove triggers the OnMouseMove event.
Parameters
  Shift - Indicates which keys (Shift, Ctrl, and Alt) were down when the user pressed the mouse      
     button.
  X     - Indicates the new x-coordinate of the mouse pointer.
  Y     - Indicates the new y-coordinate of the mouse pointer.
See Also
  TJvTrayIcon.OnMouseMove

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.DoMouseDown
Summary
  Responds when the user clicks the tray icon with the mouse.
Description
  Do not call DoMouseDown. It is called automatically when the user clicks the icon with the mouse.
  As implemented in TJvTrayIcon, DoMouseDown triggers the OnMouseDown event.
Parameters
  Button - Determines which mouse button the user pressed.
  Shift  - Indicates which keys (Shift, Ctrl, and Alt) were down when the user pressed the mouse     
       button.
  X      - Indicates the new x-coordinate of the mouse pointer.
  Y      - Indicates the new y-coordinate of the mouse pointer.
See Also
  TJvTrayIcon.DropDownMenu, TJvTrayIcon.OnMouseDown, TJvTrayIcon.OnMouseUp

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.DoDoubleClick
Summary
  Responds when the user double-clicks the tray icon.
Description
  Do not call DoDoubleClick. It is called automatically when the user double-clicks the icon. As
  implemented in TJvTrayIcon, DoDoubleClick checks if an OnDblClick event handler is assigned. If so,
  DoDoubleClick triggers the OnDblClick event.
  
  If no OnDblClick event handler is assigned, then it first checks if property PopupMenu is assigned,
  and if so executes the default shortcut menu command of PopupMenu, if it exists. Finally it checks
  if tvRestoreDbClick or tvMinimizeDbClick is included in property Visibility, and if so restores the
  visibility of the application by including tvVisibleTaskBar in property Visibility, or hides the
  application by excluding tvVisibleTaskBar from property Visibility.
Parameters
  Button - Determines which mouse button the user pressed.
  Shift  - Indicates which keys (Shift, Ctrl, and Alt) were down when the user pressed the mouse     
       button.
  X      - Indicates the new x-coordinate of the mouse pointer.
  Y      - Indicates the new y-coordinate of the mouse pointer.
See Also
  TJvTrayIcon.OnDblClick, TJvTrayIcon.PopupMenu, TJvTrayIcon.Visibility

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Delay
Summary
  Determines the amount of time, in milliseconds, between two refreshes of the tray icon.
Description
  Delay determines how frequently a refresh of the tray icon occurs. If Active and Animated are set
  to true, TJvTrayIcon will iterate through the icons in the image list specified by property Icons.
  Each time the specified time passes, TJvTrayIcon changes the tray icon to the next icon in the
  image list.
  
  Use Delay to specify any cardinal value as the interval between refresh events. The default value
  is 100 (1/10 second).
See Also
  TJvTrayIcon.Active, TJvTrayIcon.Animated, TJvTrayIcon.Icons

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.CurrentIcon
Summary
  Contains the currently displayed icon.
Description
  CurrentIcon is a run-time, read-only property that contains the currently displayed icon in the notification are
  . Depending on the values of Animated, Icon, Icons and IconIndex, this property might change at
  run-time. Do not assign an icon to this property. Instead, use Icons, IconIndex or
  Icon to set the icon to display.
See Also
  TJvTrayIcon.Active, TJvTrayIcon.Animated, TJvTrayIcon.Icons

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.BalloonHint
Summary
  Displays a balloon ToolTip.
Description
  Call BalloonHint to display a cartoon-style "balloon" with a stem pointing to the icon in the
  taskbar notification area. Call AcceptBalloons to determine if the system supports balloon ToolTips.
  
  No more than one balloon ToolTip at a time is displayed for the taskbar. If an application attempts
  to display a ToolTip when one is already being displayed, the ToolTip will not appear until the
  existing balloon ToolTip has been visible for at least the system minimum timeout value. For
  example, a balloon ToolTip with \Delay set to 30 seconds has been visible for seven seconds when
  another application attempts to display a balloon ToolTip. If the system minimum timeout is ten
  seconds, the first ToolTip displays for an additional three seconds before being replaced by the
  second ToolTip.
  You can override this behavior by setting parameter CancelPrevious to true, which will cancel the
  currently visible - if any - balloon.
  
  The ToolTip will disappear when clicked, but you can also specify a time-out value. Use the
  OnBalloonClick, OnBalloonHide and OnBalloonShow events to take specific actions when the balloon
  ToolTip is clicked, disappeared or is shown, respectively.
Parameters
  Title          - Contains a title for the balloon ToolTip. This title appears in boldface above the
                    text. It can have a maximum of 63 characters.
  Value          - Contains the text for the balloon ToolTip. It can have a maximum of 255 characters.
                    The text can be either single-line or multiline.
  BalloonType    - Flags that can be set to add an icon to the balloon ToolTip. It is placed to the  
                  left of the title. If Title is an empty \string, the icon is not shown.
  ADelay         - The timeout value, in milliseconds, for a balloon ToolTip. The system enforces    
                minimum and maximum timeout values. \Delay values that are too large are set to the
                    maximum value and values that are too small default to the minimum value. The
                    system minimum and maximum timeout values are currently set at 10 seconds and 30
                    seconds, respectively.
  CancelPrevious - Specifies whether to cancel the previous balloon.
See Also
  TJvTrayIcon.AcceptBalloons, TJvTrayIcon.HideBalloon, TJvTrayIcon.OnBalloonClick,
  TJvTrayIcon.OnBalloonHide, TJvTrayIcon.OnBalloonShow

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.ApplicationVisible
Summary
  Determines whether the application and the application's taskbar button are visible.
Description
  Use the ApplicationVisible property to control the visibility of the application and the
  application's taskbar button. If ApplicationVisible is set to true, TJvTrayIcon restores the
  application to its normal size, if it was minimized, and shows the application's button on the
  taskbar. If ApplicationVisible is set to false, TJvTrayIcon minimizes the application and removes
  the application's button on the taskbar.
  
  Calling the ShowApplication method sets the ApplicationVisible property to true. Calling the
  HideApplication method sets it to false.
  Note
  This is a protected property.
See Also
  TJvTrayIcon.HideApplication, TJvTrayIcon.ShowApplication, TJvTrayIcon.Visibility

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.ApplicationHook
Summary
  Responds to windows messages sent to the application’s main window.
Description
  ApplicationHook is used if tvAutoHide is included in Visibility to respond when the user minimizes
  the application. If so, ApplicationHook removes the application's button on the taskbar, by calling
  the HideApplication method.
Parameters
  Msg - Represents the Windows message.
Return value
  Returns true if it processes the message, and false if it does not.
See Also
  TJvTrayIcon.HideApplication, TJvTrayIcon.Visibility

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Animated
Summary
  Indicates whether the icon is animated.
Description
  Set Animated to true to let TJvTrayIcon iterate through the icons in the image list specified by
  Icons and display each icon in that list - one at a time - in the notification area. Property Delay
  specifies the amount of time each icon is shown in the tray. Set Animated to false to stop the
  animation.
  
  You must also set Active to true to activate the animation.
See Also
  TJvTrayIcon.Delay, TJvTrayIcon.Active, TJvTrayIcon.Icons, TJvTrayIcon.OnAnimate

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.Active
Summary
  Specifies whether the tray icon is shown.
Description
  Examine Active at runtime to determine whether the component is active or not. Setting Active to
  True does actually <I>not</I> imply that an icon is shown in the taskbar notification area.
  
  No icon is shown, although Active is True, if
  
  * Property IconVisible is set to False after Active was set to True.
  * Flag tvAutoHideIcon is included in property Visibility and the application is <B>not</B>  
  minimized.
  * The Windows Shell failed to add the icon to the tray.
  
  Use property IconVisible to determine whether an icon is actually shown in the tray.
  
  Active is false by default, meaning there is no notification icon shown in the taskbar notification
  area.
  
  Setting Active to true adds the icon specified by Icon to the tray at runtime. If Animated is also
  set to true, TJvTrayIcon uses the images in the image list specified by Icons to periodically
  change the notification icon. Property Delay specifies the amount of time between icon changes.
  
  Setting Active to false (the default), removes the notification icon from the taskbar notification
  area.
See Also
  TJvTrayIcon.Delay, TJvTrayIcon.Animated, TJvTrayIcon.Icon, TJvTrayIcon.Icons,
  TJvTrayIcon.IconVisible

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon.AcceptBalloons
Summary
  Indicates whether this system supports balloon ToolTips.
Description
  Balloon ToolTips are only supported for Shell32.dll versions 5.0 and later. Use AcceptBalloons to
  determine whether this system supports balloon ToolTips.
Return value
  Returns true if the Shell32.dll on this system is version 5.0 or later. Returns false if the
  Shell32.dll is a pre-5.0 version.
See Also
  TJvTrayIcon.BalloonHint

----------------------------------------------------------------------------------------------------
@@TBalloonType.btInfo
A balloon containing a blue "i".

----------------------------------------------------------------------------------------------------
@@TBalloonType.btWarning
A balloon containing a yellow exclamation point symbol.

----------------------------------------------------------------------------------------------------
@@TJvTrayIcon
<TITLEIMG TJvTrayIcon>
#JVCLInfo
<GROUP JVCL.FormsAndApp.Application.Tray>
<FLAG Component>
Summary
  Adds an icon to the tray.
Description
  Use TJvTrayIcon to add an icon to the taskbar notification area. Applications commonly put icons in
  the status area of the taskbar - also called "tray" - to serve as status indicators. For example,
  an application might put a printer icon in the status area to show that a print job is under way.
  The status area is located at the right edge of the taskbar (if the taskbar is horizontal) or at
  the bottom (if the taskbar is vertical).
  
  You can provide additional information when the user performs mouse actions, such as moving the
  mouse pointer over the icon or clicking the icon. Use the OnContextPopup, OnClick, OnDblClick,
  OnMouseDown,
  OnMouseMove and OnMouseMove events for this purpose.
  
  Typically, clicking the icon causes the application to display a window with additional
  information, right-clicking displays a shortcut menu, and double-clicking executes the default
  shortcut menu command.
  
  The default behavior of TJvTrayIcon is to automatically hide the application's button on the
  taskbar, if the user minimizes the application and not to react on mouse clicks on the tray icon.
  Use property
  Visibility to alter this behavior. For example, include tvRestoreClick in Visibility, to
  automatically restore the minimized application when the user clicks the tray icon with the left
  button. Use DropDownMenu or PopupMenu to display a shortcut menu, when the user clicks the icon.
  
  Use the Animated, Delay and Icons properties to set up an animation in the tray. When Animated is
  set to true, TJvTrayIcon will start iterating through the image list specified by Icons and display
  each icon for Delay milliseconds in the notification area. Set Animated to false to stop the
  animation.
  
  Call BalloonHint to display a cartoon-style "balloon" with a stem pointing to the icon in the
  taskbar notification area. Not all systems support balloon ToolTips: check AcceptBalloons to
  determine if balloon ToolTips are supported. Use the OnBalloonClick, OnBalloonHide and
  OnBalloonShow to react on user events.

----------------------------------------------------------------------------------------------------
@@TBalloonType.btError
A balloon containing a red stop sign.

----------------------------------------------------------------------------------------------------
@@TAnimateEvent
<TITLE TAnimateEvent type> <COMBINE TJvTrayIcon.OnAnimate>

----------------------------------------------------------------------------------------------------
@@TBalloonType
<TITLE TBalloonType type>
Summary
  Identifies different balloon types.
Description
  The TBalloonType type defines values that represent specific types of balloons. Each balloon type
  shows a different icon to the left of non blank titles.
  
  Possible values are: btNone, btError, btInfo, btWarning.

----------------------------------------------------------------------------------------------------
@@TBalloonType.btNone
A balloon containing no icon.

----------------------------------------------------------------------------------------------------
@@RefreshTray
<TITLE RefreshTray procedure>
Summary
  Deletes icons corresponding to killed programs from the tray.
Description
  When an application that shows an icon in the tray terminates unexpectedly, the tray icon can stay
  visible. Call RefreshTray to delete such icons.

----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP
<TITLE TNotifyIconDataXP type>
Summary
  Delphi implementation of the windows NOTIFYICONDATA structure.
Description
  This structure contains information that the system needs to process taskbar status area messages.
  See MSDN for more information.

----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP.cbSize
Passes the size of the NOTIFYICONDATA data type.

----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP.Wnd
Handle of the window used to receive the notification message.

----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP.uID
Identifier of the icon in the status area.

----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP.uFlags
Array of flags that indicate which of the other members contain valid data.

----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP.uCallbackMessage
Identifier of the notification message sent to the window that is used to receive the messages.

----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP.hIcon
Handle of the icon that is displayed in the taskbar status area.

----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP.szTip
String to be used as the ToolTip text.

----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP.dwState
State of the icon.

----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP.dwStateMask
Specifies which bits of the state member are retrieved or modified.

----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP.szInfo
Contains the text for a balloon ToolTip.

----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP.uTimeOut
The timeout value, in milliseconds, for a balloon ToolTip.

----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP.szInfoTitle
String to be used as the title for a balloon ToolTip.

----------------------------------------------------------------------------------------------------
@@TNotifyIconDataXP.dwInfoFlags
Flags that can be set to add an icon to a balloon ToolTip.

----------------------------------------------------------------------------------------------------
@@TTrayVisibilities
<TITLE TTrayVisibilities type> <COMBINE TTrayVisibility>

----------------------------------------------------------------------------------------------------
@@TTrayVisibility
<TITLE TTrayVisibility type>
Summary
  Defines values describing options and default appearance for the tray icon.
Description
  The TTrayVisibility type defines values describing options and default appearance for the tray icon.
  
  TTrayVisibilities is a set of TTrayVisibility values.

----------------------------------------------------------------------------------------------------
@@TTrayVisibility.tvVisibleTaskBar
Indicates whether the application and the application button on the taskbar are visible.

Use this flag at run-time to show or hide the application. For example removing this flag from <LINK
TJvTrayIcon.Visibility, Visibility> will hide the application.

Use this flag at design-time to indicate whether the application and the application button must be visible when the application starts up. If you want to hide the application at start-up, exclude the tvVisibleTaskBar flag from the Visibility and make sure that the Visible property of the form where on the tray icon component is dropped is set to false.

----------------------------------------------------------------------------------------------------
@@TTrayVisibility.tvVisibleTaskList
(Windows 95, 98 and me.) Shows the application in the windows task manager application. This is default behavior. If this flag is not set, <LINK TJvTrayIcon> removes the application from the task manager: the application prevent itself from being closed when the user logs off. The application close only when the system is shut down.

----------------------------------------------------------------------------------------------------
@@TTrayVisibility.tvAutoHide
Automatically removes the application button from the taskbar when the user minimizes the application.

----------------------------------------------------------------------------------------------------
@@TTrayVisibility.tvAutoHideIcon
Automatically removes the icon from the tray area when the application is visible.

----------------------------------------------------------------------------------------------------
@@TTrayVisibility.tvVisibleDesign
Shows the tray icon in the traybar notification area at design-time.

----------------------------------------------------------------------------------------------------
@@TTrayVisibility.tvRestoreClick
Automatically restores the application and the visibility of the application button on the taskbar, when the user clicks the tray icon with the left button.

----------------------------------------------------------------------------------------------------
@@TTrayVisibility.tvRestoreDbClick
Automatically restores the application and the visibility of the application button on the taskbar, when the user double-clicks the tray icon. Assigning an <LINK TJvTrayIcon.OnDblClick, OnDblClick> event handler overrides this behavior.

----------------------------------------------------------------------------------------------------
@@TTrayVisibility.tvMinimizeClick
Automatically hides the application and removes the application button from the taskbar, when the user clicks the tray icon with the left button.

----------------------------------------------------------------------------------------------------
@@TTrayVisibility.tvMinimizeDbClick
Automatically hides the application and removes the application button from the taskbar, when the user double-clicks the tray icon. Assigning an <LINK TJvTrayIcon.OnDblClick, OnDblClick> event handler overrides this behavior.

----------------------------------------------------------------------------------------------------
@@TTrayVisibility.tvAnimateToTray
Animates the application's main form to the tray icon instead of to the application button on the taskbar, when the user minimizes the application. Same when the user restores the application.

----------------------------------------------------------------------------------------------------
@@TTrayVisibility.tvNoRetryOnFailure
Description for tvNoRetryOnFailure

