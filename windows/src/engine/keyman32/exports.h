//  exports.h
//
//	Header file to export all the functions to a versioned keyman32{version_tag}.dll
//

#pragma comment(linker,"/export:GetActiveKeymanID=KEYMAN32_orig.GetActiveKeymanID,@4")
#pragma comment(linker,"/export:GetKeyboardPreservedKeys=KEYMAN32_orig.GetKeyboardPreservedKeys,@5")
#pragma comment(linker,"/export:KMDisplayIM=KEYMAN32_orig.KMDisplayIM,@6")
#pragma comment(linker,"/export:KMGetActiveKeyboard=KEYMAN32_orig.KMGetActiveKeyboard,@7")
#pragma comment(linker,"/export:KMGetContext=KEYMAN32_orig.KMGetContext,@8")
#pragma comment(linker,"/export:KMGetKeyboardPath=KEYMAN32_orig.KMGetKeyboardPath,@9")
#pragma comment(linker,"/export:KMHideIM=KEYMAN32_orig.KMHideIM,@10")
#pragma comment(linker,"/export:KMQueueAction=KEYMAN32_orig.KMQueueAction,@11")
#pragma comment(linker,"/export:KMSetOutput=KEYMAN32_orig.KMSetOutput,@12")
#pragma comment(linker,"/export:Keyman_Diagnostic=KEYMAN32_orig.Keyman_Diagnostic,@1")
#pragma comment(linker,"/export:Keyman_Exit=KEYMAN32_orig.Keyman_Exit,@13")
#pragma comment(linker,"/export:Keyman_ForceKeyboard=KEYMAN32_orig.Keyman_ForceKeyboard,@14")
#pragma comment(linker,"/export:Keyman_GetInitialised=KEYMAN32_orig.Keyman_GetInitialised,@15")
#pragma comment(linker,"/export:Keyman_GetLastActiveWindow=KEYMAN32_orig.Keyman_GetLastActiveWindow,@16")
#pragma comment(linker,"/export:Keyman_GetLastFocusWindow=KEYMAN32_orig.Keyman_GetLastFocusWindow,@17")
#pragma comment(linker,"/export:Keyman_Initialise=KEYMAN32_orig.Keyman_Initialise,@18")
#pragma comment(linker,"/export:Keyman_PostControllers=KEYMAN32_orig.Keyman_PostControllers,@19")
#pragma comment(linker,"/export:Keyman_PostMasterController=KEYMAN32_orig.Keyman_PostMasterController,@20")
#pragma comment(linker,"/export:Keyman_RegisterControllerThread=KEYMAN32_orig.Keyman_RegisterControllerThread,@21")
#pragma comment(linker,"/export:Keyman_RegisterControllerWindow=KEYMAN32_orig.Keyman_RegisterControllerWindow,@22")
#pragma comment(linker,"/export:Keyman_RegisterMasterController=KEYMAN32_orig.Keyman_RegisterMasterController,@23")
#pragma comment(linker,"/export:Keyman_ResetInitialisation=KEYMAN32_orig.Keyman_ResetInitialisation,@24")
#pragma comment(linker,"/export:Keyman_RestartEngine=KEYMAN32_orig.Keyman_RestartEngine,@25")
#pragma comment(linker,"/export:Keyman_SendMasterController=KEYMAN32_orig.Keyman_SendMasterController,@26")
#pragma comment(linker,"/export:Keyman_StartExit=KEYMAN32_orig.Keyman_StartExit,@27")
#pragma comment(linker,"/export:Keyman_StopForcingKeyboard=KEYMAN32_orig.Keyman_StopForcingKeyboard,@28")
#pragma comment(linker,"/export:Keyman_UnregisterControllerThread=KEYMAN32_orig.Keyman_UnregisterControllerThread,@29")
#pragma comment(linker,"/export:Keyman_UnregisterControllerWindow=KEYMAN32_orig.Keyman_UnregisterControllerWindow,@30")
#pragma comment(linker,"/export:Keyman_UnregisterMasterController=KEYMAN32_orig.Keyman_UnregisterMasterController,@31")
#pragma comment(linker,"/export:Keyman_UpdateTouchPanelVisibility=KEYMAN32_orig.Keyman_UpdateTouchPanelVisibility,@2")
#pragma comment(linker,"/export:Keyman_WriteDebugEvent=KEYMAN32_orig.Keyman_WriteDebugEvent,@32")
#pragma comment(linker,"/export:SetCustomPostKeyCallback=KEYMAN32_orig.SetCustomPostKeyCallback,@3")
#pragma comment(linker,"/export:TIPActivateEx=KEYMAN32_orig.TIPActivateEx,@33")
#pragma comment(linker,"/export:TIPActivateKeyboard=KEYMAN32_orig.TIPActivateKeyboard,@34")
#pragma comment(linker,"/export:TIPIsKeymanRunning=KEYMAN32_orig.TIPIsKeymanRunning,@35")
#pragma comment(linker,"/export:TIPProcessKey=KEYMAN32_orig.TIPProcessKey,@36")
#pragma comment(linker,"/export:kbp_state_get_intermediate_context=KEYMAN32_orig.kbp_state_get_intermediate_context,@37")
#pragma comment(linker,"/export:km_kbp_context_append=KEYMAN32_orig.km_kbp_context_append,@38")
#pragma comment(linker,"/export:km_kbp_context_clear=KEYMAN32_orig.km_kbp_context_clear,@39")
#pragma comment(linker,"/export:km_kbp_context_get=KEYMAN32_orig.km_kbp_context_get,@40")
#pragma comment(linker,"/export:km_kbp_context_item_list_size=KEYMAN32_orig.km_kbp_context_item_list_size,@41")
#pragma comment(linker,"/export:km_kbp_context_items_dispose=KEYMAN32_orig.km_kbp_context_items_dispose,@42")
#pragma comment(linker,"/export:km_kbp_context_items_from_utf16=KEYMAN32_orig.km_kbp_context_items_from_utf16,@43")
#pragma comment(linker,"/export:km_kbp_context_items_from_utf8=KEYMAN32_orig.km_kbp_context_items_from_utf8,@44")
#pragma comment(linker,"/export:km_kbp_context_items_to_utf16=KEYMAN32_orig.km_kbp_context_items_to_utf16,@45")
#pragma comment(linker,"/export:km_kbp_context_items_to_utf8=KEYMAN32_orig.km_kbp_context_items_to_utf8,@46")
#pragma comment(linker,"/export:km_kbp_context_length=KEYMAN32_orig.km_kbp_context_length,@47")
#pragma comment(linker,"/export:km_kbp_context_set=KEYMAN32_orig.km_kbp_context_set,@48")
#pragma comment(linker,"/export:km_kbp_context_shrink=KEYMAN32_orig.km_kbp_context_shrink,@49")
#pragma comment(linker,"/export:km_kbp_event=KEYMAN32_orig.km_kbp_event,@50")
#pragma comment(linker,"/export:km_kbp_get_engine_attrs=KEYMAN32_orig.km_kbp_get_engine_attrs,@51")
#pragma comment(linker,"/export:km_kbp_keyboard_dispose=KEYMAN32_orig.km_kbp_keyboard_dispose,@52")
#pragma comment(linker,"/export:km_kbp_keyboard_get_attrs=KEYMAN32_orig.km_kbp_keyboard_get_attrs,@53")
#pragma comment(linker,"/export:km_kbp_keyboard_get_imx_list=KEYMAN32_orig.km_kbp_keyboard_get_imx_list,@54")
#pragma comment(linker,"/export:km_kbp_keyboard_get_key_list=KEYMAN32_orig.km_kbp_keyboard_get_key_list,@55")
#pragma comment(linker,"/export:km_kbp_keyboard_imx_list_dispose=KEYMAN32_orig.km_kbp_keyboard_imx_list_dispose,@56")
#pragma comment(linker,"/export:km_kbp_keyboard_key_list_dispose=KEYMAN32_orig.km_kbp_keyboard_key_list_dispose,@57")
#pragma comment(linker,"/export:km_kbp_keyboard_load=KEYMAN32_orig.km_kbp_keyboard_load,@58")
#pragma comment(linker,"/export:km_kbp_options_list_size=KEYMAN32_orig.km_kbp_options_list_size,@59")
#pragma comment(linker,"/export:km_kbp_process_event=KEYMAN32_orig.km_kbp_process_event,@60")
#pragma comment(linker,"/export:km_kbp_process_queued_actions=KEYMAN32_orig.km_kbp_process_queued_actions,@61")
#pragma comment(linker,"/export:km_kbp_state_action_items=KEYMAN32_orig.km_kbp_state_action_items,@62")
#pragma comment(linker,"/export:km_kbp_state_clone=KEYMAN32_orig.km_kbp_state_clone,@63")
#pragma comment(linker,"/export:km_kbp_state_context=KEYMAN32_orig.km_kbp_state_context,@64")
#pragma comment(linker,"/export:km_kbp_state_create=KEYMAN32_orig.km_kbp_state_create,@65")
#pragma comment(linker,"/export:km_kbp_state_dispose=KEYMAN32_orig.km_kbp_state_dispose,@66")
#pragma comment(linker,"/export:km_kbp_state_imx_deregister_callback=KEYMAN32_orig.km_kbp_state_imx_deregister_callback,@67")
#pragma comment(linker,"/export:km_kbp_state_imx_register_callback=KEYMAN32_orig.km_kbp_state_imx_register_callback,@68")
#pragma comment(linker,"/export:km_kbp_state_option_lookup=KEYMAN32_orig.km_kbp_state_option_lookup,@69")
#pragma comment(linker,"/export:km_kbp_state_options_to_json=KEYMAN32_orig.km_kbp_state_options_to_json,@70")
#pragma comment(linker,"/export:km_kbp_state_options_update=KEYMAN32_orig.km_kbp_state_options_update,@71")
#pragma comment(linker,"/export:km_kbp_state_queue_action_items=KEYMAN32_orig.km_kbp_state_queue_action_items,@72")
#pragma comment(linker,"/export:km_kbp_state_to_json=KEYMAN32_orig.km_kbp_state_to_json,@73")
