// Generated file - generated by MakeStockKCT at 27/03/2017 11:32:57
unit MessageIdentifierConsts;
interface

type TMessageIdentifier = (SKNull, 

  {Application Strings}

  SKApplicationTitle,
  SKShortApplicationTitle,
  SKDialogSelectLanguage,
  SKUILanguageName,
  SKUILanguageNameWithEnglish,
  SKLanguageCode,
  SKDefaultLanguageCode,
  SKButtonUILanguageDownload,
  SKUILanguageHelp,
  SKMenu_NoKeyboardsInstalled,
  SKDialogUILanguageCreateTranslation,
  SKBalloonClickToSelectKeyboard,
  SKBalloonOSKClosed,
  SKTextEditorCaption,
  SKOnScreenKeyboardCaption,

  {Keyboard Installation/Uninstallation}

  SKPackageAlreadyInstalled,
  SKKeyboardAlreadyInstalled,
  SKKeyboardPartOfPackage,
  SKInstallOnlyAsAdmin,
  SKUninstallOnScreenKeyboard,
  SKUninstallKeyboard,
  SKUninstallPackage,
  SKSelectKeyboardsTitle,
  SKSelectKeyboardsBlurb,
  SKUninstallRequireAdmin,
  SKUninstallPackageFonts,

  {Help File}

  SKOnlineHelpFile,
  SKCouldNotFindHelp,

  {Assorted strings}

  SKDamagedKeyboard,
  SKANSIEncoding,
  SKUnicodeEncoding,
  SK_UIFontName,
  SK_UIFontSize,

  {Message boxes}

  SKDebuggingWarning,
  SKSurrogatesRequiresRestart,
  SKErrorActivatingBrowser,
  SKCouldNotPrintKeyboard,
  SKPackageDoesNotIncludeWelcome,
  SKAddinDoesNotHaveConfiguration,
  SKHintsReset,

  {Program Startup}

  SKOSNotSupported,
  SKSplashVersion,
  SKSplashButtonExit,
  SKCannotStartProduct,
  SKWelcome_PleaseStartKeymanDesktop,

  {Character Map}

  SKUnicodeData_DatabaseCouldNotBeDeleted,
  SKUnicodeData_CouldNotCreateDatabase,
  SKUnicodeData_Build,
  SKUnicodeData_DatabaseLoadFailedRebuild,

  {Standard Controls}

  SKButtonOK,
  SKButtonCancel,
  SKButtonYes,
  SKButtonNo,
  SKButtonHelp,
  SKButtonPrint,
  SKButtonDownload,

  {Option Names}

  kogStartup,
  kogGeneral,
  kogAdvanced,
  koStartWithWindows,
  koShowStartup,
  koShowWelcome,
  koCheckForUpdates,
  koKeyboardHotkeysAreToggle,
  koAltGrCtrlAlt,
  koRunElevatedInVista,
  koTurnOnSurrogates,
  koUnknownLanguage,
  koDebugging,

  {Hotkey Dialog}

  SKChangeHotkeyTitle,
  SKButtonClearHotkey,
  SKSetHotkey_Keyboard,
  SKSetHotkey_Interface,
  SKUnsafeHotkey,
  SKHotkeyConflicts_Keyboard,
  SKHotkeyConflicts_Product,
  SKSetHotkey_Language,

  {Online Update Dialog}

  SKUpdate_NewVersionText,
  SKUpdate_PatchText,
  SKUpdate_UnableToContact,
  SKUpdate_UnableToContact_Error,
  SKUpdate_KeymanText,
  SKUpdate_PackageText,
  SKUpdate_IconTitle,
  SKUpdate_IconText,
  SKUpdate_IconMenuText,
  SKUpdate_IconMenuExit,

  {Select Drive Dialog}

  SKSelectDrive_Title,

  {Download Progress Dialog}

  SKDownloadProgress_Title,

  {Diagnostics}

  SKAllLanguageSettingsTestedOK,
  SKLangCheck_Office,
  SKLangCheck_Office_Office2000,
  SKLangCheck_Office_OfficeXP,
  SKLangCheck_Office_Office2003,
  SKLangCheck_Office_Office2007,
  SKLangCheck_Uniscribe_Install,
  SKLangCheck_Uniscribe_Update,
  SKLangCheck_WindowsLanguage_Link,
  SKLangCheck_WindowsLanguage_Install
);

function MsgIdFromString(const msgid: WideString): TMessageIdentifier;
function StringFromMsgId(const msgid: TMessageIdentifier): WideString;

implementation

const MessageIdentifierNames: array[TMessageIdentifier] of string = ('SKNull', 

  {Application Strings}

  'SKApplicationTitle',
  'SKShortApplicationTitle',
  'SKDialogSelectLanguage',
  'SKUILanguageName',
  'SKUILanguageNameWithEnglish',
  'SKLanguageCode',
  'SKDefaultLanguageCode',
  'SKButtonUILanguageDownload',
  'SKUILanguageHelp',
  'SKMenu_NoKeyboardsInstalled',
  'SKDialogUILanguageCreateTranslation',
  'SKBalloonClickToSelectKeyboard',
  'SKBalloonOSKClosed',
  'SKTextEditorCaption',
  'SKOnScreenKeyboardCaption',

  {Keyboard Installation/Uninstallation}

  'SKPackageAlreadyInstalled',
  'SKKeyboardAlreadyInstalled',
  'SKKeyboardPartOfPackage',
  'SKInstallOnlyAsAdmin',
  'SKUninstallOnScreenKeyboard',
  'SKUninstallKeyboard',
  'SKUninstallPackage',
  'SKSelectKeyboardsTitle',
  'SKSelectKeyboardsBlurb',
  'SKUninstallRequireAdmin',
  'SKUninstallPackageFonts',

  {Help File}

  'SKOnlineHelpFile',
  'SKCouldNotFindHelp',

  {Assorted strings}

  'SKDamagedKeyboard',
  'SKANSIEncoding',
  'SKUnicodeEncoding',
  'SK_UIFontName',
  'SK_UIFontSize',

  {Message boxes}

  'SKDebuggingWarning',
  'SKSurrogatesRequiresRestart',
  'SKErrorActivatingBrowser',
  'SKCouldNotPrintKeyboard',
  'SKPackageDoesNotIncludeWelcome',
  'SKAddinDoesNotHaveConfiguration',
  'SKHintsReset',

  {Program Startup}

  'SKOSNotSupported',
  'SKSplashVersion',
  'SKSplashButtonExit',
  'SKCannotStartProduct',
  'SKWelcome_PleaseStartKeymanDesktop',

  {Character Map}

  'SKUnicodeData_DatabaseCouldNotBeDeleted',
  'SKUnicodeData_CouldNotCreateDatabase',
  'SKUnicodeData_Build',
  'SKUnicodeData_DatabaseLoadFailedRebuild',

  {Standard Controls}

  'SKButtonOK',
  'SKButtonCancel',
  'SKButtonYes',
  'SKButtonNo',
  'SKButtonHelp',
  'SKButtonPrint',
  'SKButtonDownload',

  {Option Names}

  'kogStartup',
  'kogGeneral',
  'kogAdvanced',
  'koStartWithWindows',
  'koShowStartup',
  'koShowWelcome',
  'koCheckForUpdates',
  'koKeyboardHotkeysAreToggle',
  'koAltGrCtrlAlt',
  'koRunElevatedInVista',
  'koTurnOnSurrogates',
  'koUnknownLanguage',
  'koDebugging',

  {Hotkey Dialog}

  'SKChangeHotkeyTitle',
  'SKButtonClearHotkey',
  'SKSetHotkey_Keyboard',
  'SKSetHotkey_Interface',
  'SKUnsafeHotkey',
  'SKHotkeyConflicts_Keyboard',
  'SKHotkeyConflicts_Product',
  'SKSetHotkey_Language',

  {Online Update Dialog}

  'SKUpdate_NewVersionText',
  'SKUpdate_PatchText',
  'SKUpdate_UnableToContact',
  'SKUpdate_UnableToContact_Error',
  'SKUpdate_KeymanText',
  'SKUpdate_PackageText',
  'SKUpdate_IconTitle',
  'SKUpdate_IconText',
  'SKUpdate_IconMenuText',
  'SKUpdate_IconMenuExit',

  {Select Drive Dialog}

  'SKSelectDrive_Title',

  {Download Progress Dialog}

  'SKDownloadProgress_Title',

  {Diagnostics}

  'SKAllLanguageSettingsTestedOK',
  'SKLangCheck_Office',
  'SKLangCheck_Office_Office2000',
  'SKLangCheck_Office_OfficeXP',
  'SKLangCheck_Office_Office2003',
  'SKLangCheck_Office_Office2007',
  'SKLangCheck_Uniscribe_Install',
  'SKLangCheck_Uniscribe_Update',
  'SKLangCheck_WindowsLanguage_Link',
  'SKLangCheck_WindowsLanguage_Install'
);

function StringFromMsgId(const msgid: TMessageIdentifier): WideString;
begin
  Result := MessageIdentifierNames[msgid];
end;

function MsgIdFromString(const msgid: WideString): TMessageIdentifier;
var i: TMessageIdentifier;
begin
  for i := Low(TMessageIdentifier) to High(TMessageIdentifier) do
    if MessageIdentifierNames[i] = msgid then begin Result := i; Exit; end;
  Result := SKNull;
end;

end.
